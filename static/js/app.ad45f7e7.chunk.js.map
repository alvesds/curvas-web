{"version":3,"sources":["assets/logo_variant.png","src/config/config.js","src/services/api.js","src/services/auth.js","src/contexts/auth.js","src/components/Navbar.js","src/screens/Home/index.js","src/components/Breadcrumb.js","src/components/Snackbar.js","src/components/TextInput.js","src/services/hooks/useDebounce.js","src/screens/Question/List.js","src/components/Panel.js","src/screens/Question/View.js","src/screens/Question/Create.js","src/components/BottomNav.js","src/services/avatarText.js","src/screens/Profile/Exercises/index.js","src/screens/Profile/Grades/index.js","src/screens/Profile/Performance/index.js","src/screens/Profile/Ranking/index.js","src/screens/Profile/index.js","src/services/countdown.js","src/screens/Quiz/Conclude.js","src/screens/Quiz/View.js","src/routes/app.routes.js","src/screens/SignIn/index.js","src/screens/SignUp/Form/index.js","src/screens/SignUp/Guide/index.js","src/components/RadioButtonComponent.js","src/screens/SignUp/Type/index.js","src/screens/SignUp/index.js","src/screens/Splash/index.js","src/routes/auth.routes.js","src/routes/index.js","src/contexts/theme.js","App.js","assets/fonts/Roboto/Roboto-Thin.ttf","assets/fonts/Roboto/Roboto-Light.ttf","assets/fonts/Roboto/Roboto-Regular.ttf","assets/fonts/Roboto/Roboto-Bold.ttf","assets/fonts/Roboto/Roboto-Medium.ttf","assets/placeholders/home-art.png"],"names":["module","exports","config","api","url","timeout","theme","DefaultTheme","myOwnProperty","colors","navbar","background","color","bottomNav","primary","onSurface","secondary","tertiary","light","gray","dark","warning","success","danger","lightSuccess","info","roundness","fonts","require","axios","create","baseURL","validateStatus","status","interceptors","request","use","error","Promise","reject","authenticate","login","password","post","email","senha","data","token","user","AsyncStorage","setItem","JSON","stringify","defaults","headers","failed","isAuthenticated","getItem","removeItem","AuthContext","createContext","AuthProvider","children","useState","setUser","loading","setLoading","navigation","useNavigation","useEffect","response","console","log","logout","navigate","parse","loadStoragedData","unauthenticate","alert","message","Provider","value","signed","styles","StyleSheet","logo","width","height","margin","Navbar","onReturn","showExitButton","useContext","openLogoutModal","setOpenLogoutModal","useTheme","toggleLogoutModal","handleSignOut","Appbar","Header","style","backgroundColor","Portal","Modal","visible","onDismiss","contentContainerStyle","padding","alignSelf","borderRadius","Text","fontFamily","marginBottom","Button","icon","onPress","textColor","mode","BackAction","TouchableRipple","rippleColor","Platform","OS","undefined","paddingRight","paddingLeft","Image","source","Content","Action","OnWeb","ScrollView","justifyContent","alignItems","zIndex","View","marginTop","title","textAlign","subtitle","maxWidth","buttonColor","container","flex","fontSize","Home","Breadcrumb","flexDirection","Page","label","link","linkStyles","Icon","IconButton","iconColor","size","true","textDecorationLine","false","StatusBarManager","NativeModules","Snackbar","type","hide","STATUSBAR_HEIGHT","includes","HEIGHT","typeStyling","wrapperStyle","position","top","onIconPress","TextInput","onChangeText","autoCorrect","placeholder","leftIcon","leftPress","rightIcon","rightPress","secure","multiline","rightColor","leftColor","content","rest","left","right","countLines","Math","ceil","round","length","match","placeholderTextColor","underlineColor","outlineColor","numberOfLines","contentStyle","secureTextEntry","useDebounce","delay","search","setSearch","timer","setTimeout","clearTimeout","optionsPerPage","table","tableTitle","text","searchInput","fab","bottom","routes","QuestionList","isFocused","useIsFocused","msg","setSnackbar","snackbar","total","questions","setQuestions","page","setPage","debouncedSearch","itemsPerPage","setItemsPerPage","from","to","min","get","params","getData","ActivityIndicator","animating","DataTable","Title","textStyle","textTitle","sortDirection","map","question","Row","id","Cell","enunciado","Pagination","numberOfPages","onPageChange","numberOfItemsPerPageList","numberOfItemsPerPage","onItemsPerPageChange","showFastPaginationControls","selectPageDropdownLabel","borderColor","FAB","Panel","header","iconPress","tabs","pages","pageIndex","borderWidth","elevation","Tabs","Body","Divider","Object","keys","key","borderBottomColor","borderBottomWidth","minWidth","previewText","scrollView","contentContainer","QuestionContainer","onClose","setPageIndex","inputEnunciado","setInputEnunciado","correctOption","setCorrectOption","options","setOptions","alternativas","alternativa_c","findIndex","el","put","outlineStyle","option","i","filteredOption","newOptions","values","reduce","prev","cur","index","removeOption","selected","String","fromCharCode","parseInt","toLowerCase","optionsSize","QuestionView","route","useRoute","QuestionCreate","BottomNavbar","add","renderScene","onIndexChange","number","BottomNavigation","barStyle","navigationState","renderLabel","props","direction","letterSpacing","fontWeight","lineHeight","avatarAsText","name","split","firstLetter","toUpperCase","secondLetter","description","Exercises","Grades","Performance","chartWidth","setChartWidth","marginLeft","onLayout","event","nativeEvent","layout","x","y","labels","datasets","random","yAxisLabel","yAxisSuffix","yAxisInterval","chartConfig","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","labelColor","propsForDots","r","strokeWidth","stroke","bezier","marginVertical","Ranking","avatar","nome","progress","hits","misses","rank","marginRight","labelStyle","ProgressBar","userBoxContainer","descriptionContainer","button","floatingNavigator","Profile","setIndex","focusedIcon","onRender","flexWrap","BottomNav","SceneMap","grades","trophy","exercises","performance","countdown","ms","humanizeDuration","language","divider","points","resultSubText","resultText","resultBoldText","QuizConclude","statistics","onExit","onReplay","defaultValues","correct","score","setStatistics","QuizContainer","QuizView","currentQuestion","setCurrentQuestion","setSelected","setPoints","setTimer","reset","setReset","onConclude","setOnConclude","stopTimer","exit","result","sort","slice","correctColor","timing","useFocusEffect","useCallback","AppStack","createNativeStackNavigator","AppRoutes","Navigator","screenOptions","headerShown","Screen","component","sm_container","input","square_button","bottomText","SignIn","securePassword","setSecurePassword","username","setUsername","setPassword","StatusBar","pkg","version","maxHeight","Form","formType","secureRePassword","setSecureRePassword","charAt","textbox","Guide","styling","radioText","radio","paddingHorizontal","Type","select","onSelect","setValue","handleValue","RadioButton","Group","Item","uncheckedColor","SignUp","setFormType","unfocusedIcon","guide","form","buttonFixedToBottom","Splash","AuthStack","AuthRoutes","animation","Routes","ThemeContext","ThemeProvider","useFonts","linking","prefixes","screens","splash","home","profile","questionlist","questionview","questioncreate","signin","signup","quizview","App","NavigationContainer"],"mappings":"yEAAAA,EAAOC,QAAU,IAA0B,0C,umECI3C,IA2CeC,EA3CA,CACbC,IAAK,CACHC,IAAI,4BACJC,QAAS,KAEXC,MAAM,EAAD,KACAC,iBAAY,IACfC,eAAe,EACfC,OAAO,EAAD,KACDF,gBAAaE,QAAM,IACtBC,OAAQ,CACNC,WAAY,UACZC,MAAO,WAETC,UAAW,CACTF,WAAY,UACZC,MAAO,SAETE,QAAS,UACTC,UAAW,UACXC,UAAW,UACXC,SAAU,MACVN,WAAY,UACZO,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,QAAS,UACTC,QAAS,UACTC,OAAQ,UACRC,aAAc,UACdC,KAAM,YAERC,UAAW,IAEbC,MAAO,CACL,cAAeC,EAAQ,KACvB,eAAgBA,EAAQ,KACxB,iBAAkBA,EAAQ,KAC1B,cAAeA,EAAQ,KACvB,gBAAiBA,EAAQ,OCxC7B,EAAyB1B,EAAOC,IAAxBC,EAAG,EAAHA,IAAKC,EAAO,EAAPA,QAEPF,EAAM0B,UAAMC,OAAO,CACvBC,QAAS3B,EACTC,UACA2B,eAAgB,SAACC,GAAM,OAAK,KAAOA,EAAS,OAG9C9B,EAAI+B,aAAaC,QAAQC,IAAI,WAAD,WAC1B,UAAOlC,GACL,OAAOA,KACR,mDAH0B,GAG1B,sBACD,UAAOmC,GACL,OAAOC,QAAQC,OAAOF,MACvB,mDAHA,IAMYlC,Q,0kBCjBR,SAAeqC,EAAa,GAAD,+BAgBjC,2BAhBM,aAAkD,IAApBC,EAAK,EAALA,MAAOC,EAAQ,EAARA,SAC1C,QAA6BvC,EAAIwC,KAAK,cAAe,CACnDC,MAAOH,EACPI,MAAOH,IAFHI,EAAI,EAAJA,KAAMb,EAAM,EAANA,OAKZ,GAAe,MAAXA,EAAgB,CAClB,IAAQc,EAAgBD,EAAhBC,MAAOC,EAASF,EAATE,WAETC,UAAaC,QAAQ,oBAAqBH,SAC1CE,UAAaC,QAAQ,mBAAoBC,KAAKC,UAAUJ,IAE9D7C,EAAIkD,SAASC,QAAuB,cAAC,UAAaP,EAGpD,OAAO,GAAEQ,QAAe,MAANtB,IAAU,KAAO,KAAQa,OAC5C,sBAEM,SAAeU,IAAe,+BAcpC,2BAdM,YACL,IAAMR,QAAaC,UAAaQ,QAAQ,oBAClCV,QAAcE,UAAaQ,QAAQ,qBAEzC,SAAIT,IAAQD,KACV5C,EAAIkD,SAASC,QAAuB,cAAC,UAAaP,EAE3C,CACLA,QACAC,aAKL,sBAKA,2BAHM,kBACCC,UAAaS,WAAW,2BACxBT,UAAaS,WAAW,wBAC/B,sB,mBC7BKC,EAAcC,wBAAc,IAErBC,EAAe,SAAH,GAAsB,IAAhBC,EAAQ,EAARA,SAC7B,EAAwBC,mBAAS,MAAK,WAA/Bf,EAAI,KAAEgB,EAAO,KACpB,EAA8BD,oBAAS,GAAK,WAArCE,EAAO,KAAEC,EAAU,KAEpBC,EAAaC,0BAEnBC,qBAAU,WACuB,aAqB9B,OArB8B,OAA/B,YACElE,EAAI+B,aAAaoC,SAASlC,KACxB,SAACkC,GACC,OAAOA,KAET,SAACjC,GAAW,IAAD,EAOT,OANgC,OAAvB,MAALA,GAAe,OAAV,EAALA,EAAOiC,eAAF,EAAL,EAAiBrC,UACnBsC,QAAQC,IAAI,aACZC,IACAT,EAAQ,MACRG,EAAWO,SAAS,WAEfrC,KAIX,IAAMW,SAAeQ,KAAfR,KAENA,GAAQgB,EAAQb,KAAKwB,MAAM3B,IAE3BkB,GAAW,OACZ,uBAtBc,WACgB,wBAuB/BU,KACC,IAEH,IAAMH,EAAS,YDTV,WAAqB,wBCUxBI,GACAb,EAAQ,OAGJvB,EAAK,sBAAG,UAAOA,EAAOC,GAAiC,IAAvBoC,EAAK,uDAAG,aAC5C,QAAsCtC,EAAa,CACjDC,QACAC,aAFIM,EAAI,EAAJA,KAAMO,EAAM,EAANA,OAAQwB,EAAO,EAAPA,QAIpB,GAAIxB,IAAWP,EAGb,OAFAuB,QAAQC,IAAIO,QACZD,EAA0B,kBAAZC,EAAwBA,EAAU,+CAA0C,SAG5Ff,EAAQhB,GACR8B,EAAM,mCAAkC9B,EAAM,cAE/C,qDAbU,GAeX,OACE,cAACW,EAAYqB,SAAQ,CACnBC,MAAO,CAAExC,QAAOgC,SAAQzB,OAAMkC,SAAUlC,IAAQ,EAAiBiB,WAAU,SAE1EH,KAKQH,I,gGC7DTwB,EAASC,UAAWtD,OAAO,CAC/BuD,KAAM,CACJC,MAAO,GACPC,OAAQ,GACRC,OAAQ,KA8IGC,EA1IA,SAAH,GAAqD,IAAD,0CAA9CC,gBAAQ,MAAG,KAAI,MAAEC,sBAAc,OAAQ,EACvD,EAA2BC,qBAAWjC,GAA9BuB,EAAM,EAANA,OAAQT,EAAM,EAANA,OAChB,EAA8CV,oBAAS,GAAM,WAAtD8B,EAAe,KAAEC,EAAkB,KACpCxF,EAAQyF,qBACR5B,EAAaC,0BAEb4B,EAAoB,WACxBF,GAAoBD,IAGhBI,EAAa,sBAAG,kBACdxB,IACNN,EAAWO,SAAS,aACrB,kBAHkB,mCAKnB,OACE,eAACwB,EAAA,QAAOC,OAAM,CACZ7F,MAAOA,EACP8F,MAAO,CACLC,gBAAsB,MAAL/F,GAAa,OAAR,EAALA,EAAOG,SAAc,OAAR,EAAb,EAAeC,aAAV,EAAL,EAAuBC,YAGxC,UAEF,cAAC2F,EAAA,QAAM,UACL,eAACC,EAAA,QAAK,CACJC,QAASX,EACTY,UAAWT,EACXU,sBAAuB,CACrBL,gBAAsB,MAAL/F,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeE,WAChCgG,QAAS,GACTrB,MAAO,IACPsB,UAAW,SACXC,aAAc,GACd,UAEF,cAACC,EAAA,QAAI,CAACV,MAAO,CAAEW,WAAY,cAAeC,aAAc,IAAK,SAAC,6CAG9D,cAACC,EAAA,QAAM,CACLC,KAAK,WACLC,QAASlB,EACTmB,UAAgB,MAAL9G,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeE,WAC1ByF,MAAO,CACLC,gBAAsB,MAAL/F,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeK,QAChC+F,aAAc,EACdG,aAAc,IACd,SAEF,cAACF,EAAA,QAAI,CACHV,MAAO,CACLxF,MAAY,MAALN,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeE,WACtBoG,WAAY,eACZ,SACH,WAIH,cAACE,EAAA,QAAM,CACLI,KAAK,OACLF,QAASnB,EACTI,MAAO,CACLS,aAAc,GACd,SAEF,cAACC,EAAA,QAAI,CACHV,MAAO,CACLxF,MAAY,MAALN,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeK,QACtBiG,WAAY,eACZ,SACH,oBAONrB,EACC,cAACQ,EAAA,QAAOoB,WAAU,CAChBH,QAASzB,EACT9E,MAAY,MAALN,GAAa,OAAR,EAALA,EAAOG,SAAc,OAAR,EAAb,EAAeC,aAAV,EAAL,EAAuBE,QAGhC,6BAGF,cAAC2G,EAAA,QAAe,CACdC,YACkB,QAAhBC,UAASC,IAEA,MAALpH,GAAa,OAAR,EAALA,EAAOG,SAAiB,OAAX,EAAb,EAAeI,gBADf8G,EACA,EAA0BhH,WAEhCwG,QAAS,kBAAMhD,EAAWO,SAAS,SACnC0B,MAAO,CAAEwB,aAAc,EAAGC,YAAa,GAAI,SAE3C,cAACC,EAAA,QAAK,CACJ1B,MAAOjB,EAAOE,KACd0C,OAAQnG,EAAQ,SAIpB,cAACsE,EAAA,QAAO8B,QAAO,IAEd9C,EACC,qCACE,cAACgB,EAAA,QAAO+B,OAAM,CACZrH,MAAY,MAALN,GAAa,OAAR,EAALA,EAAOG,SAAc,OAAR,EAAb,EAAeC,aAAV,EAAL,EAAuBE,MAC9BsG,KAAK,eACLC,QAAS,kBAAMhD,EAAWO,SAAS,mBAErC,cAACwB,EAAA,QAAO+B,OAAM,CACZrH,MAAY,MAALN,GAAa,OAAR,EAALA,EAAOG,SAAc,OAAR,EAAb,EAAeC,aAAV,EAAL,EAAuBE,MAC9BsG,KAAK,SACLC,QAAS,kBAAMhD,EAAWO,SAAS,eAErC,cAACwB,EAAA,QAAO+B,OAAM,CACZrH,MAAY,MAALN,GAAa,OAAR,EAALA,EAAOG,SAAc,OAAR,EAAb,EAAeC,aAAV,EAAL,EAAuBE,MAC9BsG,KAAK,iBACLC,QAAS,kBAAMhD,EAAWO,SAAS,iBAIvC,6BAGAiB,EACE,cAACO,EAAA,QAAO+B,OAAM,CACZrH,MAAY,MAALN,GAAa,OAAR,EAALA,EAAOG,SAAc,OAAR,EAAb,EAAeC,aAAV,EAAL,EAAuBE,MAC9BsG,KAAK,WACLC,QAASnB,IAGX,iC,ikBCtJV,IAAMkC,EAAQ,WAAO,IAAD,cACZ5H,EAAQyF,qBAEd,OACE,qCACE,cAAC,EAAM,IACP,cAACoC,EAAA,QAAU,CACT/B,MAAO,CAAEC,gBAAsB,MAAL/F,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeE,YACzC+F,sBAAuB,CACrBpB,MAAO,OACPC,OAAQ,OACR6C,eAAgB,SAChBC,WAAY,SACZC,OAAQ,KACR,SAEF,cAACC,EAAA,QAAI,CAACnC,MAAO,CAAEb,OAAQ,QAAS,SAE9B,eAACgD,EAAA,QAAI,CAACnC,MAAO,CAAEQ,UAAW,SAAUtB,MAAO,MAAOkD,UAAW,IAAK,UAChE,eAAC1B,EAAA,QAAI,CAACV,MAAK,OAAOjB,EAAOsD,OAAK,IAAE7H,MAAY,MAALN,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeO,UAAW0H,UAAW,SAAS,UAAC,kCACrD,cAAC5B,EAAA,QAAI,CAACV,MAAO,CAAExF,MAAY,MAALN,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeK,SAAU,SAAC,0BAA4B,gCAE7G,eAACgG,EAAA,QAAI,CAACV,MAAK,OAAOjB,EAAOwD,UAAQ,IAAE/H,MAAY,MAALN,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeO,YAAY,UAAC,+BAC3C,cAAC8F,EAAA,QAAI,CAACV,MAAO,CAAExF,MAAY,MAALN,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeK,SAAU,SAAC,WAAa,sCAGxF,cAACmG,EAAA,QAAM,CACLb,MAAO,CAAEoC,UAAW,GAAIlD,MAAO,IAAKsD,SAAU,MAAO/B,aAAc,IACnEQ,KAAK,YACLH,KAAK,iCACLC,QAAS,aACT0B,YAAavI,EAAMG,OAAOK,QAC1BsG,UAAgB,MAAL9G,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeE,WAAW,SACtC,oBASP,cAAC4H,EAAA,QAAI,CAACnC,MAAO,CAAEd,MAAO,OAAQe,gBAAsB,MAAL/F,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeE,YAAa,SACzE,cAACmH,EAAA,QAAK,CACJC,OAAQnG,EAAQ,KAChBwE,MAAO,CACLQ,UAAW,SACXgC,SAAU,OACVtD,MAAO,IACPC,OAAQ,eAiBdJ,EAASC,UAAWtD,OAAO,CAC/BgH,UAAW,CACTC,KAAM,EACNzD,MAAO,OACPC,OAAQ,OACR8C,WAAY,UAEdI,MAAO,CACL1B,WAAY,cACZH,UAAW,aACXI,aAAc,GACdgC,SAAU,IAEZL,SAAU,CACR5B,WAAY,gBACZH,UAAW,aACXI,aAAc,GACdgC,SAAU,MAICC,EA7BF,WACX,OACE,mCACE,cAAC,EAAK,O,mnBC7DZ,IAAMC,GAAa,SAAH,GAAkC,IAAD,IAA3B9C,aAAK,MAAG,GAAE,EAAEtC,EAAQ,EAARA,SAChC,OACE,cAACyE,EAAA,QAAI,CAACnC,MAAK,IAAI+C,cAAe,MAAOd,WAAY,UAAajC,GAAQ,SACnEtC,KAKPoF,GAAWE,KAAO,YAAsB,IAAnBC,EAAK,EAALA,MAAOC,EAAI,EAAJA,KACpBnF,EAAaC,0BAOnB,OACE,qCACE,cAAC0C,EAAA,QAAI,CAACK,QAPS,WACZmC,GACLnF,EAAWO,SAAS4E,IAKSlD,MAAOmD,KAAaD,GAAM,SAClDD,IAEH,cAACvC,EAAA,QAAI,CAACV,MAAO,CAAEW,WAAY,kBAAmB,SAAC,iBAKrDmC,GAAWM,KAAO,YAAqB,IAAD,EAAjBtC,EAAI,EAAJA,KAAMoC,EAAI,EAAJA,KACnBhJ,EAAQyF,qBAER5B,EAAaC,0BAOnB,OACE,qCACE,cAACqF,GAAA,QAAU,CACTvC,KAAMA,EACNwC,UAAgB,MAALpJ,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeK,QAC1BsF,MAAO,CAAEd,MAAO,GAAIC,OAAQ,GAAIC,OAAQ,GACxCmE,KAAM,GACNxC,QAZa,WACZmC,GACLnF,EAAWO,SAAS4E,MAYlB,cAACxC,EAAA,QAAI,CAACV,MAAO,CAAEW,WAAY,kBAAmB,SAAC,iBAKrD,IAAMwC,GAAanE,UAAWtD,OAAO,CACnC8H,KAAM,CACJ7C,WAAY,cACZ8C,mBAAoB,aAEtBC,MAAO,CACL/C,WAAY,oBAIDmC,M,wlBC7Df,IAAQa,GAAqBC,WAArBD,iBAwDOE,GAtDE,SAAH,GAA0C,IAAD,EAAnCzD,EAAO,EAAPA,QAASzB,EAAO,EAAPA,QAASmF,EAAI,EAAJA,KAAMC,EAAI,EAAJA,KACpC7J,EAAQyF,qBAERqE,EAAmB,CAAC,MAAO,WAAWC,SAAS5C,UAASC,IAC1DqC,GAAiBO,OACjB,KAqBJ,OACE,cAAC,WAAK,CACJ9D,QAASA,EACTC,UAAW0D,EACX/D,MAAK,MAvBW,WAAO,IAAD,MACxB,OAAQ8D,GACN,IAAK,QACH,MAAO,CACL7D,gBAAsB,MAAL/F,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAec,QAEpC,IAAK,UACH,MAAO,CACL8E,gBAAsB,MAAL/F,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAea,SAEpC,IAAK,UACH,MAAO,CACL+E,gBAAsB,MAAL/F,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeY,SAEpC,QACE,MAAO,IASJkJ,IAELC,aAAc,CACZC,SAAU,WACVC,IAAqB,MAAhBN,IAAoB,EACzB9B,OAAQ,MAEVpB,KAAM,QACNyD,YAAaR,EAAK,SAElB,cAACrD,EAAA,QAAI,CACHV,MAAO,CACLW,WAAY,cACZnG,MAAY,MAALN,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeE,YAEtB,SAEDoE,O,0wBCnDT,IAkEe6F,GAlEG,SAAH,GAgBR,IAAD,cAfJ3F,EAAK,EAALA,MAAM,EAAD,EACL4F,oBAAY,MAAG,aAAS,MACxBC,mBAAW,OAAQ,EACnBC,EAAW,EAAXA,YACAC,EAAQ,EAARA,SAAS,EAAD,EACRC,iBAAS,MAAG,aAAS,EACrBC,EAAS,EAATA,UAAU,EAAD,EACTC,kBAAU,MAAG,aAAS,MACtBC,cAAM,OAAQ,EACd/B,EAAK,EAALA,MAAM,EAAD,EACLgC,iBAAS,OAAQ,EACjBC,EAAU,EAAVA,WACAC,EAAS,EAATA,UAAU,EAAD,EACTC,eAAO,MAAG,GAAE,EACTC,EAAI,WAEDnL,EAAQyF,qBAEV2F,EAAOV,EACT,cAAC,WAAMxB,KAAI,CACTtC,KAAM8D,EACNtB,UAAW6B,IAA6B,MAALjL,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeK,SAClDqG,QAAS8D,IAET,KAEAU,EAAQT,EACV,cAAC,WAAM1B,KAAI,CACTtC,KAAMgE,EACNxB,UAAW4B,IAA+B,MAALhL,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeK,SACpDqG,QAASgE,IAET,KAEES,EAAaC,KAAKC,KACtB,EAAID,KAAKE,OAAW,MAAL9G,OAAK,EAALA,EAAO+G,QAAS,OAAc,MAAL/G,OAAK,EAALA,EAAOgH,MAAM,SAAU,IAAID,QAGrE,OACE,cAAC,WAAK,IACJ/G,MAAOA,EACP4F,aAAcA,EACda,KAAMA,EACNL,UAAWA,EACXM,MAAOA,EACPtC,MAAOA,EACP0B,YAAaA,EACbmB,qBAA2B,MAAL5L,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeK,QACrCsG,UAAgB,MAAL9G,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeK,QAC1BqL,eAAqB,MAAL7L,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeK,QAC/BsL,aAAmB,MAAL9L,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeK,QAC7BuL,cAAehB,EAAYO,EAAa,EACxCU,aAAY,IACVvF,WAAY,iBACZyB,UAAW,EACX5H,MAAY,MAALN,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeK,SACnB0K,GAELe,gBAAiBnB,EACjBN,YAAaA,GACTW,KC/CKe,GAdK,SAACvH,GAAwB,IAAjBwH,EAAK,uDAAG,IAChC,EAA4B1I,mBAASkB,GAAM,WAApCyH,EAAM,KAAEC,EAAS,KAUxB,OARAtI,qBAAU,WACN,IAAIuI,EAAQC,YAAW,WACnBF,EAAU1H,KACXwH,GAEH,OAAO,kBAAMK,aAAaF,MAC3B,CAAC3H,EAAOwH,IAEJC,G,qkBCDX,IAAMK,GAAiB,CAAC,GAAI,GAAI,IA8K1B5H,GAASC,UAAWtD,OAAO,CAC/BgH,UAAW,CACTC,KAAM,EACNV,WAAY,SACZD,eAAgB,UAElB4E,MAAO,CACLxE,UAAW,GACXxB,aAAc,EACd1B,MAAO,OAETmD,MAAO,CACL1B,WAAY,gBACZH,UAAW,aACXI,aAAc,GACdgC,SAAU,IAEZiE,WAAY,CACVlG,WAAY,iBAEdmG,KAAM,CACJnG,WAAY,iBAEdoG,YAAa,CACX7H,MAAO,OACP0B,aAAc,IAEhBoG,IAAK,CACH3C,SAAU,WACVjF,OAAQ,GACRmG,MAAO,EACP0B,OAAQ,EACRxG,aAAc,IAEhByG,OAAQ,CACNnE,cAAe,MACfd,WAAY,SACZD,eAAgB,mBAILmF,GArNM,WAAO,IAAD,kBACnBjN,EAAQyF,qBACR5B,EAAaC,0BACboJ,EAAYC,yBAElB,EAAgC1J,mBAAS,CACvCmG,KAAM,OACNnF,QAAS,GACTyB,SAAS,EACT1B,MAAO,SAAC4I,EAAKxD,GACXyD,EAAY,SAAKC,GAAQ,IAAE7I,QAAS2I,EAAKxD,KAAMA,EAAM1D,SAAS,MAEhE2D,KAAM,WACJwD,EAAY,SAAKC,GAAQ,IAAEpH,SAAS,QAEtC,WAVKoH,EAAQ,KAAED,EAAW,KAYtB7I,EAAQ8I,EAAS9I,MAEvB,EAA0Bf,mBAAS,GAAE,WAA9B8J,EAAK,KACZ,GADsB,KACY9J,mBAAS,KAAG,WAAvC+J,EAAS,KAAEC,EAAY,KAC9B,EAAwBhK,mBAAS,GAAE,WAA5BiK,EAAI,KAAEC,EAAO,KACpB,EAA4BlK,mBAAS,IAAG,WAAjC2I,EAAM,KAAEC,EAAS,KAClBuB,EAAkB1B,GAAYE,EAAQ,KAC5C,EAAwC3I,mBAASgJ,GAAe,IAAG,WAA5DoB,EAAY,KAAEC,EAAe,KAE9BC,EAAOL,EAAOG,EACdG,EAAKzC,KAAK0C,KAAKP,EAAO,GAAKG,EAAuB,MAATL,OAAS,EAATA,EAAW9B,QAE1D,EAA8BjI,oBAAS,GAAK,WAArCE,EAAO,KAAEC,GAAU,KAE1BG,qBAAU,WACc,aAcrB,OAdqB,OAAtB,YACE,IAAK,IAAD,EACFH,IAAW,GACX,IAAQpB,SAAe3C,EAAIqO,IAAI,iBAAkB,CAC/CC,OAAQ,CACN/B,OAAQwB,MAFJpL,KAKRiL,EAA4B,OAAhB,EAAK,MAAJjL,OAAI,EAAJA,EAAMgL,WAAS,EAAI,IAChC5J,IAAW,GACX,MAAO7B,GAAQ,IAAD,IACdkC,QAAQC,IAAInC,GACZyC,EAA8B,OAAzB,EAAM,MAALzC,GAAe,OAAV,EAALA,EAAOiC,eAAF,EAAL,EAAiBS,SAAO,EAAI,kDAAgD,cAErF,uBAfc,WACO,wBAgBtB2J,KACC,CAAClB,EAAWU,IAEf7J,qBAAU,WACR4J,EAAQ,KACP,CAACE,IAMJ,OACE,qCACE,cAAC,EAAM,IACP,cAAC,GAAQ,CACPhE,KAAMyD,EAASzD,KACfpF,QAAS6I,EAAS7I,QAClBmF,KAAM0D,EAAS1D,KACf1D,QAASoH,EAASpH,UAEnBvC,EACE,cAACkE,EAAA,QAAU,CAAC/B,MAAO,CAAEC,gBAAsB,MAAL/F,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeE,YAAc+F,sBAAuB,CAAEqC,KAAM,EAAGX,eAAgB,SAAUC,WAAY,UAAW,SACrJ,cAACsG,GAAA,QAAiB,CAACC,WAAW,EAAMhO,MAAY,MAALN,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeK,QAAS6I,KAAM,YAE1E,eAACxB,EAAA,QAAU,CACV/B,MAAO,CAAEC,gBAAsB,MAAL/F,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeE,YACzC+F,sBAAuB,CACrB0B,eAAgB,SAChBC,WAAY,UACZ,UAEF,eAACE,EAAA,QAAI,CAACnC,MAAO,CAAEd,MAAO,OAAQ,UAC5B,cAACiD,EAAA,QAAI,CAACnC,MAAOjB,GAAOmI,OAAO,SACzB,eAAC,GAAU,CAAClH,MAAO,CAAEoC,UAAW,GAAIxB,aAAc,IAAK,UACrD,cAAC,GAAWwC,KAAI,CAACtC,KAAK,OAAOoC,KAAK,SAClC,cAAC,GAAWF,KAAI,CAACC,MAAM,uBAAoBC,KAAK,sBAGpD,cAAC,UAAI,CAAClD,MAAK,SAAOjB,GAAOsD,OAAK,IAAE7H,MAAY,MAALN,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeK,UAAU,SAAC,yBAGjE,cAAC,GAAS,CACRmE,MAAOyH,EACP7B,aAAc8B,EACdtB,WAAW,EACXL,SAAU,cACV3B,MAAM,kBACNjD,MAAOjB,GAAOgI,iBAGlB,eAAC0B,GAAA,QAAS,CACRzI,MAAK,SACAjB,GAAO6H,OAAK,IACf3G,gBAAsB,MAAL/F,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeS,QAChC,UAEF,eAAC2N,GAAA,QAAU1I,OAAM,WACf,cAAC0I,GAAA,QAAUC,MAAK,CACdC,UAAW5J,GAAO6J,UAClBC,cAAc,aAAY,SAC3B,cAGD,cAACJ,GAAA,QAAUC,MAAK,CAACC,UAAW5J,GAAO6J,UAAU,SAAC,kBAKtC,MAATlB,OAAS,EAATA,EAAWoB,KAAI,SAACC,GAAQ,OACvB,eAACN,GAAA,QAAUO,IAAG,CAEZjI,QAAS,kBAAMhD,EAAWO,SAAS,eAAgB,CAAE2K,GAAIF,EAASE,MAAM,UAExE,cAACR,GAAA,QAAUS,KAAI,CAACP,UAAW5J,GAAO+H,KAAK,SACpCiC,EAASI,YAEZ,cAACV,GAAA,QAAUS,KAAI,CAACP,UAAW5J,GAAO+H,KAAK,SAAC,8BANnCiC,EAASE,OAYlB,cAACR,GAAA,QAAUW,WAAU,CACnBxB,KAAMA,EACNyB,cAAe5D,KAAKC,KAAKgC,EAAU9B,OAASmC,GAC5CuB,aAAc,SAAC1B,GAAI,OAAKC,EAAQD,IAChC3E,MAAUgF,EAAI,IAAIC,EAAE,OAAOT,EAC3B8B,yBAA0B5C,GAC1B6C,qBAAsBzB,EACtB0B,qBAAsBzB,EACtB0B,4BAA0B,EAC1BC,wBAAyB,iCAI7B,cAACxH,EAAA,QAAI,CAACnC,MAAO,CAAEd,MAAO,MAAO0B,aAAc,IAAK,SAC9C,cAACC,EAAA,QAAM,CACLC,KAAK,cACLC,QA3Fe,WACzBhD,EAAWO,SAAS,mBA2FV2C,KAAK,WACLD,UAAgB,MAAL9G,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeK,QAC1BsF,MAAO,CACLQ,UAAW,WACXoJ,YAAkB,MAAL1P,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeK,QAC5B+F,aAAc,EACd2B,UAAW,EACXxB,aAAc,GACd1B,MAAO,KACP,SACH,+BAKP,cAAC2K,GAAA,QAAG,CACF/I,KAAK,SACLtG,MAAY,MAALN,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeE,WACtByF,MAAK,SAAOjB,GAAOiI,KAAG,IAAE/G,gBAAsB,MAAL/F,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeK,UACxDqG,QAAS,kBAAM5C,QAAQC,IAAI,W,+kBCjL5B,IAAM0L,GAAQ,SAARA,EAAK,GAYX,IAAD,QAXF5K,aAAK,MAAG,IAAG,MACX6K,cAAM,MAAG,CACL1H,MAAO,GACPvB,KAAM,GACNkJ,UAAW,cACd,MACDC,YAAI,MAAG,CACHC,MAAO,GACPC,UAAW,GACd,EACDzM,EAAQ,EAARA,SAEMxD,EAAQyF,qBAEd,OACI,eAACwC,EAAA,QAAI,CAACnC,MAAO,CACTd,MAAOA,EACPsD,SAAU,OACVvC,gBAAsB,MAAL/F,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeS,MAChC8O,YAAkB,MAAL1P,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeU,KAC5BqP,YAAa,EACbC,UAAW,GACb,UACE,cAACP,EAAM/J,OAAM,CAACsC,MAAa,MAAN0H,OAAM,EAANA,EAAQ1H,MAAOvB,KAAY,MAANiJ,OAAM,EAANA,EAAQjJ,KAAMkJ,UAAiB,MAAND,OAAM,EAANA,EAAQC,YAC3E,cAACF,EAAMQ,KAAI,CAACJ,MAAW,MAAJD,OAAI,EAAJA,EAAMC,MAAOC,UAAe,MAAJF,OAAI,EAAJA,EAAME,YACjD,cAACL,EAAMS,KAAI,UACN7M,QAMjBoM,GAAM/J,OAAS,YAA6C,IAAD,MAAzCsC,EAAK,EAALA,MAAOvB,EAAI,EAAJA,KAAK,EAAD,EAAEkJ,iBAAS,MAAG,aAAS,EAC1C9P,EAAQyF,qBAEd,OACI,qCACI,eAACwC,EAAA,QAAI,CAACnC,MAAO,CAAEd,MAAO,OAAQC,OAAQ,IAAK,UAElC2B,EAQG,6BAPA,cAACuC,GAAA,QAAU,CACPtC,QAASiJ,EACTlJ,KAAMA,EACNwC,UAAgB,MAALpJ,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeU,KAC1BiF,MAAO,CAAEqE,SAAU,WAAYkB,MAAO,EAAGjB,IAAK,KAK1D,cAAC,UAAI,CAACtE,MAAK,SAAOjB,GAAOsD,OAAK,IAAE7H,MAAY,MAALN,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeK,QAAS0E,OAAQ,KAAK,SACvEiD,OAGT,cAACmI,GAAA,QAAO,CAACxK,MAAO,CAAEC,gBAAsB,MAAL/F,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeU,YAK9D+O,GAAMQ,KAAO,YAA2B,IAAD,IAAvBJ,EAAK,EAALA,MAAOC,EAAS,EAATA,UACbjQ,EAAQyF,qBAEd,OACI,qCACI,cAACwC,EAAA,QAAI,CAACnC,MAAO,CAAEd,MAAO,OAAQ+C,WAAY,SAAUD,eAAgB,eAAgBe,cAAe,MAAOnC,aAAc,EAAGwB,UAAW,GAAI,SACnH,OADmH,EACrIqI,OAAOC,KAAKR,SAAM,EAAlB,EAAoBpB,KAAI,SAAClB,EAAM+C,GAAG,uBAC/B,cAACxJ,EAAA,QAAe,CAAWJ,QAAoB,OAAb,EAAEmJ,EAAMtC,SAAK,EAAX,EAAa7G,QAASf,MAAK,SACvD4H,GAAQuC,EAAY,CAAES,kBAAwB,MAAL1Q,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeK,QAASmQ,kBAAmB,GAAM,IAAI,GAAF,CAChG9H,cAAe,SACfd,WAAY,SACZ6I,SAAU,KACZ,SACE,qCACI,cAACzH,GAAA,QAAU,CAACvC,KAAiB,OAAb,EAAEoJ,EAAMtC,SAAK,EAAX,EAAa9G,KAAMwC,UAAgB,MAALpJ,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeK,UAC/D,cAAC,UAAI,CAACsF,MAAK,SAAOjB,GAAOgM,aAAW,IAAEvQ,MAAY,MAALN,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeK,QAASkG,aAAc,KAAK,SACxE,OADwE,EACnFsJ,EAAMtC,SAAK,EAAX,EAAa3E,YATJ0H,QAe9B,cAACH,GAAA,QAAO,CAACxK,MAAO,CAAEC,gBAAsB,MAAL/F,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeU,YAK9D+O,GAAMS,KAAO,gBAAG7M,EAAQ,EAARA,SAAQ,OACpB,mCACI,cAACqE,EAAA,QAAU,CAAC/B,MAAO,CACfO,QAAS,IACX,SACG7C,OAKb,IAAMqB,GAASC,UAAWtD,OAAO,CAC7B2G,MAAO,CACH1B,WAAY,gBACZH,UAAW,aACXI,aAAc,GACdgC,SAAU,GACVN,UAAW,UAEfwE,KAAM,CACFnG,WAAY,iBAEhB0B,MAAO,CACH1B,WAAY,gBACZC,aAAc,GACdgC,SAAU,IAEdL,SAAU,CACN5B,WAAY,gBACZ2B,UAAW,OACXM,SAAU,GACVR,UAAW,GACXxB,aAAc,IAElBmI,SAAU,CACN7J,MAAO,OACP8C,eAAgB,WAChBC,WAAY,SACZxB,aAAc,IAElBuK,WAAY,CACR7L,OAAQ,MACRD,MAAO,OACPsB,UAAW,SACX4B,UAAW,IAEf6I,iBAAkB,CACdjJ,eAAgB,SAChBC,WAAY,UAEhB8E,YAAa,CACTnG,aAAc,IAElBmK,YAAa,CACTpK,WAAY,kBAEhBqG,IAAK,CACD3C,SAAU,WACVjF,OAAQ,GACRmG,MAAO,EACP0B,OAAQ,EACRxG,aAAc,M,qkBC1ItB,IAAMyK,GAAoB,SAAH,GAA4C,IAAD,oBAArCjC,EAAE,EAAFA,GAAIvK,EAAK,EAALA,MAAM,EAAD,EAAEyM,eAAO,MAAG,aAAS,EACnDjR,EAAQyF,qBAEd,EAA8BhC,oBAAS,GAAM,WAA7BG,GAAF,KAAY,MAE1B,EAAkCH,mBAAS,GAAE,WAAtCwM,EAAS,KAAEiB,EAAY,KACxBlB,GAAK,WACR,EAAI,CACHpJ,KAAM,cACNmC,MAAO,gBACPlC,QAAS,kBAAMqK,EAAa,MAC7B,MACA,EAAI,CACHtK,KAAM,cACNmC,MAAO,YACPlC,QAAS,kBAAMqK,EAAa,MAC7B,GAGH,EAA4CzN,mBAAS,IAAG,WAAjD0N,EAAc,KAAEC,EAAiB,KAExC,EAA0C3N,mBAAS,KAAI,WAAhD4N,EAAa,KAAEC,EAAgB,KACtC,EAA8B7N,mBAAS,OACpC,EAAI,KACL,WAFK8N,EAAO,KAAEC,EAAU,KAI1BzN,qBAAU,WACc,aAUrB,OAVqB,OAAtB,YACE,IACE,IAAgB8K,SAAqBhP,EAAIqO,IAAI,kBAAoBa,IAAzDvM,KAAQqM,SAChB2C,EAAmB,MAAR3C,OAAQ,EAARA,EAAU4C,cACrBL,EAA0B,MAARvC,OAAQ,EAARA,EAAUI,WAC5BqC,EAAyB,MAARzC,OAAQ,EAARA,EAAU6C,eAC3B9N,GAAW,GACX,MAAO7B,GACPkC,QAAQC,IAAInC,QAEf,uBAXc,WACO,wBAYtBqM,KACC,CAACW,IAkC6B,aA6BhC,OA7BgC,OAAjC,YACE,GAAuB,KAAnBoC,EAAJ,CAKA,IAAIX,EAAOD,OAAOC,KAAKe,GAEvB,IAAQ,MAAJf,OAAI,EAAJA,EAAM9E,QAAS,EACjBlH,EAAM,yDAAuD,cAI/D,IAAqD,KAA7C,MAAJgM,OAAI,EAAJA,EAAMmB,WAAU,SAAAC,GAAE,OAAIA,IAAOP,MAKjC,IACEzN,GAAW,SACL/D,EAAIgS,IAAI,aAAa9C,EAAE,QAAS,CACpCE,UAAWkC,EAAgBM,aAAa,MAAMF,GAAWG,cAAeL,IAE1E7M,EAAM,kCAAgC,WACtC,MAAOzC,GACPkC,QAAQC,IAAInC,GACb,QACC6B,GAAW,QAbXY,EAAM,0CAA2C,cAZjDA,EAAM,kBAAmB,aA2B5B,sBAED,OACE,eAAC,GAAK,CACJqL,OAAQ,CAAEjJ,KAAM,QAASkJ,UAAWmB,EAAS9I,MAAO,wBAAuB4G,GAC3EgB,KAAM,CAAEC,QAAOC,aAAY,UAGZ,GAAbA,EACE,qCACE,cAAC,GAAS,CACRtL,MAAOwM,EACP5G,aAAc6G,EACdrK,KAAK,WACLgC,MAAM,YACN2B,SAAU,WACVK,WAAW,EACXjF,MAAK,SAAOjB,GAAOgI,aAAW,IAAE9G,gBAAsB,MAAL/F,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeS,QAChEkR,aAAc,CACZvL,aAAc,KAIG,OAFnB,EAEDgK,OAAOC,KAAKe,SAAQ,EAApB,EAAsB3C,KAAI,SAACmD,EAAQtB,GAAG,mBACrC,cAAC,GAAS,CAER1J,KAAK,WACLpC,MAAO4M,EAAQQ,GACfxH,aAAc,SAACqC,GAAI,OAAK4E,EAAW,SAAKD,GAAO,UAAGQ,EAASnF,MAC3DhC,UAAU,YACVI,WAAiB,MAALhL,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAec,OAC3B4J,WAAY,kBApFP,SAACmH,GAAO,IAAD,EACxB,IAAwB,OAApB,EAAAzB,OAAOC,KAAKe,SAAQ,EAApB,EAAsB7F,SAAU,EAClC8F,EAAW,OACR,EAAI,SAFT,CAMIH,IAAkBW,EACpBV,EAAiB,MACRD,GAAiBW,EAAIX,GAC9BC,EAAiB,IAAGD,EAAgB,IAEtC,IAAIY,EAAc,MAAQV,UACnBU,EAAeD,GAEtB,IAEIE,EAFiB3B,OAAO4B,OAAOF,GAELG,QAAO,SAACC,EAAMC,EAAKC,GAC/C,OAAO,SAAKF,GAAI,UAAGE,EAAQD,MAC1B,IAEHd,EAAWU,IA+DmBM,CAAaT,IAC/BpH,UAAW,WA7FG,IAAC8H,EAK3BnB,EAJID,KADuBoB,EA6FsBV,GAxFhCU,EAHE,OA4FP/H,SAAUqH,IAAWV,EAAgB,uBAAyB,uBAC9DpG,UAAW8G,IAAWV,EAAqB,MAALrR,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAea,QAAe,MAALhB,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAec,OAC9E8H,MAAK,eAAiB2J,OAAOC,aAAa,GAAKC,SAASb,IAASc,cAAa,IAC9E9H,WAAW,EACXjF,MAAK,SAAOjB,GAAOgI,aAAW,IAAE9G,gBAAsB,MAAL/F,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeS,QAChEkR,aAAc,CACZvL,aAAc,IAdXkK,MAmBT,cAAC9J,EAAA,QAAM,CACLC,KAAK,cACLC,QAAS,WAAO,IAAD,EACTiM,EAAkC,OAAvB,EAAGvC,OAAOC,KAAKe,SAAQ,EAApB,EAAsB7F,OACpCoH,GAAe,IACnBtB,EAAW,SAAKD,GAAO,UAAGuB,EAAc,OAE1C/L,KAAK,WACLD,UAAgB,MAAL9G,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeK,QAC1BsF,MAAO,CACL4J,YAAkB,MAAL1P,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeK,QAC5B+F,aAAc,EACdG,aAAc,GACd1B,MAAO,KACP,SACH,6BAGG,6BAGK,GAAbiL,EACE,qCACE,cAAC,UAAI,CAACnK,MAAK,SAAOjB,GAAOgM,aAAW,IAAEvQ,MAAY,MAALN,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeO,UAAWgG,aAAc,KAAK,SACvFyK,IAEkB,OADd,EACNZ,OAAOC,KAAKe,SAAQ,EAApB,EAAsB3C,KAAI,SAACmD,EAAQtB,GAAG,aACrCc,EAAQQ,GACN,cAAC,UAAI,CAAWjM,MAAK,SAAOjB,GAAOgM,aAAW,IAAEvQ,MAAY,MAALN,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeO,WAAeqR,IAAWV,EAAgB,CAAE5K,WAAY,eAAkB,IAAM,SAChJiM,OAAOC,aAAa,GAAKC,SAASb,IAASc,cAAa,KAAKtB,EAAQQ,IADhEtB,GAIX,gCAGFU,GAAkBI,EAAQ,GACxB,cAAC5K,EAAA,QAAM,CACLC,KAAK,iBACL2B,YAAkB,MAALvI,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeK,QAC5BsG,UAAgB,MAAL9G,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeE,WAC1ByF,MAAO,CACL4J,YAAkB,MAAL1P,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeK,QAC5B+F,aAAc,EACd2B,UAAW,GACXlD,MAAO,QAET6B,QAzHd,WAE+B,gCAuHW,SAC7B,6BAID,gCAEA,iCA0DVhC,GAASC,UAAWtD,OAAO,CAC/B2G,MAAO,CACL1B,WAAY,gBACZH,UAAW,aACXI,aAAc,GACdgC,SAAU,GACVN,UAAW,UAEbwE,KAAM,CACJnG,WAAY,iBAEd0B,MAAO,CACL1B,WAAY,gBACZC,aAAc,GACdgC,SAAU,IAEZL,SAAU,CACR5B,WAAY,gBACZ2B,UAAW,OACXM,SAAU,GACVR,UAAW,GACXxB,aAAc,IAEhBmI,SAAU,CACR7J,MAAO,OACP8C,eAAgB,WAChBC,WAAY,SACZxB,aAAc,IAEhBuK,WAAY,CACV7L,OAAQ,MACRD,MAAO,OACPsB,UAAW,SACX4B,UAAW,IAEb6I,iBAAkB,CAChBjJ,eAAgB,SAChBC,WAAY,UAEd8E,YAAa,CACXnG,aAAc,IAEhBmK,YAAa,CACXpK,WAAY,kBAEdqG,IAAK,CACH3C,SAAU,WACVjF,OAAQ,GACRmG,MAAO,EACP0B,OAAQ,EACRxG,aAAc,MAIHwM,GA1GM,WAAO,IAAD,MACnB/S,EAAQyF,qBACRuN,EAAQC,qBAEd,EAAgCxP,mBAAS,CACvCmG,KAAM,OACNnF,QAAS,GACTyB,SAAS,EACT1B,MAAO,SAAC4I,EAAKxD,GACXyD,EAAY,SAAKC,GAAQ,IAAE7I,QAAS2I,EAAKxD,KAAMA,EAAM1D,SAAS,MAEhE2D,KAAM,WACJwD,EAAY,SAAKC,GAAQ,IAAEpH,SAAS,QAEtC,WAVKoH,EAAQ,KAAED,EAAW,KAY5B,OACE,qCACE,cAAC,EAAM,IACP,cAAC,GAAQ,CACPxD,KAAMyD,EAASzD,KACfpF,QAAS6I,EAAS7I,QAClBmF,KAAM0D,EAAS1D,KACf1D,QAASoH,EAASpH,UAEpB,eAAC2B,EAAA,QAAU,CACT/B,MAAO,CAAEC,gBAAsB,MAAL/F,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeE,YACzC+F,sBAAuB,CACrB0B,eAAgB,SAChBC,WAAY,SACZzB,UAAW,SACXgC,SAAU,OACV,UAEF,cAACL,EAAA,QAAI,CAACnC,MAAO,CACXd,MAAO,IACPsD,SAAU,QACV,SACA,eAAC,GAAU,CAACxC,MAAO,CAAEoC,UAAW,GAAIxB,aAAc,IAAK,UACrD,cAAC,GAAWwC,KAAI,CAACtC,KAAK,OAAOoC,KAAK,SAClC,cAAC,GAAWF,KAAI,CAACC,MAAM,uBAAoBC,KAAK,iBAChD,cAAC,GAAWF,KAAI,CAACC,MAAK,eAAkB,MAALiK,GAAa,OAAR,EAALA,EAAO7E,aAAF,EAAL,EAAeY,WAItD,cAAC,GAAiB,CAACA,GAAS,MAALiE,GAAa,OAAR,EAALA,EAAO7E,aAAF,EAAL,EAAeY,GAAI/J,MAAO,IAAKR,MAAO8I,EAAS9I,QACtE,cAACyD,EAAA,QAAI,CAACnC,MAAO,CAAEY,aAAc,a,qkBC5PrC,IAAMsK,GAAoB,SAAH,GAAoD,EAA9ChM,MAA+C,IAAD,oBAAjCR,EAAK,EAALA,MAAM,EAAD,EAAEyM,eAAO,MAAG,aAAS,EAC5DjR,EAAQyF,qBAEd,EAA8BhC,oBAAS,GAAM,WAA7BG,GAAF,KAAY,MAE1B,EAAkCH,mBAAS,GAAE,WAAtCwM,EAAS,KAAEiB,EAAY,KACxBlB,GAAK,WACR,EAAI,CACHpJ,KAAM,cACNmC,MAAO,gBACPlC,QAAS,kBAAMqK,EAAa,MAC7B,MACA,EAAI,CACHtK,KAAM,cACNmC,MAAO,YACPlC,QAAS,kBAAMqK,EAAa,MAC7B,GAGH,EAA4CzN,mBAAS,IAAG,WAAjD0N,EAAc,KAAEC,EAAiB,KAExC,EAA0C3N,mBAAS,KAAI,WAAhD4N,EAAa,KAAEC,EAAgB,KACtC,EAA8B7N,mBAAS,OACpC,EAAI,KACL,WAFK8N,EAAO,KAAEC,EAAU,KAoCS,aA6BlC,OA7BkC,OAAnC,YACE,GAAuB,KAAnBL,EAAJ,CAKA,IAAIX,EAAOD,OAAOC,KAAKe,GAEvB,IAAQ,MAAJf,OAAI,EAAJA,EAAM9E,QAAS,EACjBlH,EAAM,yDAAuD,cAI/D,IAAqD,KAA7C,MAAJgM,OAAI,EAAJA,EAAMmB,WAAU,SAAAC,GAAE,OAAIA,IAAOP,MAKjC,IACEzN,GAAW,SACL/D,EAAIwC,KAAK,mBAAoB,CACjC4M,UAAWkC,EAAgBM,aAAa,MAAMF,GAAWG,cAAeL,IAE1E7M,EAAM,gCAA8B,WACpC,MAAOzC,GACPkC,QAAQC,IAAInC,GACb,QACC6B,GAAW,QAbXY,EAAM,0CAA2C,cAZjDA,EAAM,kBAAmB,aA2B5B,sBAED,OACE,eAAC,GAAK,CACJqL,OAAQ,CAAEjJ,KAAM,QAASkJ,UAAWmB,EAAS9I,MAAO,oBACpD4H,KAAM,CAAEC,QAAOC,aAAY,UAGZ,GAAbA,EACE,qCACE,cAAC,GAAS,CACRtL,MAAOwM,EACP5G,aAAc6G,EACdrK,KAAK,WACLgC,MAAM,YACN2B,SAAU,WACVK,WAAW,EACXjF,MAAK,SAAOjB,GAAOgI,aAAW,IAAE9G,gBAAsB,MAAL/F,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeS,QAChEkR,aAAc,CACZvL,aAAc,KAIG,OAFnB,EAEDgK,OAAOC,KAAKe,SAAQ,EAApB,EAAsB3C,KAAI,SAACmD,EAAQtB,GAAG,mBACrC,cAAC,GAAS,CAER1J,KAAK,WACLpC,MAAO4M,EAAQQ,GACfxH,aAAc,SAACqC,GAAI,OAAK4E,EAAW,SAAKD,GAAO,UAAGQ,EAASnF,MAC3DhC,UAAU,YACVI,WAAiB,MAALhL,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAec,OAC3B4J,WAAY,kBApFP,SAACmH,GAAO,IAAD,EACxB,IAAwB,OAApB,EAAAzB,OAAOC,KAAKe,SAAQ,EAApB,EAAsB7F,SAAU,EAClC8F,EAAW,OACR,EAAI,SAFT,CAMIH,IAAkBW,EACpBV,EAAiB,MACRD,GAAiBW,EAAIX,GAC9BC,EAAiB,IAAGD,EAAgB,IAEtC,IAAIY,EAAc,MAAQV,UACnBU,EAAeD,GAEtB,IAEIE,EAFiB3B,OAAO4B,OAAOF,GAELG,QAAO,SAACC,EAAMC,EAAKC,GAC/C,OAAO,SAAKF,GAAI,UAAGE,EAAQD,MAC1B,IAEHd,EAAWU,IA+DmBM,CAAaT,IAC/BpH,UAAW,WA7FG,IAAC8H,EAK3BnB,EAJID,KADuBoB,EA6FsBV,GAxFhCU,EAHE,OA4FP/H,SAAUqH,IAAWV,EAAgB,uBAAyB,uBAC9DpG,UAAW8G,IAAWV,EAAqB,MAALrR,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAea,QAAe,MAALhB,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAec,OAC9E8H,MAAK,eAAiB2J,OAAOC,aAAa,GAAKC,SAASb,IAASc,cAAa,IAC9E9H,WAAW,EACXjF,MAAK,SAAOjB,GAAOgI,aAAW,IAAE9G,gBAAsB,MAAL/F,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeS,QAChEkR,aAAc,CACZvL,aAAc,IAdXkK,MAmBT,cAAC9J,EAAA,QAAM,CACLC,KAAK,cACLC,QAAS,WAAO,IAAD,EACTiM,EAAkC,OAAvB,EAAGvC,OAAOC,KAAKe,SAAQ,EAApB,EAAsB7F,OACpCoH,GAAe,IACnBtB,EAAW,SAAKD,GAAO,UAAGuB,EAAc,OAE1C/L,KAAK,WACLD,UAAgB,MAAL9G,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeK,QAC1BsF,MAAO,CACL4J,YAAkB,MAAL1P,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeK,QAC5B+F,aAAc,EACdG,aAAc,GACd1B,MAAO,KACP,SACH,6BAGG,6BAGK,GAAbiL,EACE,qCACE,cAAC,UAAI,CAACnK,MAAK,SAAOjB,GAAOgM,aAAW,IAAEvQ,MAAY,MAALN,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeO,UAAWgG,aAAc,KAAK,SACvFyK,IAEkB,OADd,EACNZ,OAAOC,KAAKe,SAAQ,EAApB,EAAsB3C,KAAI,SAACmD,EAAQtB,GAAG,aACrCc,EAAQQ,GACN,cAAC,UAAI,CAAWjM,MAAK,SAAOjB,GAAOgM,aAAW,IAAEvQ,MAAY,MAALN,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeO,WAAeqR,IAAWV,EAAgB,CAAE5K,WAAY,eAAkB,IAAM,SAChJiM,OAAOC,aAAa,GAAKC,SAASb,IAASc,cAAa,KAAKtB,EAAQQ,IADhEtB,GAIX,gCAGFU,GAAkBI,EAAQ,GACxB,cAAC5K,EAAA,QAAM,CACLC,KAAK,WACL2B,YAAkB,MAALvI,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeK,QAC5BsG,UAAgB,MAAL9G,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeE,WAC1ByF,MAAO,CACL4J,YAAkB,MAAL1P,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeK,QAC5B+F,aAAc,EACd2B,UAAW,GACXlD,MAAO,QAET6B,QAzHd,WAEiC,gCAuHW,SAC/B,qBAID,gCAEA,iCAyDVhC,GAASC,UAAWtD,OAAO,CAC/B2G,MAAO,CACL1B,WAAY,gBACZH,UAAW,aACXI,aAAc,GACdgC,SAAU,GACVN,UAAW,UAEbwE,KAAM,CACJnG,WAAY,iBAEd0B,MAAO,CACL1B,WAAY,gBACZC,aAAc,GACdgC,SAAU,IAEZL,SAAU,CACR5B,WAAY,gBACZ2B,UAAW,OACXM,SAAU,GACVR,UAAW,GACXxB,aAAc,IAEhBmI,SAAU,CACR7J,MAAO,OACP8C,eAAgB,WAChBC,WAAY,SACZxB,aAAc,IAEhBuK,WAAY,CACV7L,OAAQ,MACRD,MAAO,OACPsB,UAAW,SACX4B,UAAW,IAEb6I,iBAAkB,CAChBjJ,eAAgB,SAChBC,WAAY,UAEd8E,YAAa,CACXnG,aAAc,IAEhBmK,YAAa,CACXpK,WAAY,kBAEdqG,IAAK,CACH3C,SAAU,WACVjF,OAAQ,GACRmG,MAAO,EACP0B,OAAQ,EACRxG,aAAc,MAIH2M,GAzGQ,WAAO,IAAD,EACrBlT,EAAQyF,qBAEd,EAAgChC,mBAAS,CACvCmG,KAAM,OACNnF,QAAS,GACTyB,SAAS,EACT1B,MAAO,SAAC4I,EAAKxD,GACXyD,EAAY,SAAKC,GAAQ,IAAE7I,QAAS2I,EAAKxD,KAAMA,EAAM1D,SAAS,MAEhE2D,KAAM,WACJwD,EAAY,SAAKC,GAAQ,IAAEpH,SAAS,QAEtC,WAVKoH,EAAQ,KAAED,EAAW,KAY5B,OACE,qCACE,cAAC,EAAM,IACP,cAAC,GAAQ,CACPxD,KAAMyD,EAASzD,KACfpF,QAAS6I,EAAS7I,QAClBmF,KAAM0D,EAAS1D,KACf1D,QAASoH,EAASpH,UAEpB,eAAC2B,EAAA,QAAU,CACT/B,MAAO,CAAEC,gBAAsB,MAAL/F,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeE,YACzC+F,sBAAuB,CACrB0B,eAAgB,SAChBC,WAAY,SACZzB,UAAW,SACXgC,SAAU,OACV,UAEF,cAACL,EAAA,QAAI,CAACnC,MAAO,CACXd,MAAO,IACPsD,SAAU,QACV,SACA,eAAC,GAAU,CAACxC,MAAO,CAAEoC,UAAW,GAAIxB,aAAc,IAAK,UACrD,cAAC,GAAWwC,KAAI,CAACtC,KAAK,OAAOoC,KAAK,SAClC,cAAC,GAAWF,KAAI,CAACC,MAAM,uBAAoBC,KAAK,iBAChD,cAAC,GAAWF,KAAI,CAACC,MAAM,mBAAgBC,KAAK,wBAIhD,cAAC,GAAiB,CAAChE,MAAO,IAAKR,MAAO8I,EAAS9I,QAC/C,cAACyD,EAAA,QAAI,CAACnC,MAAO,CAAEY,aAAc,a,uCC5MtByM,GAtCM,SAAH,GAKX,IAAD,YAJJnG,OAAQoG,OAAG,MAAG,GAAE,EAChBb,EAAK,EAALA,MAAM,EAAD,EACLc,mBAAW,MAAG,aAAQ,MACtBC,qBAAa,MAAG,SAACC,KAAa,EAExBvT,EAAQyF,qBAEd,EAAiBhC,mBAAS,KAAI2P,IAAvBpG,EAA4B,SAAtB,GAEb,OACE,cAACwG,GAAA,QAAgB,CACfC,SAAU,CACR1N,gBAAsB,MAAL/F,GAAa,OAAR,EAALA,EAAOG,SAAiB,OAAX,EAAb,EAAeI,gBAAV,EAAL,EAA0BF,WAC3CC,MAAY,MAALN,GAAa,OAAR,EAALA,EAAOG,SAAiB,OAAX,EAAb,EAAeI,gBAAV,EAAL,EAA0BD,OAEnCoT,gBAAiB,CAAEnB,QAAOvF,UAC1BsG,cAAeA,EACfD,YAAaA,EACbM,YAAa,SAACC,GAAK,aACjB,cAAC,UAAI,CACH9N,MAAO,CACL+N,UAAW,MACXzL,UAAW,SACX3B,WAAY,iBACZqN,cAAe,GACfC,WAAY,MACZC,WAAY,GACZtL,SAAU,IACV,SAEI,MAALkL,GAAY,OAAP,EAALA,EAAOZ,YAAF,EAAL,EAAc7K,YCxBV8L,GAVI,WAAgB,IAAfrH,EAAI,uDAAG,GACnBsH,EAAOtH,EAAKuH,MAAM,KAClBC,EAAcF,EAAK,GAAG,GAAGG,cACzBC,EAAeJ,EAAKxI,OAAS,EAAIwI,EAAKA,EAAKxI,OAAS,GAAG,GAAG2I,cAAgB,GAE9E,OAAKD,EAEEA,EAAcE,EAFI,K,qkBCH7B,IAeMzP,GAASC,UAAWtD,OAAO,CAC7BgH,UAAW,CACPC,KAAM,EACNV,WAAY,SACZD,eAAgB,UAEpBK,MAAO,CACH1B,WAAY,gBACZH,UAAW,aACXoC,SAAU,IAEd6L,YAAa,CACT9N,WAAY,iBACZH,UAAW,aAEXoC,SAAU,MAIH8L,GAlCG,WAAO,IAAD,IACdxU,EAAQyF,qBAEd,OACI,qCACI,cAAC,UAAI,CAACK,MAAK,SAAOjB,GAAOsD,OAAK,IAAEO,SAAU,GAAIpI,MAAY,MAALN,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeK,QAAS0H,UAAW,KAAK,SAAC,uBAG9F,cAAC,UAAI,CAACpC,MAAK,SAAOjB,GAAO0P,aAAW,IAAEjU,MAAY,MAALN,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeK,QAAS0H,UAAW,KAAK,SAAC,yD,qkBCNlG,IA+FMrD,GAASC,UAAWtD,OAAO,CAC7BgH,UAAW,CACPC,KAAM,EACNV,WAAY,SACZD,eAAgB,UAEpBK,MAAO,CACH1B,WAAY,gBACZH,UAAW,aACXoC,SAAU,IAEd6L,YAAa,CACT9N,WAAY,iBACZH,UAAW,aAEXoC,SAAU,IAEdgE,MAAO,CACHxE,UAAW,GACXxB,aAAc,EACd1B,MAAO,QAEX4H,KAAM,CACFnG,WAAY,mBAILgO,GA1HA,WAAO,IAAD,MACXzU,EAAQyF,qBAEd,EAA4BhC,mBAAS,IAAG,WAAjC2I,EAAM,KAAEC,EAAS,KAExB,OACI,qCACI,cAAC,UAAI,CAACvG,MAAK,SAAOjB,GAAOsD,OAAK,IAAEO,SAAU,GAAIpI,MAAY,MAALN,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeK,QAAS0H,UAAW,KAAK,SAAC,iBAI9F,eAACqG,GAAA,QAAS,CACNzI,MAAK,SACEjB,GAAO6H,OAAK,IACf3G,gBAAsB,MAAL/F,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeS,QAClC,UAGF,cAAC,GAAS,CACN+D,MAAOyH,EACP7B,aAAc,SAACqC,GAAI,OAAKP,EAAUO,IAClC7F,KAAK,WACLgC,MAAM,oBACN2B,SAAU,aACV5E,MAAO,CAAEZ,OAAQ,GAAIF,MAAO,IAAKe,gBAAsB,MAAL/F,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeS,OACjEkR,aAAc,CACVvL,aAAc,KAItB,eAACgI,GAAA,QAAU1I,OAAM,WACb,cAAC0I,GAAA,QAAUC,MAAK,CAACG,cAAc,aAAY,SAAC,eAG5C,cAACJ,GAAA,QAAUC,MAAK,UAAC,mBAGjB,cAACD,GAAA,QAAUC,MAAK,UAAC,iCAKrB,eAACD,GAAA,QAAUO,IAAG,WACV,cAACP,GAAA,QAAUS,KAAI,CAACP,UAAW5J,GAAO+H,KAAK,SAAC,4BAGxC,cAAC2B,GAAA,QAAUS,KAAI,CAACP,UAAW5J,GAAO+H,KAAK,SAAC,QAGxC,cAAC2B,GAAA,QAAUS,KAAI,CAACP,UAAW5J,GAAO+H,KAAK,SAAC,kBAK5C,eAAC2B,GAAA,QAAUO,IAAG,WACV,cAACP,GAAA,QAAUS,KAAI,CAACP,UAAW5J,GAAO+H,KAAK,SAAC,kBAGxC,cAAC2B,GAAA,QAAUS,KAAI,CAACP,UAAW5J,GAAO+H,KAAK,SAAC,QAGxC,cAAC2B,GAAA,QAAUS,KAAI,CAACP,UAAW5J,GAAO+H,KAAK,SAAC,kBAK5C,eAAC2B,GAAA,QAAUO,IAAG,WACV,cAACP,GAAA,QAAUS,KAAI,CAACP,UAAW5J,GAAO+H,KAAK,SAAC,4BAGxC,cAAC2B,GAAA,QAAUS,KAAI,CAACP,UAAW5J,GAAO+H,KAAK,SAAC,QAGxC,cAAC2B,GAAA,QAAUS,KAAI,CAACP,UAAW5J,GAAO+H,KAAK,SAAC,yB,+kBCxE5D,IAkHM/H,GAASC,UAAWtD,OAAO,CAC7BgH,UAAW,CACPC,KAAM,EACNV,WAAY,SACZD,eAAgB,UAEpBK,MAAO,CACH1B,WAAY,gBACZH,UAAW,aACXoC,SAAU,IAEd6L,YAAa,CACT9N,WAAY,iBACZH,UAAW,aAEXoC,SAAU,IAEdgE,MAAO,CACHxE,UAAW,GACXxB,aAAc,EACd1B,MAAO,QAEX4H,KAAM,CACFnG,WAAY,mBAILiO,GA7IK,WAAO,IAAD,cAChB1U,EAAQyF,qBAEd,EAA4BhC,mBAAS,iBAAa,WAA3C2I,EAAM,KAAEC,EAAS,KACxB,EAAoC5I,mBAAS,GAAE,WAAxCkR,EAAU,KAAEC,EAAa,KAOhC,OACI,qCACI,cAAC,UAAI,CAAC9O,MAAK,SAAOjB,GAAOsD,OAAK,IAAEO,SAAU,GAAIpI,MAAY,MAALN,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeK,QAAS0H,UAAW,KAAK,SAAC,mBAI9F,eAACqG,GAAA,QAAS,CACNzI,MAAK,SACEjB,GAAO6H,OAAK,IACf3G,gBAAsB,MAAL/F,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeS,QAClC,UAGF,cAAC,GAAS,CACN+D,MAAOyH,EACP7B,aAAc,SAACqC,GAAI,OAAKP,EAAUO,IAClC7F,KAAK,WACLgC,MAAM,aACN2B,SAAU,cACVE,UAAW,eACX9E,MAAO,CAAEZ,OAAQ,GAAIF,MAAO,IAAKe,gBAAsB,MAAL/F,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeS,OACjEkR,aAAc,CACVvL,aAAc,KAItB,cAACgI,GAAA,QAAUO,IAAG,UACV,cAACP,GAAA,QAAUS,KAAI,CAACP,UAAW5J,GAAO+H,KAAK,SACnC,cAAC,UAAI,CAAC9G,MAAK,SAAOjB,GAAO+H,MAAI,IAAEiI,WAAY,KAAK,SAAC,oDAMzD,cAACtG,GAAA,QAAUO,IAAG,CAACgG,SAvCV,SAACC,GACd,MAAgCA,EAAMC,YAAYC,OAA5BjQ,GAAb,EAADkQ,EAAI,EAADC,EAAS,EAANlQ,OAAa,EAALD,OACtB4P,EAAc5P,IAqC4B,SAC9B,cAACuJ,GAAA,QAAUS,KAAI,CAACP,UAAW5J,GAAO+H,KAAK,SACnC,cAAC,aAAS,CACNpK,KAAM,CACF4S,OAAQ,CAAC,UAAW,YAAa,WAAS,QAAS,OAAQ,SAC3DC,SAAU,CACN,CACI7S,KAAM,CACc,IAAhB+I,KAAK+J,SACW,IAAhB/J,KAAK+J,SACW,IAAhB/J,KAAK+J,SACW,IAAhB/J,KAAK+J,SACW,IAAhB/J,KAAK+J,SACW,IAAhB/J,KAAK+J,aAKrBtQ,MAAO2P,EACP1P,OAAQ,IACRsQ,WAAW,GACXC,YAAY,GACZC,cAAe,EACfC,YAAa,CACT3P,gBAAsB,MAAL/F,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeS,MAChC+U,uBAA6B,MAAL3V,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeS,MACvCgV,qBAA2B,MAAL5V,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeS,MACrCiV,cAAe,EACfvV,MAAO,iBAAY,OAAU,MAALN,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeK,SACvCsV,WAAY,iBAAY,OAAU,MAAL9V,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeK,SAC5CsF,MAAO,CACHS,aAAc,IAElBwP,aAAc,CACVC,EAAG,IACHC,YAAa,IACbC,OAAa,MAALlW,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeK,UAG/B2V,QAAM,EACNrQ,MAAO,CACHsQ,eAAgB,EAChB7P,aAAc,UAM9B,cAACgI,GAAA,QAAUO,IAAG,UACV,cAACP,GAAA,QAAUS,KAAI,CAACP,UAAW5J,GAAO+H,KAAK,SACnC,cAAC,UAAI,CAAC9G,MAAK,SAAOjB,GAAO+H,MAAI,IAAEiI,WAAY,KAAK,SAAC,+BAMzD,cAACtG,GAAA,QAAUO,IAAG,UACV,cAACP,GAAA,QAAUS,KAAI,CAACP,UAAW5J,GAAO+H,KAAK,SACnC,cAAC,UAAI,CAAC9G,MAAO,CAAEW,WAAY,gBAAiBoO,WAAY,IAAK,SAAC,uD,+kBCtGtF,IAgJMhQ,GAASC,UAAWtD,OAAO,CAC7BgH,UAAW,CACPC,KAAM,EACNV,WAAY,SACZD,eAAgB,UAEpBK,MAAO,CACH1B,WAAY,gBACZH,UAAW,aACXoC,SAAU,IAEd6L,YAAa,CACT9N,WAAY,iBACZH,UAAW,aAEXoC,SAAU,IAEdgE,MAAO,CACHxE,UAAW,GACXxB,aAAc,EACd1B,MAAO,QAEX4H,KAAM,CACFnG,WAAY,mBAIL4P,GA3KC,WAAO,IAAD,YACZrW,EAAQyF,qBAEN/C,EAAS4C,qBAAWjC,GAApBX,KACF4T,EAASrC,GAAavR,EAAK6T,MAEjC,EAA4B9S,mBAAS,iBAAa,WAA3C2I,EAAM,KAAEC,EAAS,KA0BxB,OACI,qCACI,cAAC,UAAI,CAACvG,MAAK,SAAOjB,GAAOsD,OAAK,IAAEO,SAAU,GAAIpI,MAAY,MAALN,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeK,QAAS0H,UAAW,KAAK,SAAC,gBAI9F,eAACqG,GAAA,QAAS,CACNzI,MAAK,SACEjB,GAAO6H,OAAK,IACf3G,gBAAsB,MAAL/F,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeS,QAClC,UAGF,cAAC,GAAS,CACN+D,MAAOyH,EACP7B,aAAc,SAACqC,GAAI,OAAKP,EAAUO,IAClC7F,KAAK,WACLgC,MAAM,aACN2B,SAAU,cACVE,UAAW,eACX9E,MAAO,CAAEZ,OAAQ,GAAIF,MAAO,IAAKe,gBAAsB,MAAL/F,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeS,OACjEkR,aAAc,CACVvL,aAAc,KA9ClB,CACZ,CACI4D,SAAU,EACVqM,SAAU,EACVtC,KAAM,gBACNuC,KAAM,IACNC,OAAQ,IAEZ,CACIvM,SAAU,EACVqM,SAAU,GACVtC,KAAM,oBACNuC,KAAM,GACNC,OAAQ,IAEZ,CACIvM,SAAU,EACVqM,SAAU,GACVtC,KAAM,eACNuC,KAAM,GACNC,OAAQ,KA+BQ9H,KAAI,SAAC+H,EAAMlG,GAAG,iBAClB,eAAClC,GAAA,QAAUO,IAAG,WACV,eAACP,GAAA,QAAUS,KAAI,CAACP,UAAW5J,GAAO+H,KAAK,UACnC,eAAC,UAAI,CAAC9G,MAAK,SAAOjB,GAAO+H,MAAI,IAAEgK,YAAa,KAAK,UAC5CD,EAAKxM,SAAS,UAEnB,cAAC,UAAO3D,KAAI,CAAC6C,KAAM,GAAIN,MAAOkL,GAAa0C,EAAKzC,MAAO2C,WAAU,MAAOhS,GAAO+H,QAC/E,cAAC,UAAI,CAAC9G,MAAK,SAAOjB,GAAO+H,MAAI,IAAEiI,WAAY,KAAK,SAC3C8B,EAAKzC,UAGd,cAAC3F,GAAA,QAAUS,KAAI,CAACP,UAAW5J,GAAO+H,KAAK,SACnC,cAACkK,GAAA,QAAW,CAACN,SAAUG,EAAKH,SAAUlW,MAAY,MAALN,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeK,QAASsF,MAAO,CAAEb,OAAQ,EAAGD,MAAO,SAEpG,eAACuJ,GAAA,QAAUS,KAAI,CAACP,UAAW5J,GAAO+H,KAAK,UACnC,cAACzD,GAAA,QAAU,CACPvC,KAAK,SACLyC,KAAM,GACND,UAAgB,MAALpJ,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeK,UAE9B,cAAC,UAAI,UACAmW,EAAKF,OAEV,cAACtN,GAAA,QAAU,CACPvC,KAAK,cACLyC,KAAM,GACND,UAAgB,MAALpJ,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeK,UAE9B,cAAC,UAAI,UACAmW,EAAKD,cA5BEjG,MAmC5B,cAAClC,GAAA,QAAUO,IAAG,UACV,cAACP,GAAA,QAAUS,KAAI,CAACP,UAAW5J,GAAO+H,KAAK,SAAC,UAK5C,eAAC2B,GAAA,QAAUO,IAAG,WACV,eAACP,GAAA,QAAUS,KAAI,CAACP,UAAW5J,GAAO+H,KAAK,UACnC,cAAC,UAAI,CAAC9G,MAAK,SAAOjB,GAAO+H,MAAI,IAAEgK,YAAa,KAAK,SAAC,cAGlD,cAAC,UAAOpQ,KAAI,CAAC6C,KAAM,GAAIN,MAAOuN,EAAQO,WAAU,MAAOhS,GAAO+H,QAC9D,eAAC,UAAI,CAAC9G,MAAK,SAAOjB,GAAO+H,MAAI,IAAEiI,WAAY,KAAK,UAAC,YACtCnS,EAAK6T,KAAK,UAGzB,cAAChI,GAAA,QAAUS,KAAI,CAACP,UAAW5J,GAAO+H,KAAK,SAEf,QAAhBzF,UAASC,GACL,cAAC0P,GAAA,QAAW,CAACN,SAAU,IAAMlW,MAAY,MAALN,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeK,QAASsF,MAAO,CAAEb,OAAQ,EAAGD,MAAO,OAEvF,+BAGZ,eAACuJ,GAAA,QAAUS,KAAI,CAACP,UAAW5J,GAAO+H,KAAK,UACnC,cAACzD,GAAA,QAAU,CACPvC,KAAK,SACLyC,KAAM,GACND,UAAgB,MAALpJ,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeK,UAE9B,cAAC,UAAI,UAAC,MAGN,cAAC2I,GAAA,QAAU,CACPvC,KAAK,cACLyC,KAAM,GACND,UAAgB,MAALpJ,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeK,UAE9B,cAAC,UAAI,UAAC,mB,qkBC/H9B,IAkHMqE,GAASC,UAAWtD,OAAO,CAC7BgH,UAAW,CACPC,KAAM,EACNV,WAAY,SACZD,eAAgB,UAEpBK,MAAO,CACH1B,WAAY,gBACZH,UAAW,aACXoC,SAAU,IAEd6L,YAAa,CACT9N,WAAY,iBACZH,UAAW,aAEXoC,SAAU,IAEdqO,iBAAkB,CACdlO,cAAe,OAEnBmO,qBAAsB,CAClBnO,cAAe,SACfgM,WAAY,IAEhBoC,OAAQ,CACJjS,MAAO,KAEXkS,kBAAmB,CACfjS,OAAQ,GACRD,MAAO,UAIAmS,GAnJC,WAAO,IAAD,gBACZnX,EAAQyF,qBACN/C,EAAS4C,qBAAWjC,GAApBX,KACF4T,EAASrC,GAAavR,EAAK6T,MAEjC,EAA0B9S,mBAAS,GAAE,WAA9B8O,EAAK,KAAE6E,EAAQ,KAChBpK,EAAS,CACX,CACIyD,IAAK,SACLtI,MAAO,QACPkP,YAAa,SACbC,SAAU,cAAC,GAAM,KAErB,CACI7G,IAAK,SACLtI,MAAO,UACPkP,YAAa,SACbC,SAAU,cAAC,GAAO,KAEtB,CACI7G,IAAK,YACLtI,MAAO,gBACPkP,YAAa,YACbC,SAAU,cAAC,GAAS,KAExB,CACI7G,IAAK,cACLtI,MAAO,aACPkP,YAAa,cACbC,SAAU,cAAC,GAAW,MAa9B,OACI,qCACI,cAAC,EAAM,CAACjS,gBAAc,IACtB,eAACwC,EAAA,QAAU,CACP/B,MAAO,CACHC,gBAAsB,MAAL/F,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeE,YAEpC+F,sBAAuB,CACnB0B,eAAgB,SAChBC,WAAY,UACd,UAEF,eAACE,EAAA,QAAI,CAACnC,MAAO,CAAEd,MAAO,OAAQ,UAC1B,eAAC,GAAU,CAACc,MAAO,CAAEoC,UAAW,GAAIxB,aAAc,IAAK,UACnD,cAAC,GAAWwC,KAAI,CAACtC,KAAK,OAAOoC,KAAK,SAClC,cAAC,GAAWF,KAAI,CAACC,MAAM,eAAeC,KAAK,eAG/C,cAAC,UAAI,CAAClD,MAAK,SAAOjB,GAAOsD,OAAK,IAAE7H,MAAY,MAALN,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeK,QAASkG,aAAc,KAAK,SAAC,iBAGnF,eAACuB,EAAA,QAAI,CAACnC,MAAOjB,GAAOkS,iBAAiB,UACjC,cAAC,UAAOvQ,KAAI,CAAC6C,KAAM,GAAIN,MAAOuN,EAAQO,WAAY,CAAEpQ,WAAY,mBAChE,eAACoB,EAAA,QAAU,CAAC/B,MAAOjB,GAAOmS,qBAAqB,UAC3C,cAAC,UAAI,CAAClR,MAAK,SAAOjB,GAAOsD,OAAK,IAAE7H,MAAY,MAALN,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeK,UAAU,SACvD,MAAJkC,OAAI,EAAJA,EAAM6T,OAEX,eAAC,UAAI,CAACzQ,MAAK,SAAOjB,GAAO0P,aAAW,IAAEjU,MAAY,MAALN,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeK,UAAU,UAAC,OACtD,OAAT,EAAK,MAAJkC,OAAI,EAAJA,EAAMqM,IAAE,EAAI,kBAErB,cAAC,UAAI,CAACjJ,MAAK,SAAOjB,GAAO0P,aAAW,IAAEjU,MAAY,MAALN,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeK,UAAU,SAAC,4BAGvE,cAAC,UAAI,CAACsF,MAAK,SAAOjB,GAAO0P,aAAW,IAAEjU,MAAY,MAALN,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeK,UAAU,SAAC,yDAM/E,cAAC,UAAI,CAACsF,MAAK,SAAOjB,GAAOsD,OAAK,IAAEO,SAAU,GAAIpI,MAAY,MAALN,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeK,QAAS0H,UAAW,KAAK,SAAC,sBAG9F,cAACL,EAAA,QAAU,CAAC/B,MAAO,CAAEd,MAAO,OAAQkD,UAAW,GAAI,SAC/C,cAACD,EAAA,QAAI,CAACnC,MAAO,CAAEyR,SAAU,OAAQ1O,cAAe,OAAQ,SACpD,cAAC,UAAOrC,KAAI,CAAC6C,KAAM,GAAIN,MAAO,IAAK8N,WAAY,CAAEpQ,WAAY,uBAIpEuG,EAAOuF,GAAO+E,YAInB,cAACrP,EAAA,QAAI,CAACnC,MAAO,CAAEY,aAAc,SAGjC,cAACuB,EAAA,QAAI,CAACnC,MAAOjB,GAAOqS,kBAAkB,SAClC,cAACM,GAAY,CACTjF,MAAOA,EACPe,cAnEM,SAACC,GAMnB6D,EALI7D,IAAWhB,EAKNgB,EAJI,OAkEDvG,OAAQA,EACRqG,YAAaG,WAAiBiE,SAAS,CACnCC,OAAQ,aACRC,OAAQ,aACRC,UAAW,aACXC,YAAa,uB,+BCjHtBC,GAJG,SAACC,GACf,OAAOC,KAAiBD,EAAI,CAAEE,SAAU,Q,qkBCG5C,IAuKMpT,GAASC,UAAWtD,OAAO,CAC7BgH,UAAW,CACPC,KAAM,EACNX,eAAgB,SAChBC,WAAY,SACZ/C,MAAO,OACPe,gBAAiB,OAErBmS,QAAS,CACLlT,MAAO,OACPuB,aAAc,EACdtB,OAAQ,EACRyB,aAAc,GAElByR,OAAQ,CACJnT,MAAO,OACP8C,eAAgB,SAChBC,WAAY,SACZK,UAAW,UAEfD,MAAO,CACH1B,WAAY,gBACZiC,SAAU,IAEdL,SAAU,CACN5B,WAAY,gBACZ2B,UAAW,OACXM,SAAU,GACVR,UAAW,GACXxB,aAAc,IAElB0R,cAAe,CACX3R,WAAY,cACZ2B,UAAW,OACXM,SAAU,IAEd2P,WAAY,CACR5R,WAAY,iBACZ2B,UAAW,OACXM,SAAU,IAEd4P,eAAgB,CACZ7R,WAAY,cACZ2B,UAAW,OACXM,SAAU,IAEdqJ,OAAQ,CACJ/M,MAAO,MACP+C,WAAY,SACZD,eAAgB,SAChBvB,aAAc,GACdG,aAAc,MAIP6R,GA9NM,SAAH,GAA0E,IAiB7B,QAqEpD,UAtFyBpG,EAAM,EAAlBqG,WAAU,IAAUC,cAAM,MAAG,aAAS,MAAEC,gBAAQ,MAAG,aAAS,EAC1E1Y,EAAQyF,qBAENrB,EAAaN,0BAAbM,SAEFuU,EAAgB,CAClBpL,MAAO,GACPqL,QAAS,EACTtM,MAAO,EACPuM,MAAO,GAEX,EAAoCpV,mBAASkV,GAAc,WAApDH,EAAU,KAAEM,EAAa,KAMhC,OAJA/U,qBAAU,WACN+U,EAAoB,MAAN3G,IAAUwG,KACzB,CAACxG,IAEEqG,EAAWI,QAAUJ,EAAWjL,MAAS,KAAQ,GAE/C,eAAC1F,EAAA,QAAU,CACP/B,MAAO,CAAEC,gBAAsB,MAAL/F,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAee,cACzCkF,sBAAuB,CACnB0B,eAAgB,SAChBC,WAAY,UACd,UAEF,eAACE,EAAA,QAAI,CACDnC,MAAO,CACHoC,UAAW,IACXJ,eAAgB,SAChBC,WAAY,UACd,UAEF,cAACoB,GAAA,QAAU,CACPE,KAAM,GACNzC,KAAK,WACLwC,UAAgB,MAALpJ,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeW,OAE9B,cAAC,UAAI,CAACgF,MAAK,SAAOjB,GAAOsD,OAAK,IAAE7H,MAAON,EAAMG,OAAOW,KAAM4F,aAAc,KAAK,SAAC,qBAKlF,eAACuB,EAAA,QAAI,CACDnC,MAAO,CACHoC,UAAW,GACXlD,MAAO,IACPsD,SAAU,MACVR,eAAgB,aAChBC,WAAY,cACd,UAEF,cAAC,UAAI,CAACjC,MAAK,SAAOjB,GAAOuT,eAAa,IAAE9X,MAAON,EAAMG,OAAOW,KAAM4F,aAAc,IAAI,SAAC,gBAIrF,cAAC4J,GAAA,QAAO,CAACxK,MAAK,SAAOjB,GAAOqT,SAAO,IAAEnS,gBAAsB,MAAL/F,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeW,SAErE,eAAC,UAAI,CAACgF,MAAK,SAAOjB,GAAOwT,YAAU,IAAE/X,MAAON,EAAMG,OAAOW,OAAO,UAAC,YACnD0X,EAAWI,QAAQ,IAAEJ,EAAWjL,SAE9C,eAAC,UAAI,CAACzH,MAAK,SAAOjB,GAAOwT,YAAU,IAAE/X,MAAON,EAAMG,OAAOW,OAAO,UAAC,UACrDgX,GAA6B,IAAnBU,EAAWlM,UAEjC,eAAC,UAAI,CAACxG,MAAK,SAAOjB,GAAOyT,gBAAc,IAAEhY,MAAON,EAAMG,OAAOW,OAAO,UAAC,0BAC/C0X,EAAWK,YAKrC,cAAClS,EAAA,QAAM,CACHb,MAAO,CAAEoC,UAAW,GAAIlD,MAAO,IAAKsD,SAAU,OAC9CvB,KAAK,YACLH,KAAK,yBACLC,QAAS,WACL4R,IACArU,EAAS,iBAEbmE,YAAavI,EAAMG,OAAOW,KAC1BgG,UAAgB,MAAL9G,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAee,aAAa,SAC1C,gBAQL,eAAC2G,EAAA,QAAU,CACP/B,MAAO,CAAEC,gBAAsB,MAAL/F,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAec,QACzCmF,sBAAuB,CACnB0B,eAAgB,SAChBC,WAAY,UACd,UAGF,eAACE,EAAA,QAAI,CACDnC,MAAO,CACHoC,UAAW,IACXJ,eAAgB,SAChBC,WAAY,UACd,UAEF,cAACoB,GAAA,QAAU,CACPE,KAAM,GACNzC,KAAK,eACLwC,UAAgB,MAALpJ,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeE,aAE9B,cAAC,UAAI,CAACyF,MAAK,SAAOjB,GAAOsD,OAAK,IAAE7H,MAAON,EAAMG,OAAOE,WAAYqG,aAAc,KAAK,SAAC,6BAKxF,eAACuB,EAAA,QAAI,CACDnC,MAAO,CACHoC,UAAW,GACXlD,MAAO,IACPsD,SAAU,MACVR,eAAgB,aAChBC,WAAY,cACd,UAEF,cAAC,UAAI,CAACjC,MAAK,SAAOjB,GAAOuT,eAAa,IAAE9X,MAAON,EAAMG,OAAOE,WAAYqG,aAAc,IAAI,SAAC,gBAI3F,cAAC4J,GAAA,QAAO,CAACxK,MAAK,SAAOjB,GAAOqT,SAAO,IAAEnS,gBAAsB,MAAL/F,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeE,eAErE,eAAC,UAAI,CAACyF,MAAK,SAAOjB,GAAOwT,YAAU,IAAE/X,MAAON,EAAMG,OAAOE,aAAa,UAAC,YACzDmY,EAAWI,QAAQ,IAAEJ,EAAWjL,SAE9C,eAAC,UAAI,CAACzH,MAAK,SAAOjB,GAAOwT,YAAU,IAAE/X,MAAON,EAAMG,OAAOE,aAAa,UAAC,UAC3DyX,GAA6B,IAAnBU,EAAWlM,UAEjC,eAAC,UAAI,CAACxG,MAAK,SAAOjB,GAAOyT,gBAAc,IAAEhY,MAAON,EAAMG,OAAOE,aAAa,UAAC,0BACrDmY,EAAWK,YAKrC,cAAClS,EAAA,QAAM,CACHb,MAAO,CAAEoC,UAAW,GAAIlD,MAAO,IAAKsD,SAAU,OAC9CvB,KAAK,YACLH,KAAK,yBACLC,QAAS,WACL4R,IACArU,EAAS,iBAEbmE,YAAavI,EAAMG,OAAOE,WAC1ByG,UAAgB,MAAL9G,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAec,OAAO,SAAC,aAItC,cAAC0F,EAAA,QAAM,CACHb,MAAO,CAAEoC,UAAW,GAAIlD,MAAO,IAAKsD,SAAU,OAC9CvB,KAAK,OACLF,QAAS6R,EACT5R,UAAgB,MAAL9G,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeE,WAAW,SACxC,yB,qkBCzJjB,IA0LM0Y,GAAgB,SAAH,GAAgC,IAAD,EAAzBvV,EAAQ,EAARA,SAAU8J,EAAQ,EAARA,SAC3BtN,EAAQyF,qBAEd,OACE,qCACE,cAAC,EAAM,IACP,cAAC,GAAQ,CACPoE,KAAMyD,EAASzD,KACfpF,QAAS6I,EAAS7I,QAClBmF,KAAM0D,EAAS1D,KACf1D,QAASoH,EAASpH,UAEpB,cAAC2B,EAAA,QAAU,CACT/B,MAAO,CAAEC,gBAAsB,MAAL/F,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeE,YACzC+F,sBAAuB,CACrB0B,eAAgB,SAChBC,WAAY,UACZ,SAEF,eAACE,EAAA,QAAI,CAACnC,MAAO,CAAEd,MAAO,OAAQ,UAC5B,eAAC,GAAU,CAACc,MAAO,CAAEoC,UAAW,GAAIxB,aAAc,IAAK,UACrD,cAAC,GAAWwC,KAAI,CAACtC,KAAK,OAAOoC,KAAK,SAClC,cAAC,GAAWF,KAAI,CAACC,MAAK,OAAUC,KAAK,gBAGtCxF,EAED,cAACyE,EAAA,QAAI,CAACnC,MAAO,CAAEY,aAAc,eAQjC7B,GAASC,UAAWtD,OAAO,CAC/BgH,UAAW,CACTC,KAAM,EACNX,eAAgB,SAChBC,WAAY,SACZ/C,MAAO,OACPe,gBAAiB,OAEnBmS,QAAS,CACPlT,MAAO,OACPuB,aAAc,EACdtB,OAAQ,EACRyB,aAAc,GAEhByR,OAAQ,CACNnT,MAAO,OACP8C,eAAgB,SAChBC,WAAY,SACZK,UAAW,UAEbD,MAAO,CACL1B,WAAY,gBACZiC,SAAU,IAEZL,SAAU,CACR5B,WAAY,gBACZ2B,UAAW,OACXM,SAAU,GACVR,UAAW,GACXxB,aAAc,IAEhB0R,cAAe,CACb3R,WAAY,cACZ2B,UAAW,OACXM,SAAU,IAEZ2P,WAAY,CACV5R,WAAY,iBACZ2B,UAAW,OACXM,SAAU,IAEZ4P,eAAgB,CACd7R,WAAY,cACZ2B,UAAW,OACXM,SAAU,IAEZqJ,OAAQ,CACN/M,MAAO,MACP+C,WAAY,SACZD,eAAgB,SAChBvB,aAAc,GACdG,aAAc,MAIHsS,GApRE,WAAO,IAAD,QAsGR,EArGPhZ,EAAQyF,qBAEd,EAA8BhC,oBAAS,GAAM,WAAtCE,EAAO,KAAEC,EAAU,KAC1B,EAA8CH,mBAAS,GAAE,WAAlDwV,EAAe,KAAEC,EAAkB,KAC1C,EAAgCzV,oBAAU,GAAE,WAArCgP,EAAQ,KAAE0G,EAAW,KAC5B,EAAkC1V,mBAAS,IAAG,WAAvC+J,EAAS,KAAEC,EAAY,KAC9B,EAA4BhK,mBAAS,GAAE,WAAhC0U,EAAM,KAAEiB,EAAS,KACxB,EAA0B3V,mBAAS,GAAE,WAA9B6I,EAAK,KAAE+M,EAAQ,KACtB,EAA0B5V,oBAAS,GAAM,WAAlC6V,EAAK,KAAEC,EAAQ,KACtB,EAAoC9V,oBAAS,GAAM,WAA5C+V,EAAU,KAAEC,EAAa,KAC1BC,IAAeT,GAAmBzL,EAAU9B,QAElD,EAAgCjI,mBAAS,CACvCmG,KAAM,OACNnF,QAAS,GACTyB,SAAS,EACT1B,MAAO,SAAC4I,EAAKxD,GACXyD,EAAY,SAAKC,GAAQ,IAAE7I,QAAS2I,EAAKxD,KAAMA,EAAM1D,SAAS,MAEhE2D,KAAM,WACJwD,EAAY,SAAKC,GAAQ,IAAEpH,SAAS,QAEtC,WAVKoH,EAAQ,KAAED,EAAW,KAWtB7I,EAAQ8I,EAAS9I,MAEjBmV,GAAO,WACXR,GAAa,GACbD,EAAmB,GACnBO,GAAc,GACdJ,EAAS,GACTD,EAAU,IAkBU,cAmBrB,OAnBqB,QAAtB,YACE,IACEO,KACA/V,GAAW,GACX,IAAQpB,SAAe3C,EAAIqO,IAAI,mBAAvB1L,KAQFoX,GAPyB,MAAJpX,OAAI,EAAJA,EAAMgL,UAAUoB,KAAI,SAAAC,GAC7C,OAAO,SACFA,GAAQ,IACX4C,aAAclB,OAAO4B,OAAOtD,EAAS4C,oBAGAoI,MAAK,iBAAM,GAAMtO,KAAK+J,YAClCwE,MAAM,EAAG,IACtCrM,EAAmB,MAANmM,IAAU,IACvBhW,GAAW,GACX,MAAO7B,GAAQ,IAAD,IACdkC,QAAQC,IAAInC,GACZyC,EAA8B,OAAzB,EAAM,MAALzC,GAAe,OAAV,EAALA,EAAOiC,eAAF,EAAL,EAAiBS,SAAO,EAAI,kDAAgD,cAErF,sBAQD,SAASsV,GAAaxH,GACpB,OAAIE,GAAY,EACVA,IAAaF,EACR/E,EAAUyL,GAAiBvH,eAAiBa,EAAQvS,EAAMG,OAAOa,QAAUhB,EAAMG,OAAOc,OAExFuM,EAAUyL,GAAiBvH,eAAiBa,EAAQvS,EAAMG,OAAOa,QAAUhB,EAAMG,OAAOK,QAG1FR,EAAMG,OAAOK,QAkBxB,OA3DAuD,qBAAU,WACR,IAAI2V,EAAJ,CACA,IAAIM,EAASzN,YAAW,kBAAM8M,EAAS/M,EAAQ,KAAI,KACnD,OAAO,kBAAME,aAAawN,OACzB,CAAC1N,EAAOoN,IAuBXO,yBACEC,uBAAY,YAxBS,WAED,yBAuBlB9L,KACC,CAACkL,KA6BF3V,EAEA,cAACsE,EAAA,QAAI,CAACnC,MAAO,CAAE2C,KAAM,EAAGzD,MAAO,OAAQ8C,eAAgB,SAAUC,WAAY,UAAW,SACtF,cAACsG,GAAA,QAAiB,CAACC,WAAW,EAAMhO,MAAY,MAALN,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeK,QAAS6I,KAAM,YAK3EmQ,EACK,cAAC,GAAY,CAClBf,OAAQkB,GACRjB,SA/EW,WACbS,GAAa,GACbD,EAAmB,GACnBO,GAAc,GACdL,EAAU,GACVC,EAAS,GACTE,GAAUD,IA0ERd,WAAY,CACVjL,MAAOC,EAAU9B,OACjBkN,QAAST,EACT7L,MAAOA,EACPuM,MAAOtN,KAAKE,MAAO0M,GAAUA,EAAS7L,GAAS,QAMnD,cAAC,GAAa,CAACgB,SAAUA,EAAS,SAChC,eAACrF,EAAA,QAAI,CACHnC,MAAO,CACLd,MAAO,IACPsD,SAAU,OACVR,eAAgB,gBAChBC,WAAY,SACZzB,UAAW,UACX,UAEF,cAAC,UAAI,CAACR,MAAO,CAAEY,aAAc,EAAGD,WAAY,gBAAiBiC,SAAU,GAAIpI,MAAON,EAAMG,OAAOK,SAAU,SACtGsX,GAAkB,IAARxL,KAEb,cAAC,UAAI,CAACxG,MAAK,SAAOjB,GAAOwD,UAAQ,IAAE/H,MAAON,EAAMG,OAAOK,UAAU,SAC3DyY,EAAkB,EAAC,MAAMzL,EAAU9B,SAEzC,cAAC,UAAI,CAAC5F,MAAK,SAAOjB,GAAOsD,OAAK,IAAE7H,MAAON,EAAMG,OAAOK,QAASwE,MAAO,MAAOoD,UAAW,SAAU1B,aAAc,KAAK,SACtF,OADsF,EAChH8G,EAAUyL,SAAgB,EAA1B,EAA4BhK,YAG/B,cAAChH,EAAA,QAAI,CAACnC,MAAO,CAAEd,MAAO,OAAQ8C,eAAgB,gBAAiBC,WAAY,UAAW,SACzD,OADyD,EACnFyF,EAAUyL,KAA8B,OAAd,EAA1B,EAA4BxH,mBAAF,EAA1B,EAA0C7C,KAAI,SAACC,EAAU0D,GAAK,OAC7D,eAAC5L,EAAA,QAAM,CAELb,MAAO,CAAEY,aAAc,GAAI1B,MAAO,MAAO0K,YAAaqK,GAAaxH,IACnEvG,aAAc,CACZhH,MAAO,OACP8C,eAAgB,SAChBC,WAAY,UAEdhB,KAAK,WACLF,QAAS,WACY,IAAD,EAAd4L,EAAW,IACb0G,EAAY5G,IACc,OAA1B,EAAA/E,EAAUyL,SAAgB,EAA1B,EAA4BvH,gBAAiBa,GAAS6G,EAAUjB,EAAS,KAG7ErR,UAAWiT,GAAaxH,GAAO,UAE3BG,OAAOC,aAAa,GAAKJ,GAAOM,cAAa,IAAI,IAAEhE,IAhBlD0D,QAqBX,cAAC5L,EAAA,QAAM,CACLC,KAAK,WACLC,QAlFR,WACE,IAAkB,IAAd4L,EAAJ,CAIA,GAAKwG,EAAkB,GAAMzL,EAAU9B,OAGrC,OAFA+N,GAAc,QACdP,EAAmBD,EAAkB,GAGvCE,GAAa,GACbD,EAAmBD,EAAkB,QATnCzU,EAAM,kCAAmC,UAiFrCuC,KAAK,YACLD,UAAgB,MAAL9G,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeE,WAC1ByF,MAAO,CACLS,aAAc,EACd2B,UAAW,GACXlD,MAAO,OACP,SACH,qBCnLHmV,GAAWC,qBAgBFC,GAdG,WAAH,OACb,eAACF,GAASG,UAAS,CAACC,cAAe,CACjCC,aAAa,EACbrS,MAAO,UACP,UACA,cAACgS,GAASM,OAAM,CAACvG,KAAK,OAAOwG,UAAW/R,IACxC,cAACwR,GAASM,OAAM,CAACvG,KAAK,UAAUwG,UAAWvD,KAC3C,cAACgD,GAASM,OAAM,CAACvG,KAAK,eAAewG,UAAWzN,KAChD,cAACkN,GAASM,OAAM,CAACvG,KAAK,eAAewG,UAAW3H,KAChD,cAACoH,GAASM,OAAM,CAACvG,KAAK,iBAAiBwG,UAAWxH,KAClD,cAACiH,GAASM,OAAM,CAACvG,KAAK,WAAWwG,UAAW1B,S,wlBCZhD,IA+IMnU,GAASC,UAAWtD,OAAO,CAC/BgH,UAAW,CACTzC,gBAAiB,OACjBgC,WAAY,SACZD,eAAgB,UAElB6S,aAAc,CACZ3V,MAAO,KAETmD,MAAO,CACLO,SAAU,GACVqL,WAAY,MACZrN,aAAc,GAEhBkU,MAAO,CACLlU,aAAc,EACdwB,UAAW,GAEb2S,cAAe,CACbtU,aAAc,EACdG,aAAc,EACdwB,UAAW,GAEbnD,KAAM,CACJmD,UAAW,GACXxB,aAAc,GACd1B,MAAO,GACPC,OAAQ,KAEV6V,WAAY,CACV3Q,SAAU,WACV4C,OAAQ,EACR7H,OAAQ,EACRuB,WAAY,iBAIDsU,GApLA,WAAO,IAAD,cACX5Y,EAAUmD,qBAAWjC,GAArBlB,MACFnC,EAAQyF,qBACR5B,EAAaC,0BAEnB,EAA4CL,oBAAS,GAAK,WAAnDuX,EAAc,KAAEC,EAAiB,KACxC,EAAgCxX,mBAAS,CACvCmG,KAAM,OACNnF,QAAS,GACTyB,SAAS,EACT1B,MAAO,SAAC4I,EAAKxD,GACXyD,EAAY,SAAKC,GAAQ,IAAE7I,QAAS2I,EAAKxD,KAAMA,EAAM1D,SAAS,MAEhE2D,KAAM,WACJwD,EAAY,SAAKC,GAAQ,IAAEpH,SAAS,QAEtC,WAVKoH,EAAQ,KAAED,EAAW,KAW5B,EAAgC5J,mBAAS,IAAG,WAArCyX,EAAQ,KAAEC,EAAW,KAC5B,EAAgC1X,mBAAS,IAAG,WAArCrB,EAAQ,KAAEgZ,EAAW,KAED,aAE1B,OAF0B,OAA3B,kBACQjZ,EAAM+Y,EAAU9Y,EAAUkL,EAAS9I,WAC1C,sBAUD,OACE,qCACE,eAACqD,EAAA,QAAU,CACT/B,MAAO,CAAEC,gBAAsB,MAAL/F,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeK,SACzC4F,sBAAuB,CACrB0B,eAAgB,SAChBC,WAAY,UACZ,UAEF,cAAC,GAAQ,CACP8B,KAAMyD,EAASzD,KACfpF,QAAS6I,EAAS7I,QAClBmF,KAAM0D,EAAS1D,KACf1D,QAASoH,EAASpH,UAEpB,cAACsB,EAAA,QAAK,CACJ1B,MAAOjB,GAAOE,KACd0C,OAAQnG,EAAQ,OAElB,eAAC2G,EAAA,QAAI,CAACnC,MAAOjB,GAAO8V,aAAa,UAC/B,cAACnU,EAAA,QAAI,CACHV,MAAO,CACLjB,GAAOsD,MACP,CACE7H,MAAY,MAALN,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeE,WACtBoG,WAAY,kBAEd,SACH,gBAID,cAAC,GAAS,CACR9B,MAAOuW,EACP3Q,aAAc4Q,EACdzQ,SAAS,UACTC,UAAW,kBACT2C,EAAS9I,MACP,4DACA,SAGJiG,YAAY,SACZ3E,MAAOjB,GAAO+V,QAGhB,cAAC,GAAS,CACRjW,MAAOvC,EACPmI,aAAc6Q,EACd1Q,SAAS,cACTC,UAAW,kBACT2C,EAAS9I,MACP,uDACA,SAGJoG,UAAWoQ,EAAiB,cAAgB,MAC5CnQ,WA7DmB,WAC3BoQ,GAAmBD,IA6DXlQ,OAAQkQ,EACRvQ,YAAY,QACZ3E,MAAOjB,GAAO+V,QAGhB,cAACjU,EAAA,QAAM,CACLb,MAAO,CACLjB,GAAOgW,cACP,CACE9U,gBAAsB,MAAL/F,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeE,WAChC6H,UAAW,GACX3B,aAAc,IAGlBkE,YAAY,WACZoM,WAAY,CAAEpQ,WAAY,eAC1BK,UAAgB,MAAL9G,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeK,QAC1BuG,KAAK,YACLF,QA1FmC,WAElB,gCAwFK,SACvB,aAID,cAACF,EAAA,QAAM,CACLb,MAAO,CACLjB,GAAOgW,cACP,CACE9U,gBAAsB,MAAL/F,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeK,UAGpCqW,WAAY,CAAEpQ,WAAY,eAC1BK,UAAgB,MAAL9G,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeE,WAC1B0G,KAAK,OACLF,QAnGY,WACpBhD,EAAWO,SAAS,WAkGW,SACxB,cAGD,cAACiX,GAAA,UAAS,CAACvV,MAAM,eAIrB,eAACU,EAAA,QAAI,CACHV,MAAK,SACAjB,GAAOiW,YAAU,IACpBxa,MAAY,MAALN,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeE,aACtB,UACH,UACY,MAAHib,QAAG,EAAHA,GAAKC,eC5Bf1W,GAASC,UAAWtD,OAAO,CAC/BgH,UAAW,CACTC,KAAM,EACN1C,gBAAiB,OACjBgC,WAAY,SACZD,eAAgB,UAElB6S,aAAc,CACZa,UAAW,KAEbrT,MAAO,CACLO,SAAU,GACVqL,WAAY,MACZrN,aAAc,GAEhBkU,MAAO,CACLlU,aAAc,EACdwB,UAAW,GAEb2S,cAAe,CACbtU,aAAc,EACdG,aAAc,EACdwB,UAAW,GAEbnD,KAAM,CACJmD,UAAW,GACXxB,aAAc,GACd1B,MAAO,GACPC,OAAQ,OAIGwW,GA/IF,SAAH,GAA6B,IAAD,YAAtBjX,EAAK,EAALA,MAAOkX,EAAQ,EAARA,SACbvZ,EAAUmD,qBAAWjC,GAArBlB,MACFnC,EAAQyF,qBAGd,GAFmB3B,0BAEyBL,oBAAS,IAAK,WAAnDuX,EAAc,KAAEC,EAAiB,KACxC,EAAgDxX,oBAAS,GAAK,WAAvDkY,EAAgB,KAAEC,EAAmB,KAEjB,aAE1B,OAF0B,OAA3B,kBACQzZ,EAAM,QAAS,gBACtB,sBAcD,OACE,mCACE,eAAC0F,EAAA,QAAU,CACT/B,MAAO,CAAEC,gBAAsB,MAAL/F,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeK,SACzC4F,sBAAuB,CACrB0B,eAAgB,SAChBC,WAAY,UACZ,UAEF,cAACP,EAAA,QAAK,CACJ1B,MAAOjB,GAAOE,KACd0C,OAAQnG,EAAQ,OAElB,eAAC2G,EAAA,QAAI,CAACnC,MAAOjB,GAAO8V,aAAa,UAC/B,eAACnU,EAAA,QAAI,CACHV,MAAO,CACLjB,GAAOsD,MACP,CACE7H,MAAY,MAALN,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeE,WACtBoG,WAAY,kBAEd,UACH,eACqE,OAAxD,GAAS,MAARiV,GAAmB,OAAX,EAARA,EAAUG,OAAO,SAAT,EAAR,EAAqBxH,gBAAwB,MAARqH,OAAQ,EAARA,EAAU5B,MAAM,KAAE,EAAE,MAGxE,cAAC,GAAS,CACRpP,SAAS,UACTC,UAAW,kBACTnG,EACE,4DACA,SAGJiG,YAAY,SACZ3E,MAAOjB,GAAO+V,QAGhB,cAAC,GAAS,CACRlQ,SAAS,cACTC,UAAW,kBACTnG,EAAM,uDAAqD,SAE7DoG,UAAWoQ,EAAiB,cAAgB,MAC5CnQ,WApDmB,WAC3BoQ,GAAmBD,IAoDXvQ,YAAY,QACZ3E,MAAOjB,GAAO+V,MACd9P,OAAQkQ,IAGV,cAAC,GAAS,CACRtQ,SAAS,cACTC,UAAW,kBACTnG,EAAM,uDAAqD,SAE7DoG,UAAW+Q,EAAmB,cAAgB,MAC9C9Q,WA5DqB,WAC7B+Q,GAAqBD,IA4DblR,YAAY,gBACZ3E,MAAOjB,GAAO+V,MACd9P,OAAQ6Q,IAGV,cAAChV,EAAA,QAAM,CACLb,MAAO,CACLjB,GAAOgW,cACP,CACE9U,gBAAsB,MAAL/F,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeE,WAChC6H,UAAW,GACX3B,aAAc,IAGlBkE,YAAY,WACZoM,WAAY,CAAEpQ,WAAY,eAC1BK,UAAgB,MAAL9G,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeK,QAC1BuG,KAAK,YACLF,QA7FqD,WAEpC,gCA2FK,SACvB,cAID,cAACwU,GAAA,UAAS,CAACvV,MAAM,kB,qkBC1G3B,IA8DMjB,GAASC,UAAWtD,OAAO,CAC/BgH,UAAW,CACTC,KAAM,EACNV,WAAY,SACZD,eAAgB,UAElBK,MAAO,CACLO,SAAU,GACVsL,WAAY,MACZF,cAAe,GACfC,WAAY,MACZrN,aAAc,EACd0B,UAAW,QAEb0T,QAAS,CACP9W,MAAO,KAETD,KAAM,CACJoF,SAAU,WACVC,IAAK,MACLpF,MAAO,GACPC,OAAQ,OAIG8W,GAvFD,WAAO,IAAD,MACZ/b,EAAQyF,qBAER5B,EAAaC,0BAMb2K,EAAY,WAAmB,IAAD,EAAjBuN,EAAO,uDAAG,GAC3B,OAAO,SACFnX,GAAOsD,OAAK,IACf7H,MAAY,MAALN,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeE,WACtBoG,WAAY,iBACZC,aAAc,IACXsV,IAIP,OACE,mCACE,eAACnU,EAAA,QAAU,CACT/B,MAAO,CAAEC,gBAAsB,MAAL/F,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeK,SACzC4F,sBAAuB,CACrBqC,KAAM,EACNX,eAAgB,SAChBC,WAAY,UACZ,UAEF,eAACE,EAAA,QAAI,CAACnC,MAAOjB,GAAOiX,QAAQ,UAC1B,cAACtV,EAAA,QAAI,CAACV,MAAO2I,IAAY,SAAC,4GAI1B,cAACjI,EAAA,QAAI,CAACV,MAAO2I,EAAU,CAAE/H,aAAc,IAAK,SAAC,2DAI7C,cAACC,EAAA,QAAM,CACLb,MAAO,CACLjB,GAAOgW,cACP,CACE9U,gBAAsB,MAAL/F,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeE,WAChC6H,UAAW,GACX3B,aAAc,IAGlBkE,YAAY,WACZoM,WAAY,CAAEpQ,WAAY,eAC1BK,UAAgB,MAAL9G,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeK,QAC1BuG,KAAK,YACLF,QA9CW,WACnBhD,EAAWO,SAAS,WA6CU,SACvB,6BAIH,cAACiX,GAAA,UAAS,CAACvV,MAAM,e,UC7CVhB,UAAWtD,OAAO,CAC/Bya,UAAW,CACTvT,SAAU,IAEZwT,MAAO,CACLrT,cAAe,cACff,eAAgB,WAChBC,WAAY,SACZoU,kBAAmB,M,qkBCnBvB,IA4GMtX,GAASC,UAAWtD,OAAO,CAC/BgH,UAAW,CACTC,KAAM,EACNV,WAAY,SACZD,eAAgB,iBAElBK,MAAO,CACL1B,WAAY,iBACZiC,SAAU,GACVsL,WAAY,MACZF,cAAe,GACfC,WAAY,MACZrN,aAAc,EACd0B,UAAW,QAEb0T,QAAS,CACP9W,MAAO,KAETD,KAAM,CACJmD,UAAW,GACXxB,aAAc,GACd1B,MAAO,GACPC,OAAQ,KAEViX,MAAO,CACLrT,cAAe,cACff,eAAgB,WAChBC,WAAY,YAIDqU,GA3IF,SAAH,GAAqC,IAAD,wCAA9BC,cAAM,MAAG,KAAI,EAAEC,EAAQ,EAARA,SACvBtc,EAAQyF,qBAEd,EAA0BhC,mBAAS4Y,GAAO,WAAnC1X,EAAK,KAAE4X,EAAQ,KAEtBxY,qBAAU,WACRuY,EAAS3X,KACR,CAACA,IAEJ,IAAM8J,EAAY,WAAmB,IAAlBuN,EAAO,uDAAG,GAC3B,OAAO,SAAKnX,GAAOsD,OAAU6T,IAGzBQ,EAAc,SAAC/J,GAKnB8J,EAJI5X,IAAU8N,EAILA,EAHE,OAMb,OACE,mCACE,eAAC5K,EAAA,QAAU,CACT/B,MAAO,CAAEC,gBAAsB,MAAL/F,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeK,SACzC4F,sBAAuB,CACrB0B,eAAgB,SAChBC,WAAY,UACZ,UAEF,cAACP,EAAA,QAAK,CACJ1B,MAAOjB,GAAOE,KACd0C,OAAQnG,EAAQ,OAElB,eAAC2G,EAAA,QAAI,CAACnC,MAAOjB,GAAOiX,QAAQ,UAC1B,cAACtV,EAAA,QAAI,CACHV,MAAO,CACLjB,GAAOsD,MACP,CACE7H,MAAY,MAALN,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeE,WACtBkH,YAAa,GACbb,aAAc,KAEhB,SACH,YAGD,eAAC+V,GAAA,QAAYC,MAAK,CAAC/X,MAAOA,EAAM,UAC9B,cAAC8X,GAAA,QAAYE,KAAI,CACf9F,WAAYpI,EAAU,CAAEnO,MAAY,MAALN,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeE,aAC9CyF,MACY,UAAVnB,EACI,CAAEoB,gBAAsB,MAAL/F,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeO,WAClC,GAENJ,MAAY,MAALN,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeE,WACtBuc,eAAqB,MAAL5c,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeE,WAC/B0I,MAAM,QACNpE,MAAM,QACNkC,QAAS,kBAAM2V,EAAY,YAE7B,cAACC,GAAA,QAAYE,KAAI,CACf9F,WAAYpI,EAAU,CAAEnO,MAAY,MAALN,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeE,aAC9CyF,MACY,cAAVnB,EACI,CAAEoB,gBAAsB,MAAL/F,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeO,WAClC,GAENJ,MAAY,MAALN,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeE,WACtBuc,eAAqB,MAAL5c,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeE,WAC/B0I,MAAM,YACNpE,MAAM,YACNkC,QAAS,kBAAM2V,EAAY,gBAE7B,cAACC,GAAA,QAAYE,KAAI,CACf9F,WAAYpI,EAAU,CAAEnO,MAAY,MAALN,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeE,aAC9CyF,MACY,gBAAVnB,EACI,CAAEoB,gBAAsB,MAAL/F,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeO,WAClC,GAENJ,MAAY,MAALN,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeE,WACtBuc,eAAqB,MAAL5c,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeE,WAC/B0I,MAAM,cACNpE,MAAM,cACNkC,QAAS,kBAAM2V,EAAY,kBAE7B,cAACC,GAAA,QAAYE,KAAI,CACf9F,WAAYpI,EAAU,CAAEnO,MAAY,MAALN,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeE,aAC9CyF,MACY,WAAVnB,EACI,CAAEoB,gBAAsB,MAAL/F,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeO,WAClC,GAENJ,MAAY,MAALN,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeE,WACtBuc,eAAqB,MAAL5c,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeE,WAC/B0I,MAAM,SACNpE,MAAM,SACNkC,QAAS,kBAAM2V,EAAY,mBAIjC,cAACnB,GAAA,UAAS,CAACvV,MAAM,e,qkBCnGzB,IAiEMjB,GAASC,UAAWtD,OAAO,CAC/BgH,UAAW,CACTC,KAAM,EACN1C,gBAAiB,OACjBgC,WAAY,SACZD,eAAgB,UAElBoP,kBAAmB,CACjBjS,OAAQ,GACRD,MAAO,UAII6X,GA9EA,WAAO,IAAD,EACnB,EAAgCpZ,mBAAS,MAAK,WAAvCiY,EAAQ,KAAEoB,EAAW,KAC5B,EAA0BrZ,mBAAS,GAAE,WAA9B8O,EAAK,KAAE6E,EAAQ,KACtB,EAAgC3T,mBAAS,CACvCmG,KAAM,OACNnF,QAAS,GACTyB,SAAS,EACT1B,MAAO,SAAC4I,EAAKxD,GACXyD,EAAY,SAAIC,GAAQ,IAAE7I,QAAS2I,EAAKxD,KAAMA,EAAM1D,SAAS,MAE/D2D,KAAM,WACJwD,EAAY,SAAIC,GAAQ,IAAEpH,SAAS,QAErC,WAVKoH,EAAQ,KAAED,EAAW,KAWtBL,EAAS,CACb,CACEyD,IAAK,QACLtI,MAAO,OACPkP,YAAa,WACb0F,cAAe,mBACfzF,SAAU,cAAC,GAAK,KAElB,CACE7G,IAAK,OACLtI,MAAO,mBACPkP,YAAa,yBACbC,SAAU,cAAC,GAAI,CAAC+E,OAAQX,EAAUY,SAAUQ,KAE9C,CACErM,IAAK,OACLtI,MAAO,gBACPkP,YAAa,cACbC,SAAU,cAAC,GAAI,CAAC9S,MAAe,MAAR8I,OAAQ,EAARA,EAAU9I,MAAOkX,SAAUA,MAatD,OACE,qCACE,cAAC,GAAQ,CAAC7R,KAAMyD,EAASzD,KAAMpF,QAAS6I,EAAS7I,QAASmF,KAAM0D,EAAS1D,KAAM1D,QAASoH,EAASpH,UACnF,OAD8F,EAC3G8G,EAAOuF,SAAM,EAAb,EAAe+E,SAChB,cAACrP,EAAA,QAAI,CAACnC,MAAOjB,GAAOqS,kBAAkB,SACpC,cAACM,GAAY,CACXjF,MAAOA,EACPe,cAhBc,SAACC,GAAY,IAAD,EACJ,UAAV,OAAd,EAAAvG,EAAOuG,SAAO,EAAd,EAAgB9C,MAAmBiL,EAKvCtE,EAAS7D,GAJPjG,EAAS9I,MAAM,uFAA8E,UAezFwI,OAAQA,EACRqG,YAAaG,WAAiBiE,SAAS,CACrCuF,MAAO,aACPpT,KAAM,aACNqT,KAAM,uBC5BZpY,GAASC,UAAWtD,OAAO,CAC/BgH,UAAW,CACTC,KAAM,EACNV,WAAY,SACZD,eAAgB,UAElBoV,oBAAqB,CACnB/S,SAAU,WACV4C,OAAQ,QAIGoQ,GA9CA,WAAO,IAAD,EACbnd,EAAQyF,qBACR5B,EAAaC,0BAMnB,OACE,cAACmE,EAAA,QAAI,CACHnC,MAAO,CAACjB,GAAO2D,UAAW,CAAEzC,gBAAsB,MAAL/F,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeE,aAAc,SAE1E,cAACsG,EAAA,QAAM,CACLI,KAAK,YACLF,QAVO,WACXhD,EAAWO,SAAS,WAUhB4H,aAAc,CAAE9G,OAAQ,IACxB2R,WAAY,CACVpQ,WAAY,cACZc,YAAa,GACbD,aAAc,IAEhBxB,MAAO,CACLjB,GAAOqY,oBACP,CACE3W,aAAc,KAEhB,SACH,wBCxBD6W,GAAYhD,qBA4BHiD,GAdI,WAAH,OACd,eAACD,GAAU9C,UAAS,CAClBC,cAAe,CACbC,aAAa,EACbrS,MAAO,iBACPmV,UAAW,oBACX,UAEF,cAACF,GAAU3C,OAAM,CAACvG,KAAK,SAASwG,UAAWyC,KAC3C,cAACC,GAAU3C,OAAM,CAACvG,KAAK,SAASwG,UAAWK,KAC3C,cAACqC,GAAU3C,OAAM,CAACvG,KAAK,SAASwG,UAAWmC,SCAhCU,GAtBA,WACb,IAGa,EAHb,EAA4BjY,qBAAWjC,GAA/BuB,EAAM,EAANA,OAAQjB,EAAO,EAAPA,QACV3D,EAAQyF,qBAEd,OAAI9B,EAEA,cAACsE,EAAA,QAAI,CAACnC,MAAO,CAAE2C,KAAM,EAAGX,eAAgB,SAAUC,WAAY,UAAW,SACvE,cAACsG,GAAA,QAAiB,CAChBC,WAAW,EACXhO,MAAY,MAALN,GAAa,OAAR,EAALA,EAAOG,aAAF,EAAL,EAAeK,QACtB6I,KAAM,YAOZ,mCACGzE,EAAS,cAAC,GAAS,IAAM,cAAC,GAAU,O,oBClBnC5E,GAAiBJ,EAAjBI,MAAOqB,GAAUzB,EAAVyB,MAETmc,GAAela,wBAAc,IAEtBma,GAAgB,SAAH,GAAsB,IAG5B,IAHYja,EAAQ,EAARA,SAC9B,EAAsBka,oBAASrc,IAE/B,OAFqC,SAAnB,GAmBhB,cAACmc,GAAa9Y,SAAQ,CAACC,MAAO,GAAG,SAC/B,cAAC,WAAa,CAAC3E,MAAOA,GAAM,SAAEwD,MAhB9B,cAACyE,EAAA,QAAI,CACHnC,MAAO,CACL2C,KAAM,EACNX,eAAgB,SAChBC,WAAY,SACZ9C,OAAQ,OACRc,gBAAsB,MAAL/F,IAAa,OAAR,EAALA,GAAOG,aAAF,EAAL,EAAeK,SAChC,SAEF,cAAC6N,GAAA,QAAiB,CAAC/N,MAAY,MAALN,IAAa,OAAR,EAALA,GAAOG,aAAF,EAAL,EAAeE,WAAYgJ,KAAK,aCR5DsU,GAAU,CACdC,SAAU,GACVhe,OAhBY,CACZie,QAAS,CACPC,OAAQ,GACRC,KAAM,OACNC,QAAS,UACTC,aAAc,gBACdC,aAAc,gBACdC,eAAgB,kBAChBC,OAAQ,cACRC,OAAQ,cACRC,SAAU,UASC,SAASC,KACtB,OACE,cAAC,GAAa,UACZ,cAACC,EAAA,QAAmB,CAACb,QAASA,GAAQ,SACpC,cAAC,EAAY,UACX,cAAC,GAAM,Y,0DC7BjBje,EAAOC,QAAU,IAA0B,2B,oBCA3CD,EAAOC,QAAU,IAA0B,4B,oBCA3CD,EAAOC,QAAU,IAA0B,8B,oBCA3CD,EAAOC,QAAU,IAA0B,2B,oBCA3CD,EAAOC,QAAU,IAA0B,6B,oBCA3CD,EAAOC,QAAU,IAA0B,uC","file":"static/js/app.ad45f7e7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_variant.2ba85d3d.png\";","import { MD3LightTheme as DefaultTheme } from \"react-native-paper\";\r\n\r\nimport { API_HOST } from \"@env\";\r\n\r\nconst config = {\r\n  api: {\r\n    url: `http://${API_HOST}:8080`,\r\n    timeout: 8000,\r\n  },\r\n  theme: {\r\n    ...DefaultTheme,\r\n    myOwnProperty: true,\r\n    colors: {\r\n      ...DefaultTheme.colors,\r\n      navbar: {\r\n        background: \"#764abc\",\r\n        color: \"#e7e0ec\",\r\n      },\r\n      bottomNav: {\r\n        background: \"#D6BCFF\",\r\n        color: \"black\",\r\n      },\r\n      primary: \"#764abc\",\r\n      onSurface: \"#764abc\",\r\n      secondary: \"#583493\",\r\n      tertiary: \"red\",\r\n      background: \"#e7e0ec\",\r\n      light: \"#f7f0fc\",\r\n      gray: \"#cac4d0\",\r\n      dark: \"#130d1c\",\r\n      warning: \"#F2C14E\",\r\n      success: \"#128612\",\r\n      danger: \"#D92955\",\r\n      lightSuccess: \"#53FF53\",\r\n      info: \"#2A80D7\",\r\n    },\r\n    roundness: 1,\r\n  },\r\n  fonts: {\r\n    \"Roboto-Thin\": require(\"../../assets/fonts/Roboto/Roboto-Thin.ttf\"),\r\n    \"Roboto-Light\": require(\"../../assets/fonts/Roboto/Roboto-Light.ttf\"),\r\n    \"Roboto-Regular\": require(\"../../assets/fonts/Roboto/Roboto-Regular.ttf\"),\r\n    \"Roboto-Bold\": require(\"../../assets/fonts/Roboto/Roboto-Bold.ttf\"),\r\n    \"Roboto-Medium\": require(\"../../assets/fonts/Roboto/Roboto-Medium.ttf\"),\r\n  },\r\n};\r\n\r\nexport default config;\r\n","import axios from \"axios\";\r\nimport config from \"../config/config\";\r\n\r\nconst { url, timeout } = config.api;\r\n\r\nconst api = axios.create({\r\n  baseURL: url,\r\n  timeout,\r\n  validateStatus: (status) => 200 <= status < 300\r\n});\r\n\r\napi.interceptors.request.use(\r\n  async (config) => {\r\n    return config;\r\n  },\r\n  async (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api;\r\n","import AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport api from \"./api\";\r\n\r\nexport async function authenticate({ login, password }) {\r\n  let { data, status } = await api.post(\"/user/login\", {\r\n    email: login,\r\n    senha: password,\r\n  });\r\n\r\n  if (status === 200) {\r\n    const { token, user } = data;\r\n\r\n    await AsyncStorage.setItem(\"@CurvasAuth:token\", token);\r\n    await AsyncStorage.setItem(\"@CurvasAuth:user\", JSON.stringify(user));\r\n\r\n    api.defaults.headers[\"Authorization\"] = `Bearer ${token}`;\r\n  };\r\n\r\n  return { failed: (status ?? 400) > 300, ...data };\r\n}\r\n\r\nexport async function isAuthenticated() {\r\n  const user = await AsyncStorage.getItem(\"@CurvasAuth:user\");\r\n  const token = await AsyncStorage.getItem(\"@CurvasAuth:token\");\r\n\r\n  if (user && token) {\r\n    api.defaults.headers[\"Authorization\"] = `Bearer ${token}`;\r\n\r\n    return {\r\n      token,\r\n      user,\r\n    };\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nexport async function logout() {\r\n  await AsyncStorage.removeItem(\"@CurvasAuth:token\");\r\n  await AsyncStorage.removeItem(\"@CurvasAuth:user\");\r\n}\r\n","import React, { createContext, useState, useEffect } from \"react\";\r\nimport api from \"../services/api\";\r\nimport {\r\n  isAuthenticated,\r\n  logout as unauthenticate,\r\n  authenticate,\r\n} from \"../services/auth\";\r\n\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { NO_AUTH } from \"@env\";\r\n\r\nconst AuthContext = createContext({});\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const navigation = useNavigation();\r\n\r\n  useEffect(() => {\r\n    async function loadStoragedData() {\r\n      api.interceptors.response.use(\r\n        (response) => {\r\n          return response;\r\n        },\r\n        (error) => {\r\n          if (error?.response?.status === 401) {\r\n            console.log(\"deslogado\");\r\n            logout();\r\n            setUser(null);\r\n            navigation.navigate(\"signin\");\r\n          }\r\n          return error;\r\n        }\r\n      );\r\n\r\n      let { user } = await isAuthenticated();\r\n\r\n      user && setUser(JSON.parse(user));\r\n\r\n      setLoading(false);\r\n    }\r\n\r\n    loadStoragedData();\r\n  }, []);\r\n\r\n  const logout = () => {\r\n    unauthenticate();\r\n    setUser(null);\r\n  };\r\n\r\n  const login = async (login, password, alert = () => { }) => {\r\n    let { user, failed, message } = await authenticate({\r\n      login,\r\n      password,\r\n    });\r\n    if (failed || !user) {\r\n      console.log(message);\r\n      alert((typeof message === 'string') ? message : \"Ocorreu um erro durante a autenticação\", \"error\");\r\n      return;\r\n    }\r\n    setUser(user);\r\n    alert(\"Você conseguiu se conectar a \" + user, \"success\");\r\n    return;\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{ login, logout, user, signed: !!user || NO_AUTH === \"1\", loading }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n","import {\r\n  Appbar,\r\n  Button,\r\n  useTheme,\r\n  TouchableRipple,\r\n  Portal,\r\n  Modal,\r\n  Text,\r\n} from \"react-native-paper\";\r\nimport { useContext, useState } from \"react\";\r\nimport AuthContext from \"../contexts/auth\";\r\nimport { Image, StyleSheet, Platform } from \"react-native\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\n\r\nconst styles = StyleSheet.create({\r\n  logo: {\r\n    width: 20,\r\n    height: 40,\r\n    margin: 6,\r\n  },\r\n});\r\n\r\nconst Navbar = ({ onReturn = null, showExitButton = false }) => {\r\n  const { signed, logout } = useContext(AuthContext);\r\n  const [openLogoutModal, setOpenLogoutModal] = useState(false);\r\n  const theme = useTheme();\r\n  const navigation = useNavigation();\r\n\r\n  const toggleLogoutModal = () => {\r\n    setOpenLogoutModal(!openLogoutModal);\r\n  };\r\n\r\n  const handleSignOut = async () => {\r\n    await logout();\r\n    navigation.navigate(\"signin\");\r\n  };\r\n\r\n  return (\r\n    <Appbar.Header\r\n      theme={theme}\r\n      style={{\r\n        backgroundColor: theme?.colors?.navbar?.background,\r\n        // borderBottomColor: theme?.colors?.navbar?.color,\r\n        // borderBottomWidth: 1,\r\n      }}\r\n    >\r\n      <Portal>\r\n        <Modal\r\n          visible={openLogoutModal}\r\n          onDismiss={toggleLogoutModal}\r\n          contentContainerStyle={{\r\n            backgroundColor: theme?.colors?.background,\r\n            padding: 20,\r\n            width: 250,\r\n            alignSelf: \"center\",\r\n            borderRadius: 5,\r\n          }}\r\n        >\r\n          <Text style={{ fontFamily: \"Roboto-Bold\", marginBottom: 10 }}>\r\n            Você deseja desconectar da sua conta?\r\n          </Text>\r\n          <Button\r\n            icon=\"exit-run\"\r\n            onPress={handleSignOut}\r\n            textColor={theme?.colors?.background}\r\n            style={{\r\n              backgroundColor: theme?.colors?.primary,\r\n              borderRadius: 5,\r\n              marginBottom: 10,\r\n            }}\r\n          >\r\n            <Text\r\n              style={{\r\n                color: theme?.colors?.background,\r\n                fontFamily: \"Roboto-Bold\",\r\n              }}\r\n            >\r\n              Sair\r\n            </Text>\r\n          </Button>\r\n          <Button\r\n            mode=\"text\"\r\n            onPress={toggleLogoutModal}\r\n            style={{\r\n              borderRadius: 5,\r\n            }}\r\n          >\r\n            <Text\r\n              style={{\r\n                color: theme?.colors?.primary,\r\n                fontFamily: \"Roboto-Bold\",\r\n              }}\r\n            >\r\n              Cancelar\r\n            </Text>\r\n          </Button>\r\n        </Modal>\r\n      </Portal>\r\n\r\n      {onReturn ? (\r\n        <Appbar.BackAction\r\n          onPress={onReturn}\r\n          color={theme?.colors?.navbar?.color}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n\r\n      <TouchableRipple\r\n        rippleColor={\r\n          Platform.OS === \"web\"\r\n            ? undefined\r\n            : theme?.colors?.bottomNav?.background\r\n        }\r\n        onPress={() => navigation.navigate(\"home\")}\r\n        style={{ paddingRight: 5, paddingLeft: 5 }}\r\n      >\r\n        <Image\r\n          style={styles.logo}\r\n          source={require(\"../../assets/logo_variant.png\")}\r\n        />\r\n      </TouchableRipple>\r\n\r\n      <Appbar.Content />\r\n\r\n      {signed ? (\r\n        <>\r\n          <Appbar.Action\r\n            color={theme?.colors?.navbar?.color}\r\n            icon=\"sticker-text\"\r\n            onPress={() => navigation.navigate(\"questionlist\")}\r\n          />\r\n          <Appbar.Action\r\n            color={theme?.colors?.navbar?.color}\r\n            icon=\"trophy\"\r\n            onPress={() => navigation.navigate(\"quizview\")}\r\n          />\r\n          <Appbar.Action\r\n            color={theme?.colors?.navbar?.color}\r\n            icon=\"account-circle\"\r\n            onPress={() => navigation.navigate(\"profile\")}\r\n          />\r\n        </>\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {\r\n        showExitButton ?\r\n          <Appbar.Action\r\n            color={theme?.colors?.navbar?.color}\r\n            icon=\"exit-run\"\r\n            onPress={toggleLogoutModal}\r\n          />\r\n          :\r\n          <></>\r\n      }\r\n    </Appbar.Header>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { Image, ScrollView, StyleSheet, View } from \"react-native\";\r\nimport { Button, Text, useTheme } from \"react-native-paper\";\r\nimport Navbar from \"../../components/Navbar\";\r\n\r\nconst OnWeb = () => {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <ScrollView\r\n        style={{ backgroundColor: theme?.colors?.background }}\r\n        contentContainerStyle={{\r\n          width: '100%',\r\n          height: '100%',\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          zIndex: 100\r\n        }}\r\n      >\r\n        <View style={{ height: '100%' }}>\r\n\r\n          <View style={{ alignSelf: \"center\", width: '80%', marginTop: 45 }}>\r\n            <Text style={{ ...styles.title, color: theme?.colors?.secondary, textAlign: 'left' }}>\r\n              Ganhe mais controle sobre suas <Text style={{ color: theme?.colors?.primary }}>curvas de aprendizado</Text> com a nossa solução\r\n            </Text>\r\n            <Text style={{ ...styles.subtitle, color: theme?.colors?.secondary }}>\r\n              Descubra sobre o que é o <Text style={{ color: theme?.colors?.primary }}>Curvas</Text> e comece a se desenvolver agora\r\n            </Text>\r\n\r\n            <Button\r\n              style={{ marginTop: 15, width: 150, maxWidth: '80%', borderRadius: 45 }}\r\n              mode=\"contained\"\r\n              icon=\"book-open-page-variant-outline\"\r\n              onPress={() => { }}\r\n              buttonColor={theme.colors.primary}\r\n              textColor={theme?.colors?.background}\r\n            >\r\n              Descubra\r\n            </Button>\r\n          </View>\r\n\r\n        </View>\r\n\r\n      </ScrollView>\r\n\r\n      <View style={{ width: '100%', backgroundColor: theme?.colors?.background }}>\r\n        <Image\r\n          source={require('../../../assets/placeholders/home-art.png')}\r\n          style={{\r\n            alignSelf: \"center\",\r\n            maxWidth: \"100%\",\r\n            width: 1018 / 2,\r\n            height: 499 / 2,\r\n          }}\r\n        />\r\n      </View>\r\n    </>\r\n  )\r\n};\r\n\r\n\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n      <OnWeb />\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    width: '100%',\r\n    height: '100%',\r\n    alignItems: 'center',\r\n  },\r\n  title: {\r\n    fontFamily: \"Roboto-Bold\",\r\n    alignSelf: \"flex-start\",\r\n    marginBottom: 15,\r\n    fontSize: 20,\r\n  },\r\n  subtitle: {\r\n    fontFamily: \"Roboto-Medium\",\r\n    alignSelf: \"flex-start\",\r\n    marginBottom: 15,\r\n    fontSize: 16,\r\n  },\r\n});\r\n\r\nexport default Home;\r\n","import { Link, useNavigation } from \"@react-navigation/native\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport { IconButton, Text, useTheme } from \"react-native-paper\";\r\n\r\nconst Breadcrumb = ({ style = {}, children }) => {\r\n  return (\r\n    <View style={{ flexDirection: \"row\", alignItems: \"center\", ...style }}>\r\n      {children}\r\n    </View>\r\n  );\r\n};\r\n\r\nBreadcrumb.Page = ({ label, link }) => {\r\n  const navigation = useNavigation();\r\n\r\n  const navigateTo = () => {\r\n    if (!link) return;\r\n    navigation.navigate(link);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Text onPress={navigateTo} style={linkStyles[!!link]}>\r\n        {label}\r\n      </Text>\r\n      <Text style={{ fontFamily: \"Roboto-Regular\" }}> › </Text>\r\n    </>\r\n  );\r\n};\r\n\r\nBreadcrumb.Icon = ({ icon, link }) => {\r\n  const theme = useTheme();\r\n\r\n  const navigation = useNavigation();\r\n\r\n  const navigateTo = () => {\r\n    if (!link) return;\r\n    navigation.navigate(link);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <IconButton\r\n        icon={icon}\r\n        iconColor={theme?.colors?.primary}\r\n        style={{ width: 24, height: 24, margin: 0 }}\r\n        size={24}\r\n        onPress={navigateTo}\r\n      />\r\n      <Text style={{ fontFamily: \"Roboto-Regular\" }}> › </Text>\r\n    </>\r\n  );\r\n};\r\n\r\nconst linkStyles = StyleSheet.create({\r\n  true: {\r\n    fontFamily: \"Roboto-Bold\",\r\n    textDecorationLine: \"underline\"\r\n  },\r\n  false: {\r\n    fontFamily: \"Roboto-Regular\",\r\n  },\r\n});\r\n\r\nexport default Breadcrumb;\r\n","import { NativeModules, Platform } from \"react-native\";\r\nimport { Snackbar as Snack, Text, useTheme } from \"react-native-paper\";\r\n\r\nconst { StatusBarManager } = NativeModules;\r\n\r\nconst Snackbar = ({ visible, message, type, hide }) => {\r\n  const theme = useTheme();\r\n\r\n  const STATUSBAR_HEIGHT = [\"ios\", \"android\"].includes(Platform.OS)\r\n    ? StatusBarManager.HEIGHT\r\n    : null;\r\n\r\n  const typeStyling = () => {\r\n    switch (type) {\r\n      case \"error\":\r\n        return {\r\n          backgroundColor: theme?.colors?.danger,\r\n        };\r\n      case \"success\":\r\n        return {\r\n          backgroundColor: theme?.colors?.success,\r\n        };\r\n      case \"warning\":\r\n        return {\r\n          backgroundColor: theme?.colors?.warning,\r\n        };\r\n      default:\r\n        return {};\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Snack\r\n      visible={visible}\r\n      onDismiss={hide}\r\n      style={{\r\n        ...typeStyling(),\r\n      }}\r\n      wrapperStyle={{\r\n        position: \"absolute\",\r\n        top: STATUSBAR_HEIGHT ?? 0,\r\n        zIndex: 9999,\r\n      }}\r\n      icon={\"close\"}\r\n      onIconPress={hide}\r\n    >\r\n      <Text\r\n        style={{\r\n          fontFamily: \"Roboto-Bold\",\r\n          color: theme?.colors?.background,\r\n          // fontSize: 11\r\n        }}\r\n      >\r\n        {message}\r\n      </Text>\r\n    </Snack>\r\n  );\r\n};\r\n\r\nexport default Snackbar;\r\n","import { TextInput as Input, useTheme } from \"react-native-paper\";\r\n\r\nconst TextInput = ({\r\n  value,\r\n  onChangeText = () => { },\r\n  autoCorrect = false,\r\n  placeholder,\r\n  leftIcon,\r\n  leftPress = () => { },\r\n  rightIcon,\r\n  rightPress = () => { },\r\n  secure = false,\r\n  label,\r\n  multiline = false,\r\n  rightColor,\r\n  leftColor,\r\n  content = {},\r\n  ...rest\r\n}) => {\r\n  const theme = useTheme();\r\n\r\n  let left = leftIcon ? (\r\n    <Input.Icon\r\n      icon={leftIcon}\r\n      iconColor={leftColor ? leftColor : theme?.colors?.primary}\r\n      onPress={leftPress}\r\n    />\r\n  ) : null;\r\n\r\n  let right = rightIcon ? (\r\n    <Input.Icon\r\n      icon={rightIcon}\r\n      iconColor={rightColor ? rightColor : theme?.colors?.primary}\r\n      onPress={rightPress}\r\n    />\r\n  ) : null;\r\n\r\n  const countLines = Math.ceil(\r\n    1 + Math.round(value?.length / 132) + ((value?.match(/\\n/g) || []).length)\r\n  )\r\n\r\n  return (\r\n    <Input\r\n      value={value}\r\n      onChangeText={onChangeText}\r\n      left={left}\r\n      multiline={multiline}\r\n      right={right}\r\n      label={label}\r\n      placeholder={placeholder}\r\n      placeholderTextColor={theme?.colors?.primary}\r\n      textColor={theme?.colors?.primary}\r\n      underlineColor={theme?.colors?.primary}\r\n      outlineColor={theme?.colors?.primary}\r\n      numberOfLines={multiline ? countLines : 1}\r\n      contentStyle={{\r\n        fontFamily: \"Roboto-Regular\",\r\n        marginTop: 0,\r\n        color: theme?.colors?.primary,\r\n        ...content\r\n      }}\r\n      secureTextEntry={secure}\r\n      autoCorrect={autoCorrect}\r\n      {...rest}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TextInput;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst useDebounce = (value, delay = 500) => {\r\n    const [search, setSearch] = useState(value);\r\n\r\n    useEffect(() => {\r\n        let timer = setTimeout(() => {\r\n            setSearch(value);\r\n        }, delay);\r\n\r\n        return () => clearTimeout(timer);\r\n    }, [value, delay]);\r\n\r\n    return search;\r\n};\r\n\r\nexport default useDebounce;","import { useNavigation } from \"@react-navigation/native\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Platform, ScrollView, StyleSheet, Text, View } from \"react-native\";\r\nimport { DataTable, useTheme, FAB, IconButton, ActivityIndicator, Button } from \"react-native-paper\";\r\nimport { useIsFocused } from \"@react-navigation/native\";\r\nimport Breadcrumb from \"../../components/Breadcrumb\";\r\nimport Navbar from \"../../components/Navbar\";\r\nimport Snackbar from \"../../components/Snackbar\";\r\nimport TextInput from \"../../components/TextInput\";\r\nimport api from \"../../services/api\";\r\nimport useDebounce from \"../../services/hooks/useDebounce\";\r\n\r\nconst optionsPerPage = [10, 20, 30];\r\n\r\nconst QuestionList = () => {\r\n  const theme = useTheme();\r\n  const navigation = useNavigation();\r\n  const isFocused = useIsFocused()\r\n\r\n  const [snackbar, setSnackbar] = useState({\r\n    type: \"info\",\r\n    message: \"\",\r\n    visible: false,\r\n    alert: (msg, type) => {\r\n      setSnackbar({ ...snackbar, message: msg, type: type, visible: true });\r\n    },\r\n    hide: () => {\r\n      setSnackbar({ ...snackbar, visible: false });\r\n    },\r\n  });\r\n\r\n  const alert = snackbar.alert;\r\n\r\n  const [total, setTotal] = useState(0);\r\n  const [questions, setQuestions] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [search, setSearch] = useState(\"\");\r\n  const debouncedSearch = useDebounce(search, 600);\r\n  const [itemsPerPage, setItemsPerPage] = useState(optionsPerPage[0]);\r\n\r\n  const from = page * itemsPerPage;\r\n  const to = Math.min((page + 1) * itemsPerPage, questions?.length);\r\n\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      try {\r\n        setLoading(true);\r\n        const { data } = await api.get('/question/list', {\r\n          params: {\r\n            search: debouncedSearch\r\n          }\r\n        });\r\n        setQuestions(data?.questions ?? [])\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.log(error)\r\n        alert(error?.response?.message ?? \"Ocorreu um erro ao tentar listar as questões\", \"error\");\r\n      }\r\n    }\r\n\r\n    getData()\r\n  }, [isFocused, debouncedSearch])\r\n\r\n  useEffect(() => {\r\n    setPage(0);\r\n  }, [itemsPerPage]);\r\n\r\n  const openQuestionCreate = () => {\r\n    navigation.navigate(\"questioncreate\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <Snackbar\r\n        hide={snackbar.hide}\r\n        message={snackbar.message}\r\n        type={snackbar.type}\r\n        visible={snackbar.visible}\r\n      />\r\n      {loading ?\r\n        (<ScrollView style={{ backgroundColor: theme?.colors?.background }} contentContainerStyle={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n          <ActivityIndicator animating={true} color={theme?.colors?.primary} size={'large'} />\r\n        </ScrollView>) :\r\n        (<ScrollView\r\n          style={{ backgroundColor: theme?.colors?.background }}\r\n          contentContainerStyle={{\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <View style={{ width: \"95%\" }}>\r\n            <View style={styles.routes}>\r\n              <Breadcrumb style={{ marginTop: 10, marginBottom: 15 }}>\r\n                <Breadcrumb.Icon icon=\"home\" link=\"home\" />\r\n                <Breadcrumb.Page label=\"Banco de Questões\" link=\"questionlist\" />\r\n              </Breadcrumb>\r\n            </View>\r\n            <Text style={{ ...styles.title, color: theme?.colors?.primary }}>\r\n              Banco de Questões\r\n            </Text>\r\n            <TextInput\r\n              value={search}\r\n              onChangeText={setSearch}\r\n              multiline={true}\r\n              leftIcon={\"note-search\"}\r\n              label=\"Buscar no Banco\"\r\n              style={styles.searchInput}\r\n            />\r\n          </View>\r\n          <DataTable\r\n            style={{\r\n              ...styles.table,\r\n              backgroundColor: theme?.colors?.light,\r\n            }}\r\n          >\r\n            <DataTable.Header>\r\n              <DataTable.Title\r\n                textStyle={styles.textTitle}\r\n                sortDirection=\"descending\"\r\n              >\r\n                Enunciado\r\n              </DataTable.Title>\r\n              <DataTable.Title textStyle={styles.textTitle}>\r\n                Categorias\r\n              </DataTable.Title>\r\n            </DataTable.Header>\r\n\r\n            {questions?.map((question) => (\r\n              <DataTable.Row\r\n                key={question.id}\r\n                onPress={() => navigation.navigate(\"questionview\", { id: question.id })}\r\n              >\r\n                <DataTable.Cell textStyle={styles.text}>\r\n                  {question.enunciado}\r\n                </DataTable.Cell>\r\n                <DataTable.Cell textStyle={styles.text}>\r\n                  Química, História\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n            ))}\r\n\r\n            <DataTable.Pagination\r\n              page={page}\r\n              numberOfPages={Math.ceil(questions.length / itemsPerPage)}\r\n              onPageChange={(page) => setPage(page)}\r\n              label={`${from}-${to} de ${total}`}\r\n              numberOfItemsPerPageList={optionsPerPage}\r\n              numberOfItemsPerPage={itemsPerPage}\r\n              onItemsPerPageChange={setItemsPerPage}\r\n              showFastPaginationControls\r\n              selectPageDropdownLabel={\"Questões por página\"}\r\n            />\r\n          </DataTable>\r\n\r\n          <View style={{ width: \"95%\", marginBottom: 40 }}>\r\n            <Button\r\n              icon=\"pencil-plus\"\r\n              onPress={openQuestionCreate}\r\n              mode=\"outlined\"\r\n              textColor={theme?.colors?.primary}\r\n              style={{\r\n                alignSelf: 'flex-end',\r\n                borderColor: theme?.colors?.primary,\r\n                borderRadius: 5,\r\n                marginTop: 5,\r\n                marginBottom: 10,\r\n                width: 225\r\n              }}\r\n            >\r\n              Criar Nova Questão\r\n            </Button>\r\n          </View>\r\n        </ScrollView>)}\r\n      <FAB\r\n        icon=\"filter\"\r\n        color={theme?.colors?.background}\r\n        style={{ ...styles.fab, backgroundColor: theme?.colors?.primary }}\r\n        onPress={() => console.log(\"\")}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  table: {\r\n    marginTop: 15,\r\n    marginBottom: 5,\r\n    width: \"95%\",\r\n  },\r\n  title: {\r\n    fontFamily: \"Roboto-Medium\",\r\n    alignSelf: \"flex-start\",\r\n    marginBottom: 15,\r\n    fontSize: 20,\r\n  },\r\n  tableTitle: {\r\n    fontFamily: \"Roboto-Medium\",\r\n  },\r\n  text: {\r\n    fontFamily: \"Roboto-Medium\",\r\n  },\r\n  searchInput: {\r\n    width: \"100%\",\r\n    marginBottom: 15,\r\n  },\r\n  fab: {\r\n    position: \"absolute\",\r\n    margin: 16,\r\n    right: 0,\r\n    bottom: 0,\r\n    borderRadius: 50\r\n  },\r\n  routes: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: \"space-between\"\r\n  }\r\n});\r\n\r\nexport default QuestionList;\r\n","import { ScrollView, StyleSheet, Text, View } from \"react-native\";\r\nimport { useTheme, IconButton, Divider, TouchableRipple } from \"react-native-paper\";\r\n\r\nexport const Panel = ({\r\n    width = 550,\r\n    header = {\r\n        title: \"\",\r\n        icon: \"\",\r\n        iconPress: () => { }\r\n    },\r\n    tabs = {\r\n        pages: [],\r\n        pageIndex: 0\r\n    },\r\n    children\r\n}) => {\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <View style={{\r\n            width: width,\r\n            maxWidth: \"100%\",\r\n            backgroundColor: theme?.colors?.light,\r\n            borderColor: theme?.colors?.gray,\r\n            borderWidth: 1,\r\n            elevation: 5\r\n        }}>\r\n            <Panel.Header title={header?.title} icon={header?.icon} iconPress={header?.iconPress} />\r\n            <Panel.Tabs pages={tabs?.pages} pageIndex={tabs?.pageIndex} />\r\n            <Panel.Body>\r\n                {children}\r\n            </Panel.Body>\r\n        </View>\r\n    )\r\n};\r\n\r\nPanel.Header = ({ title, icon, iconPress = () => { } }) => {\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <>\r\n            <View style={{ width: '100%', height: 55 }}>\r\n                {\r\n                    !icon ?\r\n                        <IconButton\r\n                            onPress={iconPress}\r\n                            icon={icon}\r\n                            iconColor={theme?.colors?.gray}\r\n                            style={{ position: 'absolute', right: 0, top: 5 }}\r\n                        />\r\n                        :\r\n                        <></>\r\n                }\r\n                <Text style={{ ...styles.title, color: theme?.colors?.primary, margin: 20 }}>\r\n                    {title}\r\n                </Text>\r\n            </View>\r\n            <Divider style={{ backgroundColor: theme?.colors?.gray }} />\r\n        </>\r\n    )\r\n};\r\n\r\nPanel.Tabs = ({ pages, pageIndex }) => {\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <>\r\n            <View style={{ width: '100%', alignItems: 'center', justifyContent: \"space-around\", flexDirection: 'row', marginBottom: 0, marginTop: 0 }}>\r\n                {Object.keys(pages)?.map((page, key) => (\r\n                    <TouchableRipple key={key} onPress={pages[page]?.onPress} style={{\r\n                        ...(page == pageIndex ? { borderBottomColor: theme?.colors?.primary, borderBottomWidth: 3 } : {}),\r\n                        flexDirection: 'column',\r\n                        alignItems: \"center\",\r\n                        minWidth: 67\r\n                    }}>\r\n                        <>\r\n                            <IconButton icon={pages[page]?.icon} iconColor={theme?.colors?.primary} />\r\n                            <Text style={{ ...styles.previewText, color: theme?.colors?.primary, marginBottom: 15 }}>\r\n                                {pages[page]?.label}\r\n                            </Text>\r\n                        </>\r\n                    </TouchableRipple>\r\n                ))}\r\n            </View>\r\n            <Divider style={{ backgroundColor: theme?.colors?.gray }} />\r\n        </>\r\n    )\r\n};\r\n\r\nPanel.Body = ({ children }) => (\r\n    <>\r\n        <ScrollView style={{\r\n            padding: 20\r\n        }}>\r\n            {children}\r\n        </ScrollView>\r\n    </>\r\n);\r\n\r\nconst styles = StyleSheet.create({\r\n    title: {\r\n        fontFamily: \"Roboto-Medium\",\r\n        alignSelf: \"flex-start\",\r\n        marginBottom: 15,\r\n        fontSize: 16,\r\n        textAlign: 'center'\r\n    },\r\n    text: {\r\n        fontFamily: \"Roboto-Medium\",\r\n    },\r\n    title: {\r\n        fontFamily: \"Roboto-Medium\",\r\n        marginBottom: 15,\r\n        fontSize: 16,\r\n    },\r\n    subtitle: {\r\n        fontFamily: \"Roboto-Medium\",\r\n        textAlign: 'left',\r\n        fontSize: 16,\r\n        marginTop: 10,\r\n        marginBottom: 10\r\n    },\r\n    question: {\r\n        width: \"100%\",\r\n        justifyContent: \"flex-end\",\r\n        alignItems: 'center',\r\n        borderRadius: 10,\r\n    },\r\n    scrollView: {\r\n        height: '45%',\r\n        width: '100%',\r\n        alignSelf: 'center',\r\n        marginTop: 10\r\n    },\r\n    contentContainer: {\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    searchInput: {\r\n        marginBottom: 15,\r\n    },\r\n    previewText: {\r\n        fontFamily: \"Roboto-Regular\"\r\n    },\r\n    fab: {\r\n        position: 'absolute',\r\n        margin: 16,\r\n        right: 0,\r\n        bottom: 0,\r\n        borderRadius: 45\r\n    },\r\n});","import { useRoute } from \"@react-navigation/native\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { ScrollView, StyleSheet, Text, View } from \"react-native\";\r\nimport { RadioButton, useTheme, IconButton, Button, ActivityIndicator } from \"react-native-paper\";\r\nimport Breadcrumb from \"../../components/Breadcrumb\";\r\nimport Navbar from \"../../components/Navbar\";\r\nimport { Panel } from \"../../components/Panel\";\r\nimport Snackbar from \"../../components/Snackbar\";\r\nimport TextInput from \"../../components/TextInput\";\r\nimport api from \"../../services/api\";\r\n\r\nconst QuestionContainer = ({ id, alert, onClose = () => { } }) => {\r\n  const theme = useTheme();\r\n\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const [pageIndex, setPageIndex] = useState(0);\r\n  const pages = {\r\n    [0]: {\r\n      icon: \"form-select\",\r\n      label: \"Formulário\",\r\n      onPress: () => setPageIndex(0)\r\n    },\r\n    [1]: {\r\n      icon: \"eye-outline\",\r\n      label: \"Prévia\",\r\n      onPress: () => setPageIndex(1)\r\n    }\r\n  };\r\n\r\n  const [inputEnunciado, setInputEnunciado] = useState(\"\");\r\n\r\n  const [correctOption, setCorrectOption] = useState(\"0\");\r\n  const [options, setOptions] = useState({\r\n    [0]: \"\"\r\n  })\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      try {\r\n        const { data: { question } } = await api.get('/question/view/' + id);\r\n        setOptions(question?.alternativas);\r\n        setInputEnunciado(question?.enunciado)\r\n        setCorrectOption(question?.alternativa_c)\r\n        setLoading(false)\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n\r\n    getData()\r\n  }, [id]);\r\n\r\n  const handleCorrectOption = (selected) => {\r\n    if (correctOption === selected) {\r\n      setCorrectOption(null);\r\n      return;\r\n    }\r\n    setCorrectOption(selected);\r\n  };\r\n\r\n  let removeOption = (i) => {\r\n    if (Object.keys(options)?.length <= 1) {\r\n      setOptions({\r\n        [0]: \"\"\r\n      });\r\n      return;\r\n    }\r\n    if (correctOption === i) {\r\n      setCorrectOption(null);\r\n    } else if (correctOption && i < correctOption) {\r\n      setCorrectOption(`${correctOption - 1}`);\r\n    };\r\n    let filteredOption = { ...options };\r\n    delete filteredOption[i];\r\n\r\n    const optionValues = Object.values(filteredOption);\r\n\r\n    let newOptions = optionValues.reduce((prev, cur, index) => {\r\n      return { ...prev, [index]: cur }\r\n    }, {});\r\n\r\n    setOptions(newOptions);\r\n  };\r\n\r\n  async function handleEditQuestion() {\r\n    if (inputEnunciado === '') {\r\n      alert(\"Enunciado vazio\", \"error\");\r\n      return\r\n    }\r\n\r\n    let keys = Object.keys(options);\r\n\r\n    if (keys?.length < 2) {\r\n      alert(\"A questão precisa conter ao menos duas alternativas\", \"error\");\r\n      return\r\n    }\r\n\r\n    if (keys?.findIndex(el => el === correctOption) === -1) {\r\n      alert(\"Nenhuma alternativa correta selecionada\", \"error\");\r\n      return\r\n    }\r\n\r\n    try {\r\n      setLoading(true)\r\n      await api.put(`/question/${id}/edit`, {\r\n        enunciado: inputEnunciado, alternativas: { ...options }, alternativa_c: correctOption\r\n      })\r\n      alert(\"Questão alterada com sucesso\", \"success\");\r\n    } catch (error) {\r\n      console.log(error)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Panel\r\n      header={{ icon: \"close\", iconPress: onClose, title: \"Modificar Questão \" + id }}\r\n      tabs={{ pages, pageIndex }}\r\n    >\r\n      {\r\n        pageIndex == 0 ?\r\n          <>\r\n            <TextInput\r\n              value={inputEnunciado}\r\n              onChangeText={setInputEnunciado}\r\n              mode=\"outlined\"\r\n              label=\"Enunciado\"\r\n              leftIcon={\"notebook\"}\r\n              multiline={true}\r\n              style={{ ...styles.searchInput, backgroundColor: theme?.colors?.light }}\r\n              outlineStyle={{\r\n                borderRadius: 5\r\n              }}\r\n            />\r\n\r\n            {Object.keys(options)?.map((option, key) => (\r\n              <TextInput\r\n                key={key}\r\n                mode=\"outlined\"\r\n                value={options[option]}\r\n                onChangeText={(text) => setOptions({ ...options, [option]: text })}\r\n                rightIcon=\"trash-can\"\r\n                rightColor={theme?.colors?.danger}\r\n                rightPress={() => removeOption(option)}\r\n                leftPress={() => handleCorrectOption(option)}\r\n                leftIcon={option === correctOption ? \"check-circle-outline\" : \"close-circle-outline\"}\r\n                leftColor={option === correctOption ? theme?.colors?.success : theme?.colors?.danger}\r\n                label={`Alternativa ${String.fromCharCode(65 + parseInt(option)).toLowerCase()})`}\r\n                multiline={true}\r\n                style={{ ...styles.searchInput, backgroundColor: theme?.colors?.light }}\r\n                outlineStyle={{\r\n                  borderRadius: 5\r\n                }}\r\n              />\r\n            ))}\r\n\r\n            <Button\r\n              icon=\"pencil-plus\"\r\n              onPress={() => {\r\n                let optionsSize = Object.keys(options)?.length;\r\n                if (optionsSize >= 26) return;\r\n                setOptions({ ...options, [optionsSize]: \"\" })\r\n              }}\r\n              mode=\"outlined\"\r\n              textColor={theme?.colors?.primary}\r\n              style={{\r\n                borderColor: theme?.colors?.primary,\r\n                borderRadius: 5,\r\n                marginBottom: 10,\r\n                width: 225\r\n              }}\r\n            >\r\n              Adicionar Alternativa\r\n            </Button>\r\n          </> : <></>\r\n      }\r\n      {\r\n        pageIndex == 1 ?\r\n          <>\r\n            <Text style={{ ...styles.previewText, color: theme?.colors?.secondary, marginBottom: 10 }}>\r\n              {inputEnunciado}\r\n            </Text>\r\n            {Object.keys(options)?.map((option, key) => (\r\n              options[option] ?\r\n                <Text key={key} style={{ ...styles.previewText, color: theme?.colors?.secondary, ...(option === correctOption ? { fontFamily: 'Roboto-Bold' } : {}) }}>\r\n                  {`${String.fromCharCode(65 + parseInt(option)).toLowerCase()}) ${options[option]}`}\r\n                </Text>\r\n                :\r\n                <></>\r\n            ))}\r\n            {\r\n              inputEnunciado && options[0] ?\r\n                <Button\r\n                  icon=\"cursor-pointer\"\r\n                  buttonColor={theme?.colors?.primary}\r\n                  textColor={theme?.colors?.background}\r\n                  style={{\r\n                    borderColor: theme?.colors?.primary,\r\n                    borderRadius: 5,\r\n                    marginTop: 30,\r\n                    width: '100%'\r\n                  }}\r\n                  onPress={handleEditQuestion}\r\n                >\r\n                  Aplicar Alterações\r\n                </Button>\r\n                :\r\n                <></>\r\n            }\r\n          </> : <></>\r\n      }\r\n    </Panel>\r\n  )\r\n};\r\n\r\nconst QuestionView = () => {\r\n  const theme = useTheme();\r\n  const route = useRoute();\r\n\r\n  const [snackbar, setSnackbar] = useState({\r\n    type: \"info\",\r\n    message: \"\",\r\n    visible: false,\r\n    alert: (msg, type) => {\r\n      setSnackbar({ ...snackbar, message: msg, type: type, visible: true });\r\n    },\r\n    hide: () => {\r\n      setSnackbar({ ...snackbar, visible: false });\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <Snackbar\r\n        hide={snackbar.hide}\r\n        message={snackbar.message}\r\n        type={snackbar.type}\r\n        visible={snackbar.visible}\r\n      />\r\n      <ScrollView\r\n        style={{ backgroundColor: theme?.colors?.background }}\r\n        contentContainerStyle={{\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          alignSelf: 'center',\r\n          maxWidth: '95%'\r\n        }}\r\n      >\r\n        <View style={{\r\n          width: 550,\r\n          maxWidth: \"100%\"\r\n        }}>\r\n          <Breadcrumb style={{ marginTop: 10, marginBottom: 15 }}>\r\n            <Breadcrumb.Icon icon=\"home\" link=\"home\" />\r\n            <Breadcrumb.Page label=\"Banco de Questões\" link=\"questionlist\" />\r\n            <Breadcrumb.Page label={`Questão ${route?.params?.id}`} />\r\n          </Breadcrumb>\r\n        </View>\r\n\r\n        <QuestionContainer id={route?.params?.id} width={550} alert={snackbar.alert} />\r\n        <View style={{ marginBottom: 25 }} />\r\n      </ScrollView>\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  title: {\r\n    fontFamily: \"Roboto-Medium\",\r\n    alignSelf: \"flex-start\",\r\n    marginBottom: 15,\r\n    fontSize: 16,\r\n    textAlign: 'center'\r\n  },\r\n  text: {\r\n    fontFamily: \"Roboto-Medium\",\r\n  },\r\n  title: {\r\n    fontFamily: \"Roboto-Medium\",\r\n    marginBottom: 15,\r\n    fontSize: 16,\r\n  },\r\n  subtitle: {\r\n    fontFamily: \"Roboto-Medium\",\r\n    textAlign: 'left',\r\n    fontSize: 16,\r\n    marginTop: 10,\r\n    marginBottom: 10\r\n  },\r\n  question: {\r\n    width: \"100%\",\r\n    justifyContent: \"flex-end\",\r\n    alignItems: 'center',\r\n    borderRadius: 10,\r\n  },\r\n  scrollView: {\r\n    height: '45%',\r\n    width: '100%',\r\n    alignSelf: 'center',\r\n    marginTop: 10\r\n  },\r\n  contentContainer: {\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  searchInput: {\r\n    marginBottom: 15,\r\n  },\r\n  previewText: {\r\n    fontFamily: \"Roboto-Regular\"\r\n  },\r\n  fab: {\r\n    position: 'absolute',\r\n    margin: 16,\r\n    right: 0,\r\n    bottom: 0,\r\n    borderRadius: 45\r\n  },\r\n});\r\n\r\nexport default QuestionView;\r\n","import { useNavigation } from \"@react-navigation/native\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { ScrollView, StyleSheet, Text, View } from \"react-native\";\r\nimport { RadioButton, useTheme, Button, IconButton, FAB, Divider, TouchableRipple } from \"react-native-paper\";\r\nimport Breadcrumb from \"../../components/Breadcrumb\";\r\nimport Navbar from \"../../components/Navbar\";\r\nimport { Panel } from \"../../components/Panel\";\r\nimport Snackbar from \"../../components/Snackbar\";\r\nimport TextInput from \"../../components/TextInput\";\r\nimport api from \"../../services/api\";\r\n\r\nconst QuestionContainer = ({ width = 550, alert, onClose = () => { } }) => {\r\n  const theme = useTheme();\r\n\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const [pageIndex, setPageIndex] = useState(0);\r\n  const pages = {\r\n    [0]: {\r\n      icon: \"form-select\",\r\n      label: \"Formulário\",\r\n      onPress: () => setPageIndex(0)\r\n    },\r\n    [1]: {\r\n      icon: \"eye-outline\",\r\n      label: \"Prévia\",\r\n      onPress: () => setPageIndex(1)\r\n    }\r\n  }\r\n\r\n  const [inputEnunciado, setInputEnunciado] = useState(\"\");\r\n\r\n  const [correctOption, setCorrectOption] = useState(\"0\");\r\n  const [options, setOptions] = useState({\r\n    [0]: \"\"\r\n  })\r\n\r\n  const handleCorrectOption = (selected) => {\r\n    if (correctOption === selected) {\r\n      setCorrectOption(null);\r\n      return;\r\n    }\r\n    setCorrectOption(selected);\r\n  };\r\n\r\n  let removeOption = (i) => {\r\n    if (Object.keys(options)?.length <= 1) {\r\n      setOptions({\r\n        [0]: \"\"\r\n      });\r\n      return;\r\n    }\r\n    if (correctOption === i) {\r\n      setCorrectOption(null);\r\n    } else if (correctOption && i < correctOption) {\r\n      setCorrectOption(`${correctOption - 1}`);\r\n    };\r\n    let filteredOption = { ...options };\r\n    delete filteredOption[i];\r\n\r\n    const optionValues = Object.values(filteredOption);\r\n\r\n    let newOptions = optionValues.reduce((prev, cur, index) => {\r\n      return { ...prev, [index]: cur }\r\n    }, {});\r\n\r\n    setOptions(newOptions);\r\n  };\r\n\r\n  async function handleCreateQuestion() {\r\n    if (inputEnunciado === '') {\r\n      alert(\"Enunciado vazio\", \"error\");\r\n      return\r\n    }\r\n\r\n    let keys = Object.keys(options);\r\n\r\n    if (keys?.length < 2) {\r\n      alert(\"A questão precisa conter ao menos duas alternativas\", \"error\");\r\n      return\r\n    }\r\n\r\n    if (keys?.findIndex(el => el === correctOption) === -1) {\r\n      alert(\"Nenhuma alternativa correta selecionada\", \"error\");\r\n      return\r\n    }\r\n\r\n    try {\r\n      setLoading(true)\r\n      await api.post('/question/create', {\r\n        enunciado: inputEnunciado, alternativas: { ...options }, alternativa_c: correctOption\r\n      })\r\n      alert(\"Questão criada com sucesso\", \"success\");\r\n    } catch (error) {\r\n      console.log(error)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Panel\r\n      header={{ icon: \"close\", iconPress: onClose, title: \"Criar Questão\" }}\r\n      tabs={{ pages, pageIndex }}\r\n    >\r\n      {\r\n        pageIndex == 0 ?\r\n          <>\r\n            <TextInput\r\n              value={inputEnunciado}\r\n              onChangeText={setInputEnunciado}\r\n              mode=\"outlined\"\r\n              label=\"Enunciado\"\r\n              leftIcon={\"notebook\"}\r\n              multiline={true}\r\n              style={{ ...styles.searchInput, backgroundColor: theme?.colors?.light }}\r\n              outlineStyle={{\r\n                borderRadius: 5\r\n              }}\r\n            />\r\n\r\n            {Object.keys(options)?.map((option, key) => (\r\n              <TextInput\r\n                key={key}\r\n                mode=\"outlined\"\r\n                value={options[option]}\r\n                onChangeText={(text) => setOptions({ ...options, [option]: text })}\r\n                rightIcon=\"trash-can\"\r\n                rightColor={theme?.colors?.danger}\r\n                rightPress={() => removeOption(option)}\r\n                leftPress={() => handleCorrectOption(option)}\r\n                leftIcon={option === correctOption ? \"check-circle-outline\" : \"close-circle-outline\"}\r\n                leftColor={option === correctOption ? theme?.colors?.success : theme?.colors?.danger}\r\n                label={`Alternativa ${String.fromCharCode(65 + parseInt(option)).toLowerCase()})`}\r\n                multiline={true}\r\n                style={{ ...styles.searchInput, backgroundColor: theme?.colors?.light }}\r\n                outlineStyle={{\r\n                  borderRadius: 5\r\n                }}\r\n              />\r\n            ))}\r\n\r\n            <Button\r\n              icon=\"pencil-plus\"\r\n              onPress={() => {\r\n                let optionsSize = Object.keys(options)?.length;\r\n                if (optionsSize >= 26) return;\r\n                setOptions({ ...options, [optionsSize]: \"\" })\r\n              }}\r\n              mode=\"outlined\"\r\n              textColor={theme?.colors?.primary}\r\n              style={{\r\n                borderColor: theme?.colors?.primary,\r\n                borderRadius: 5,\r\n                marginBottom: 10,\r\n                width: 225\r\n              }}\r\n            >\r\n              Adicionar Alternativa\r\n            </Button>\r\n          </> : <></>\r\n      }\r\n      {\r\n        pageIndex == 1 ?\r\n          <>\r\n            <Text style={{ ...styles.previewText, color: theme?.colors?.secondary, marginBottom: 10 }}>\r\n              {inputEnunciado}\r\n            </Text>\r\n            {Object.keys(options)?.map((option, key) => (\r\n              options[option] ?\r\n                <Text key={key} style={{ ...styles.previewText, color: theme?.colors?.secondary, ...(option === correctOption ? { fontFamily: 'Roboto-Bold' } : {}) }}>\r\n                  {`${String.fromCharCode(65 + parseInt(option)).toLowerCase()}) ${options[option]}`}\r\n                </Text>\r\n                :\r\n                <></>\r\n            ))}\r\n            {\r\n              inputEnunciado && options[0] ?\r\n                <Button\r\n                  icon=\"creation\"\r\n                  buttonColor={theme?.colors?.primary}\r\n                  textColor={theme?.colors?.background}\r\n                  style={{\r\n                    borderColor: theme?.colors?.primary,\r\n                    borderRadius: 5,\r\n                    marginTop: 30,\r\n                    width: '100%'\r\n                  }}\r\n                  onPress={handleCreateQuestion}\r\n                >\r\n                  Criar Questão\r\n                </Button>\r\n                :\r\n                <></>\r\n            }\r\n          </> : <></>\r\n      }\r\n    </Panel>\r\n  )\r\n};\r\n\r\nconst QuestionCreate = () => {\r\n  const theme = useTheme();\r\n\r\n  const [snackbar, setSnackbar] = useState({\r\n    type: \"info\",\r\n    message: \"\",\r\n    visible: false,\r\n    alert: (msg, type) => {\r\n      setSnackbar({ ...snackbar, message: msg, type: type, visible: true });\r\n    },\r\n    hide: () => {\r\n      setSnackbar({ ...snackbar, visible: false });\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <Snackbar\r\n        hide={snackbar.hide}\r\n        message={snackbar.message}\r\n        type={snackbar.type}\r\n        visible={snackbar.visible}\r\n      />\r\n      <ScrollView\r\n        style={{ backgroundColor: theme?.colors?.background }}\r\n        contentContainerStyle={{\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          alignSelf: 'center',\r\n          maxWidth: '95%'\r\n        }}\r\n      >\r\n        <View style={{\r\n          width: 550,\r\n          maxWidth: \"100%\"\r\n        }}>\r\n          <Breadcrumb style={{ marginTop: 10, marginBottom: 15 }}>\r\n            <Breadcrumb.Icon icon=\"home\" link=\"home\" />\r\n            <Breadcrumb.Page label=\"Banco de Questões\" link=\"questionlist\" />\r\n            <Breadcrumb.Page label=\"Criar Questão\" link=\"questioncreate\" />\r\n          </Breadcrumb>\r\n        </View>\r\n\r\n        <QuestionContainer width={550} alert={snackbar.alert} />\r\n        <View style={{ marginBottom: 25 }} />\r\n      </ScrollView>\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  title: {\r\n    fontFamily: \"Roboto-Medium\",\r\n    alignSelf: \"flex-start\",\r\n    marginBottom: 15,\r\n    fontSize: 16,\r\n    textAlign: 'center'\r\n  },\r\n  text: {\r\n    fontFamily: \"Roboto-Medium\",\r\n  },\r\n  title: {\r\n    fontFamily: \"Roboto-Medium\",\r\n    marginBottom: 15,\r\n    fontSize: 16,\r\n  },\r\n  subtitle: {\r\n    fontFamily: \"Roboto-Medium\",\r\n    textAlign: 'left',\r\n    fontSize: 16,\r\n    marginTop: 10,\r\n    marginBottom: 10\r\n  },\r\n  question: {\r\n    width: \"100%\",\r\n    justifyContent: \"flex-end\",\r\n    alignItems: 'center',\r\n    borderRadius: 10,\r\n  },\r\n  scrollView: {\r\n    height: '45%',\r\n    width: '100%',\r\n    alignSelf: 'center',\r\n    marginTop: 10\r\n  },\r\n  contentContainer: {\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  searchInput: {\r\n    marginBottom: 15,\r\n  },\r\n  previewText: {\r\n    fontFamily: \"Roboto-Regular\"\r\n  },\r\n  fab: {\r\n    position: 'absolute',\r\n    margin: 16,\r\n    right: 0,\r\n    bottom: 0,\r\n    borderRadius: 45\r\n  },\r\n});\r\n\r\nexport default QuestionCreate;\r\n","import { useState, useEffect } from \"react\";\r\nimport { Text } from \"react-native\";\r\nimport { BottomNavigation, useTheme } from \"react-native-paper\";\r\n\r\nconst BottomNavbar = ({\r\n  routes: add = {},\r\n  index,\r\n  renderScene = () => {},\r\n  onIndexChange = (number) => {},\r\n}) => {\r\n  const theme = useTheme();\r\n\r\n  const [routes] = useState([...add]);\r\n\r\n  return (\r\n    <BottomNavigation\r\n      barStyle={{\r\n        backgroundColor: theme?.colors?.bottomNav?.background,\r\n        color: theme?.colors?.bottomNav?.color,\r\n      }}\r\n      navigationState={{ index, routes }}\r\n      onIndexChange={onIndexChange}\r\n      renderScene={renderScene}\r\n      renderLabel={(props) => (\r\n        <Text\r\n          style={{\r\n            direction: \"ltr\",\r\n            textAlign: 'center',\r\n            fontFamily: 'Roboto-Regular',\r\n            letterSpacing: 0.5,\r\n            fontWeight: \"500\",\r\n            lineHeight: 16,\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          {props?.route?.title}\r\n        </Text>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default BottomNavbar;","\r\nlet avatarAsText = (text = \"\") => {\r\n    let name = text.split(\" \")\r\n    let firstLetter = name[0][0].toUpperCase();\r\n    let secondLetter = name.length > 1 ? name[name.length - 1][0].toUpperCase() : \"\";\r\n\r\n    if (!firstLetter) return \"?\";\r\n\r\n    return firstLetter + secondLetter;\r\n};\r\n\r\nexport default avatarAsText;","import { ScrollView, StyleSheet, Text, View } from \"react-native\";\r\nimport { Avatar, useTheme } from \"react-native-paper\";\r\n\r\nconst Exercises = () => {\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <>\r\n            <Text style={{ ...styles.title, fontSize: 17, color: theme?.colors?.primary, marginTop: 20 }}>\r\n                Meus Exercícios\r\n            </Text>\r\n            <Text style={{ ...styles.description, color: theme?.colors?.primary, marginTop: 10 }}>\r\n                Você não tem nenhum exercício pendente.\r\n            </Text>\r\n        </>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n    },\r\n    title: {\r\n        fontFamily: \"Roboto-Medium\",\r\n        alignSelf: \"flex-start\",\r\n        fontSize: 20,\r\n    },\r\n    description: {\r\n        fontFamily: \"Roboto-Regular\",\r\n        alignSelf: \"flex-start\",\r\n        // fontStyle: \"italic\",\r\n        fontSize: 14,\r\n    },\r\n});\r\n\r\nexport default Exercises;\r\n","import { useState } from \"react\";\r\nimport { StyleSheet, Text, } from \"react-native\";\r\nimport { DataTable, useTheme } from \"react-native-paper\";\r\nimport TextInput from \"../../../components/TextInput\";\r\n\r\nconst Grades = () => {\r\n    const theme = useTheme();\r\n\r\n    const [search, setSearch] = useState(\"\")\r\n\r\n    return (\r\n        <>\r\n            <Text style={{ ...styles.title, fontSize: 17, color: theme?.colors?.primary, marginTop: 20 }}>\r\n                Minhas Notas\r\n            </Text>\r\n\r\n            <DataTable\r\n                style={{\r\n                    ...styles.table,\r\n                    backgroundColor: theme?.colors?.light,\r\n                }}\r\n            >\r\n\r\n                <TextInput\r\n                    value={search}\r\n                    onChangeText={(text) => setSearch(text)}\r\n                    mode=\"outlined\"\r\n                    label=\"Buscar Matéria\"\r\n                    leftIcon={\"tag-search\"}\r\n                    style={{ margin: 10, width: 250, backgroundColor: theme?.colors?.light }}\r\n                    outlineStyle={{\r\n                        borderRadius: 5\r\n                    }}\r\n                />\r\n\r\n                <DataTable.Header>\r\n                    <DataTable.Title sortDirection=\"descending\">\r\n                        Matéria\r\n                    </DataTable.Title>\r\n                    <DataTable.Title>\r\n                        Média Geral\r\n                    </DataTable.Title>\r\n                    <DataTable.Title>\r\n                        Última Avaliação\r\n                    </DataTable.Title>\r\n                </DataTable.Header>\r\n\r\n                <DataTable.Row>\r\n                    <DataTable.Cell textStyle={styles.text}>\r\n                        Linguagens e Códigos\r\n                    </DataTable.Cell>\r\n                    <DataTable.Cell textStyle={styles.text}>\r\n                        8.0\r\n                    </DataTable.Cell>\r\n                    <DataTable.Cell textStyle={styles.text}>\r\n                        09/02/2023\r\n                    </DataTable.Cell>\r\n                </DataTable.Row>\r\n\r\n                <DataTable.Row>\r\n                    <DataTable.Cell textStyle={styles.text}>\r\n                        Matemática\r\n                    </DataTable.Cell>\r\n                    <DataTable.Cell textStyle={styles.text}>\r\n                        4.5\r\n                    </DataTable.Cell>\r\n                    <DataTable.Cell textStyle={styles.text}>\r\n                        09/02/2023\r\n                    </DataTable.Cell>\r\n                </DataTable.Row>\r\n\r\n                <DataTable.Row>\r\n                    <DataTable.Cell textStyle={styles.text}>\r\n                        Ciências da Natureza\r\n                    </DataTable.Cell>\r\n                    <DataTable.Cell textStyle={styles.text}>\r\n                        4.5\r\n                    </DataTable.Cell>\r\n                    <DataTable.Cell textStyle={styles.text}>\r\n                        05/08/2022\r\n                    </DataTable.Cell>\r\n                </DataTable.Row>\r\n\r\n                {/* \r\n                <DataTable.Pagination\r\n                    page={page}\r\n                    numberOfPages={Math.ceil(questions.length / itemsPerPage)}\r\n                    onPageChange={(page) => setPage(page)}\r\n                    label={`${from}-${to} de ${total}`}\r\n                    numberOfItemsPerPageList={optionsPerPage}\r\n                    numberOfItemsPerPage={itemsPerPage}\r\n                    onItemsPerPageChange={setItemsPerPage}\r\n                    showFastPaginationControls\r\n                    selectPageDropdownLabel={\"Questões por página\"}\r\n                /> */}\r\n            </DataTable>\r\n        </>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n    },\r\n    title: {\r\n        fontFamily: \"Roboto-Medium\",\r\n        alignSelf: \"flex-start\",\r\n        fontSize: 20,\r\n    },\r\n    description: {\r\n        fontFamily: \"Roboto-Regular\",\r\n        alignSelf: \"flex-start\",\r\n        // fontStyle: \"italic\",\r\n        fontSize: 14,\r\n    },\r\n    table: {\r\n        marginTop: 15,\r\n        marginBottom: 5,\r\n        width: \"100%\",\r\n    },\r\n    text: {\r\n        fontFamily: \"Roboto-Medium\",\r\n    },\r\n});\r\n\r\nexport default Grades;\r\n","import { useState } from \"react\";\r\nimport { StyleSheet, Text, } from \"react-native\";\r\nimport { LineChart } from \"react-native-chart-kit\";\r\nimport { DataTable, useTheme } from \"react-native-paper\";\r\nimport TextInput from \"../../../components/TextInput\";\r\n\r\nconst Performance = () => {\r\n    const theme = useTheme();\r\n\r\n    const [search, setSearch] = useState(\"Matemática\");\r\n    const [chartWidth, setChartWidth] = useState(0);\r\n\r\n    const onLayout = (event) => {\r\n        const { x, y, height, width } = event.nativeEvent.layout;\r\n        setChartWidth(width);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Text style={{ ...styles.title, fontSize: 17, color: theme?.colors?.primary, marginTop: 20 }}>\r\n                Meu Desempenho\r\n            </Text>\r\n\r\n            <DataTable\r\n                style={{\r\n                    ...styles.table,\r\n                    backgroundColor: theme?.colors?.light,\r\n                }}\r\n            >\r\n\r\n                <TextInput\r\n                    value={search}\r\n                    onChangeText={(text) => setSearch(text)}\r\n                    mode=\"outlined\"\r\n                    label=\"Matéria\"\r\n                    leftIcon={\"tag-outline\"}\r\n                    rightIcon={\"chevron-down\"}\r\n                    style={{ margin: 10, width: 250, backgroundColor: theme?.colors?.light }}\r\n                    outlineStyle={{\r\n                        borderRadius: 5\r\n                    }}\r\n                />\r\n\r\n                <DataTable.Row>\r\n                    <DataTable.Cell textStyle={styles.text}>\r\n                        <Text style={{ ...styles.text, marginLeft: 10 }}>\r\n                            Sua Média de Desempenho em Matemática\r\n                        </Text>\r\n                    </DataTable.Cell>\r\n                </DataTable.Row>\r\n\r\n                <DataTable.Row onLayout={onLayout}>\r\n                    <DataTable.Cell textStyle={styles.text}>\r\n                        <LineChart\r\n                            data={{\r\n                                labels: [\"Janeiro\", \"Fevereiro\", \"Março\", \"Abril\", \"Maio\", \"Junho\"],\r\n                                datasets: [\r\n                                    {\r\n                                        data: [\r\n                                            Math.random() * 100,\r\n                                            Math.random() * 100,\r\n                                            Math.random() * 100,\r\n                                            Math.random() * 100,\r\n                                            Math.random() * 100,\r\n                                            Math.random() * 100\r\n                                        ]\r\n                                    }\r\n                                ]\r\n                            }}\r\n                            width={chartWidth}\r\n                            height={220}\r\n                            yAxisLabel=\"\"\r\n                            yAxisSuffix=\"\"\r\n                            yAxisInterval={1}\r\n                            chartConfig={{\r\n                                backgroundColor: theme?.colors?.light,\r\n                                backgroundGradientFrom: theme?.colors?.light,\r\n                                backgroundGradientTo: theme?.colors?.light,\r\n                                decimalPlaces: 0,\r\n                                color: (opacity = 1) => theme?.colors?.primary,\r\n                                labelColor: (opacity = 1) => theme?.colors?.primary,\r\n                                style: {\r\n                                    borderRadius: 16\r\n                                },\r\n                                propsForDots: {\r\n                                    r: \"6\",\r\n                                    strokeWidth: \"2\",\r\n                                    stroke: theme?.colors?.primary\r\n                                }\r\n                            }}\r\n                            bezier\r\n                            style={{\r\n                                marginVertical: 8,\r\n                                borderRadius: 16\r\n                            }}\r\n                        />\r\n                    </DataTable.Cell>\r\n                </DataTable.Row>\r\n\r\n                <DataTable.Row>\r\n                    <DataTable.Cell textStyle={styles.text}>\r\n                        <Text style={{ ...styles.text, marginLeft: 10 }}>\r\n                            Outras Estatísticas\r\n                        </Text>\r\n                    </DataTable.Cell>\r\n                </DataTable.Row>\r\n\r\n                <DataTable.Row>\r\n                    <DataTable.Cell textStyle={styles.text}>\r\n                        <Text style={{ fontFamily: \"Roboto-Medium\", marginLeft: 10 }}>\r\n                            Nenhuma outra estatística encontrada\r\n                        </Text>\r\n                    </DataTable.Cell>\r\n                </DataTable.Row>\r\n\r\n            </DataTable>\r\n        </>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n    },\r\n    title: {\r\n        fontFamily: \"Roboto-Medium\",\r\n        alignSelf: \"flex-start\",\r\n        fontSize: 20,\r\n    },\r\n    description: {\r\n        fontFamily: \"Roboto-Regular\",\r\n        alignSelf: \"flex-start\",\r\n        // fontStyle: \"italic\",\r\n        fontSize: 14,\r\n    },\r\n    table: {\r\n        marginTop: 15,\r\n        marginBottom: 5,\r\n        width: \"100%\",\r\n    },\r\n    text: {\r\n        fontFamily: \"Roboto-Medium\",\r\n    },\r\n});\r\n\r\nexport default Performance;","import { useContext, useState } from \"react\";\r\nimport { Platform, StyleSheet, Text, } from \"react-native\";\r\nimport { Avatar, DataTable, IconButton, ProgressBar, useTheme } from \"react-native-paper\";\r\nimport TextInput from \"../../../components/TextInput\";\r\nimport AuthContext from \"../../../contexts/auth\";\r\nimport avatarAsText from \"../../../services/avatarText\";\r\n\r\nconst Ranking = () => {\r\n    const theme = useTheme();\r\n\r\n    const { user } = useContext(AuthContext);\r\n    const avatar = avatarAsText(user.nome);\r\n\r\n    const [search, setSearch] = useState(\"Matemática\")\r\n\r\n    const ranking = [\r\n        {\r\n            position: 1,\r\n            progress: 1,\r\n            name: \"Mario Leandro\",\r\n            hits: 135,\r\n            misses: 12\r\n        },\r\n        {\r\n            position: 2,\r\n            progress: 0.8,\r\n            name: \"Jeremias Oliveira\",\r\n            hits: 87,\r\n            misses: 24\r\n        },\r\n        {\r\n            position: 3,\r\n            progress: 0.7,\r\n            name: \"Raquel Alves\",\r\n            hits: 63,\r\n            misses: 20\r\n        }\r\n    ]\r\n\r\n    return (\r\n        <>\r\n            <Text style={{ ...styles.title, fontSize: 17, color: theme?.colors?.primary, marginTop: 20 }}>\r\n                Meu Ranking\r\n            </Text>\r\n\r\n            <DataTable\r\n                style={{\r\n                    ...styles.table,\r\n                    backgroundColor: theme?.colors?.light,\r\n                }}\r\n            >\r\n\r\n                <TextInput\r\n                    value={search}\r\n                    onChangeText={(text) => setSearch(text)}\r\n                    mode=\"outlined\"\r\n                    label=\"Matéria\"\r\n                    leftIcon={\"tag-outline\"}\r\n                    rightIcon={\"chevron-down\"}\r\n                    style={{ margin: 10, width: 250, backgroundColor: theme?.colors?.light }}\r\n                    outlineStyle={{\r\n                        borderRadius: 5\r\n                    }}\r\n                />\r\n\r\n                {\r\n                    ranking.map((rank, key) => (\r\n                        <DataTable.Row key={key}>\r\n                            <DataTable.Cell textStyle={styles.text}>\r\n                                <Text style={{ ...styles.text, marginRight: 10 }}>\r\n                                    {rank.position}º\r\n                                </Text>\r\n                                <Avatar.Text size={32} label={avatarAsText(rank.name)} labelStyle={{ ...styles.text }} />\r\n                                <Text style={{ ...styles.text, marginLeft: 10 }}>\r\n                                    {rank.name}\r\n                                </Text>\r\n                            </DataTable.Cell>\r\n                            <DataTable.Cell textStyle={styles.text}>\r\n                                <ProgressBar progress={rank.progress} color={theme?.colors?.primary} style={{ height: 3, width: 150 }} />\r\n                            </DataTable.Cell>\r\n                            <DataTable.Cell textStyle={styles.text}>\r\n                                <IconButton\r\n                                    icon=\"target\"\r\n                                    size={16}\r\n                                    iconColor={theme?.colors?.primary}\r\n                                />\r\n                                <Text>\r\n                                    {rank.hits}\r\n                                </Text>\r\n                                <IconButton\r\n                                    icon=\"close-thick\"\r\n                                    size={16}\r\n                                    iconColor={theme?.colors?.primary}\r\n                                />\r\n                                <Text>\r\n                                    {rank.misses}\r\n                                </Text>\r\n                            </DataTable.Cell>\r\n                        </DataTable.Row>\r\n                    ))\r\n                }\r\n\r\n                <DataTable.Row>\r\n                    <DataTable.Cell textStyle={styles.text}>\r\n                        ...\r\n                    </DataTable.Cell>\r\n                </DataTable.Row>\r\n\r\n                <DataTable.Row>\r\n                    <DataTable.Cell textStyle={styles.text}>\r\n                        <Text style={{ ...styles.text, marginRight: 10 }}>\r\n                            23883º\r\n                        </Text>\r\n                        <Avatar.Text size={32} label={avatar} labelStyle={{ ...styles.text }} />\r\n                        <Text style={{ ...styles.text, marginLeft: 10 }}>\r\n                            Você ({user.nome})\r\n                        </Text>\r\n                    </DataTable.Cell>\r\n                    <DataTable.Cell textStyle={styles.text}>\r\n                        {\r\n                            Platform.OS === 'web' ?\r\n                                <ProgressBar progress={0.15} color={theme?.colors?.primary} style={{ height: 3, width: 150 }} />\r\n                                :\r\n                                <></>\r\n                        }\r\n                    </DataTable.Cell>\r\n                    <DataTable.Cell textStyle={styles.text}>\r\n                        <IconButton\r\n                            icon=\"target\"\r\n                            size={16}\r\n                            iconColor={theme?.colors?.primary}\r\n                        />\r\n                        <Text>\r\n                            4\r\n                        </Text>\r\n                        <IconButton\r\n                            icon=\"close-thick\"\r\n                            size={16}\r\n                            iconColor={theme?.colors?.primary}\r\n                        />\r\n                        <Text>\r\n                            3\r\n                        </Text>\r\n                    </DataTable.Cell>\r\n                </DataTable.Row>\r\n\r\n            </DataTable>\r\n        </>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n    },\r\n    title: {\r\n        fontFamily: \"Roboto-Medium\",\r\n        alignSelf: \"flex-start\",\r\n        fontSize: 20,\r\n    },\r\n    description: {\r\n        fontFamily: \"Roboto-Regular\",\r\n        alignSelf: \"flex-start\",\r\n        // fontStyle: \"italic\",\r\n        fontSize: 14,\r\n    },\r\n    table: {\r\n        marginTop: 15,\r\n        marginBottom: 5,\r\n        width: \"100%\",\r\n    },\r\n    text: {\r\n        fontFamily: \"Roboto-Medium\",\r\n    },\r\n});\r\n\r\nexport default Ranking;\r\n","import { useContext, useState } from \"react\";\r\nimport { ScrollView, StyleSheet, Text, View } from \"react-native\";\r\nimport { Avatar, BottomNavigation, useTheme } from \"react-native-paper\";\r\nimport BottomNavbar from \"../../components/BottomNav\";\r\nimport Breadcrumb from \"../../components/Breadcrumb\";\r\nimport Navbar from \"../../components/Navbar\";\r\nimport AuthContext from \"../../contexts/auth\";\r\nimport avatarAsText from \"../../services/avatarText\";\r\nimport Exercises from \"./Exercises\";\r\nimport Grades from \"./Grades\";\r\nimport Performance from \"./Performance\";\r\nimport Ranking from \"./Ranking\";\r\n\r\nconst Profile = () => {\r\n    const theme = useTheme();\r\n    const { user } = useContext(AuthContext);\r\n    const avatar = avatarAsText(user.nome);\r\n\r\n    const [index, setIndex] = useState(0);\r\n    const routes = [\r\n        {\r\n            key: \"grades\",\r\n            title: \"Notas\",\r\n            focusedIcon: \"school\",\r\n            onRender: <Grades />,\r\n        },\r\n        {\r\n            key: \"trophy\",\r\n            title: \"Ranking\",\r\n            focusedIcon: \"trophy\",\r\n            onRender: <Ranking />,\r\n        },\r\n        {\r\n            key: \"exercises\",\r\n            title: \"Exercícios\",\r\n            focusedIcon: \"bookshelf\",\r\n            onRender: <Exercises />,\r\n        },\r\n        {\r\n            key: \"performance\",\r\n            title: \"Desempenho\",\r\n            focusedIcon: \"speedometer\",\r\n            onRender: <Performance />,\r\n        },\r\n    ];\r\n\r\n    const onIndexChange = (number) => {\r\n        if (number === index) {\r\n            setIndex(null);\r\n            return;\r\n        };\r\n\r\n        setIndex(number);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Navbar showExitButton />\r\n            <ScrollView\r\n                style={{\r\n                    backgroundColor: theme?.colors?.background,\r\n                }}\r\n                contentContainerStyle={{\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                }}\r\n            >\r\n                <View style={{ width: \"95%\" }}>\r\n                    <Breadcrumb style={{ marginTop: 10, marginBottom: 15 }}>\r\n                        <Breadcrumb.Icon icon=\"home\" link=\"home\" />\r\n                        <Breadcrumb.Page label=\"Meu Ambiente\" link=\"profile\" />\r\n                    </Breadcrumb>\r\n\r\n                    <Text style={{ ...styles.title, color: theme?.colors?.primary, marginBottom: 20 }}>\r\n                        Meu Ambiente\r\n                    </Text>\r\n                    <View style={styles.userBoxContainer}>\r\n                        <Avatar.Text size={72} label={avatar} labelStyle={{ fontFamily: 'Roboto-Medium' }} />\r\n                        <ScrollView style={styles.descriptionContainer}>\r\n                            <Text style={{ ...styles.title, color: theme?.colors?.primary }}>\r\n                                {user?.nome}\r\n                            </Text>\r\n                            <Text style={{ ...styles.description, color: theme?.colors?.primary }}>\r\n                                ID: {user?.id ?? \"Desconhecido\"}\r\n                            </Text>\r\n                            <Text style={{ ...styles.description, color: theme?.colors?.primary }}>\r\n                                Série/Ano: 9ª ano\r\n                            </Text>\r\n                            <Text style={{ ...styles.description, color: theme?.colors?.primary }}>\r\n                                Instituição: Escola Estadual Fictícia\r\n                            </Text>\r\n                        </ScrollView>\r\n                    </View>\r\n\r\n                    <Text style={{ ...styles.title, fontSize: 17, color: theme?.colors?.primary, marginTop: 20 }}>\r\n                        Minhas Conquistas\r\n                    </Text>\r\n                    <ScrollView style={{ width: '100%', marginTop: 5 }}>\r\n                        <View style={{ flexWrap: 'wrap', flexDirection: 'row' }}>\r\n                            <Avatar.Text size={32} label={\"?\"} labelStyle={{ fontFamily: 'Roboto-Medium' }} />\r\n                        </View>\r\n                    </ScrollView>\r\n\r\n                    {routes[index].onRender}\r\n\r\n                </View>\r\n\r\n                <View style={{ marginBottom: 20 }} />\r\n\r\n            </ScrollView>\r\n            <View style={styles.floatingNavigator}>\r\n                <BottomNavbar\r\n                    index={index}\r\n                    onIndexChange={onIndexChange}\r\n                    routes={routes}\r\n                    renderScene={BottomNavigation.SceneMap({\r\n                        grades: () => { },\r\n                        trophy: () => { },\r\n                        exercises: () => { },\r\n                        performance: () => { }\r\n                    })}\r\n                />\r\n            </View>\r\n        </>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n    },\r\n    title: {\r\n        fontFamily: \"Roboto-Medium\",\r\n        alignSelf: \"flex-start\",\r\n        fontSize: 20,\r\n    },\r\n    description: {\r\n        fontFamily: \"Roboto-Regular\",\r\n        alignSelf: \"flex-start\",\r\n        // fontStyle: \"italic\",\r\n        fontSize: 14,\r\n    },\r\n    userBoxContainer: {\r\n        flexDirection: 'row'\r\n    },\r\n    descriptionContainer: {\r\n        flexDirection: 'column',\r\n        marginLeft: 15\r\n    },\r\n    button: {\r\n        width: 260\r\n    },\r\n    floatingNavigator: {\r\n        height: 80,\r\n        width: \"100%\",\r\n    },\r\n});\r\n\r\nexport default Profile;\r\n","import humanizeDuration from \"humanize-duration\";\r\n\r\nconst countdown = (ms) => {\r\n    return humanizeDuration(ms, { language: \"pt\" });\r\n};\r\n\r\nexport default countdown;","import { useNavigation } from \"@react-navigation/native\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { ScrollView, StyleSheet, Text, View } from \"react-native\";\r\nimport { useTheme, Button, IconButton, Divider } from \"react-native-paper\";\r\nimport countdown from \"../../services/countdown\";\r\n\r\nconst QuizConclude = ({ statistics: values, onExit = () => { }, onReplay = () => { } }) => {\r\n    const theme = useTheme();\r\n\r\n    const { navigate } = useNavigation();\r\n\r\n    const defaultValues = {\r\n        total: 10,\r\n        correct: 0,\r\n        timer: 0,\r\n        score: 0\r\n    };\r\n    const [statistics, setStatistics] = useState(defaultValues);\r\n\r\n    useEffect(() => {\r\n        setStatistics(values ?? defaultValues);\r\n    }, [values]);\r\n\r\n    if (((statistics.correct / statistics.total) * 100) >= 50) {\r\n        return (\r\n            <ScrollView\r\n                style={{ backgroundColor: theme?.colors?.lightSuccess }}\r\n                contentContainerStyle={{\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                }}\r\n            >\r\n                <View\r\n                    style={{\r\n                        marginTop: 150,\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\"\r\n                    }}\r\n                >\r\n                    <IconButton\r\n                        size={48}\r\n                        icon=\"thumb-up\"\r\n                        iconColor={theme?.colors?.dark}\r\n                    />\r\n                    <Text style={{ ...styles.title, color: theme.colors.dark, marginBottom: 60 }}>\r\n                        Bom trabalho!\r\n                    </Text>\r\n                </View>\r\n\r\n                <View\r\n                    style={{\r\n                        marginTop: 25,\r\n                        width: 250,\r\n                        maxWidth: \"80%\",\r\n                        justifyContent: \"flex-start\",\r\n                        alignItems: \"flex-start\"\r\n                    }}\r\n                >\r\n                    <Text style={{ ...styles.resultSubText, color: theme.colors.dark, marginBottom: 5 }}>\r\n                        Resultados:\r\n                    </Text>\r\n\r\n                    <Divider style={{ ...styles.divider, backgroundColor: theme?.colors?.dark }} />\r\n\r\n                    <Text style={{ ...styles.resultText, color: theme.colors.dark }}>\r\n                        Acertos: {statistics.correct}/{statistics.total}\r\n                    </Text>\r\n                    <Text style={{ ...styles.resultText, color: theme.colors.dark }}>\r\n                        Tempo: {countdown(statistics.timer * 1000)}\r\n                    </Text>\r\n                    <Text style={{ ...styles.resultBoldText, color: theme.colors.dark }}>\r\n                        Pontuação Total: {statistics.score}\r\n                    </Text>\r\n\r\n                </View>\r\n\r\n                <Button\r\n                    style={{ marginTop: 15, width: 250, maxWidth: '80%' }}\r\n                    mode=\"contained\"\r\n                    icon=\"book-open-page-variant\"\r\n                    onPress={() => {\r\n                        onExit();\r\n                        navigate(\"questionlist\");\r\n                    }}\r\n                    buttonColor={theme.colors.dark}\r\n                    textColor={theme?.colors?.lightSuccess}\r\n                >\r\n                    Concluir\r\n                </Button>\r\n\r\n            </ScrollView>\r\n        )\r\n    } else {\r\n        return (\r\n            <ScrollView\r\n                style={{ backgroundColor: theme?.colors?.danger }}\r\n                contentContainerStyle={{\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                }}\r\n            >\r\n\r\n                <View\r\n                    style={{\r\n                        marginTop: 150,\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\"\r\n                    }}\r\n                >\r\n                    <IconButton\r\n                        size={48}\r\n                        icon=\"emoticon-sad\"\r\n                        iconColor={theme?.colors?.background}\r\n                    />\r\n                    <Text style={{ ...styles.title, color: theme.colors.background, marginBottom: 60 }}>\r\n                        Não foi dessa vez!\r\n                    </Text>\r\n                </View>\r\n\r\n                <View\r\n                    style={{\r\n                        marginTop: 25,\r\n                        width: 250,\r\n                        maxWidth: \"80%\",\r\n                        justifyContent: \"flex-start\",\r\n                        alignItems: \"flex-start\"\r\n                    }}\r\n                >\r\n                    <Text style={{ ...styles.resultSubText, color: theme.colors.background, marginBottom: 5 }}>\r\n                        Resultados:\r\n                    </Text>\r\n\r\n                    <Divider style={{ ...styles.divider, backgroundColor: theme?.colors?.background }} />\r\n\r\n                    <Text style={{ ...styles.resultText, color: theme.colors.background }}>\r\n                        Acertos: {statistics.correct}/{statistics.total}\r\n                    </Text>\r\n                    <Text style={{ ...styles.resultText, color: theme.colors.background }}>\r\n                        Tempo: {countdown(statistics.timer * 1000)}\r\n                    </Text>\r\n                    <Text style={{ ...styles.resultBoldText, color: theme.colors.background }}>\r\n                        Pontuação Total: {statistics.score}\r\n                    </Text>\r\n\r\n                </View>\r\n\r\n                <Button\r\n                    style={{ marginTop: 15, width: 250, maxWidth: '80%' }}\r\n                    mode=\"contained\"\r\n                    icon=\"book-open-page-variant\"\r\n                    onPress={() => {\r\n                        onExit();\r\n                        navigate(\"questionlist\");\r\n                    }}\r\n                    buttonColor={theme.colors.background}\r\n                    textColor={theme?.colors?.danger}>\r\n                    Concluir\r\n                </Button>\r\n\r\n                <Button\r\n                    style={{ marginTop: 10, width: 250, maxWidth: '80%' }}\r\n                    mode=\"text\"\r\n                    onPress={onReplay}\r\n                    textColor={theme?.colors?.background}\r\n                >\r\n                    Tentar Novamente\r\n                </Button>\r\n\r\n            </ScrollView>\r\n        )\r\n    }\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        width: '100%',\r\n        backgroundColor: 'red'\r\n    },\r\n    divider: {\r\n        width: '100%',\r\n        borderRadius: 5,\r\n        height: 2,\r\n        marginBottom: 5\r\n    },\r\n    points: {\r\n        width: '100%',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        textAlign: 'center',\r\n    },\r\n    title: {\r\n        fontFamily: \"Roboto-Medium\",\r\n        fontSize: 20,\r\n    },\r\n    subtitle: {\r\n        fontFamily: \"Roboto-Medium\",\r\n        textAlign: 'left',\r\n        fontSize: 16,\r\n        marginTop: 10,\r\n        marginBottom: 25\r\n    },\r\n    resultSubText: {\r\n        fontFamily: \"Roboto-Bold\",\r\n        textAlign: 'left',\r\n        fontSize: 14,\r\n    },\r\n    resultText: {\r\n        fontFamily: \"Roboto-Regular\",\r\n        textAlign: 'left',\r\n        fontSize: 16,\r\n    },\r\n    resultBoldText: {\r\n        fontFamily: \"Roboto-Bold\",\r\n        textAlign: 'left',\r\n        fontSize: 16,\r\n    },\r\n    option: {\r\n        width: \"90%\",\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        borderRadius: 15,\r\n        marginBottom: 25\r\n    },\r\n});\r\n\r\nexport default QuizConclude;\r\n","import { useFocusEffect, useIsFocused, useNavigation, useRoute } from \"@react-navigation/native\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport { ScrollView, StyleSheet, Text, View } from \"react-native\";\r\nimport { useTheme, Button, ActivityIndicator } from \"react-native-paper\";\r\nimport Breadcrumb from \"../../components/Breadcrumb\";\r\nimport Navbar from \"../../components/Navbar\";\r\nimport Snackbar from \"../../components/Snackbar\";\r\nimport api from \"../../services/api\";\r\nimport countdown from \"../../services/countdown\";\r\nimport QuizConclude from \"./Conclude\";\r\n\r\nconst QuizView = () => {\r\n  const theme = useTheme();\r\n\r\n  const [loading, setLoading] = useState(false)\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [selected, setSelected] = useState(-1);\r\n  const [questions, setQuestions] = useState([]);\r\n  const [points, setPoints] = useState(0);\r\n  const [timer, setTimer] = useState(0);\r\n  const [reset, setReset] = useState(false);\r\n  const [onConclude, setOnConclude] = useState(false);\r\n  const stopTimer = !!(currentQuestion == questions.length);\r\n\r\n  const [snackbar, setSnackbar] = useState({\r\n    type: \"info\",\r\n    message: \"\",\r\n    visible: false,\r\n    alert: (msg, type) => {\r\n      setSnackbar({ ...snackbar, message: msg, type: type, visible: true });\r\n    },\r\n    hide: () => {\r\n      setSnackbar({ ...snackbar, visible: false });\r\n    },\r\n  });\r\n  const alert = snackbar.alert\r\n\r\n  const exit = () => {\r\n    setSelected(-1);\r\n    setCurrentQuestion(0);\r\n    setOnConclude(false);\r\n    setTimer(0);\r\n    setPoints(0);\r\n  };\r\n\r\n  const replay = () => {\r\n    setSelected(-1);\r\n    setCurrentQuestion(0);\r\n    setOnConclude(false);\r\n    setPoints(0);\r\n    setTimer(0);\r\n    setReset(!reset);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (stopTimer) return;\r\n    let timing = setTimeout(() => setTimer(timer + 1), 1000);\r\n    return () => clearTimeout(timing);\r\n  }, [timer, stopTimer]);\r\n\r\n  async function getData() {\r\n    try {\r\n      exit();\r\n      setLoading(true);\r\n      const { data } = await api.get('/question/list');\r\n      const questionsCorrected = data?.questions.map(question => {\r\n        return {\r\n          ...question,\r\n          alternativas: Object.values(question.alternativas)\r\n        }\r\n      })\r\n      const shuffledArray = questionsCorrected.sort(() => 0.5 - Math.random());\r\n      const result = shuffledArray.slice(0, 10);\r\n      setQuestions(result ?? [])\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.log(error)\r\n      alert(error?.response?.message ?? \"Ocorreu um erro ao tentar listar as questões\", \"error\");\r\n    }\r\n  };\r\n\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      getData();\r\n    }, [reset])\r\n  );\r\n\r\n  function correctColor(index) {\r\n    if (selected >= 0) {\r\n      if (selected === index) {\r\n        return questions[currentQuestion].alternativa_c == index ? theme.colors.success : theme.colors.danger\r\n      } else {\r\n        return questions[currentQuestion].alternativa_c == index ? theme.colors.success : theme.colors.primary\r\n      }\r\n    } else {\r\n      return theme.colors.primary\r\n    }\r\n  }\r\n\r\n  function nextQuestion() {\r\n    if (selected === -1) {\r\n      alert(\"Nenhuma alternativa selecionada\", \"error\");\r\n      return\r\n    }\r\n    if ((currentQuestion + 1) == questions.length) {\r\n      setOnConclude(true);\r\n      setCurrentQuestion(currentQuestion + 1)\r\n      return;\r\n    };\r\n    setSelected(-1);\r\n    setCurrentQuestion(currentQuestion + 1)\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <View style={{ flex: 1, width: '100%', justifyContent: 'center', alignItems: 'center' }}>\r\n        <ActivityIndicator animating={true} color={theme?.colors?.primary} size={'large'} />\r\n      </View>\r\n    )\r\n  }\r\n\r\n  if (onConclude) {\r\n    return <QuizConclude\r\n      onExit={exit}\r\n      onReplay={replay}\r\n      statistics={{\r\n        total: questions.length,\r\n        correct: points,\r\n        timer: timer,\r\n        score: Math.round((points * (points / timer) * 100))\r\n      }}\r\n    />\r\n  }\r\n\r\n  return (\r\n    <QuizContainer snackbar={snackbar}>\r\n      <View\r\n        style={{\r\n          width: 550,\r\n          maxWidth: '100%',\r\n          justifyContent: 'space-between',\r\n          alignItems: 'center',\r\n          alignSelf: 'center'\r\n        }}\r\n      >\r\n        <Text style={{ marginBottom: 5, fontFamily: \"Roboto-Medium\", fontSize: 16, color: theme.colors.primary }}>\r\n          {countdown(timer * 1000)}\r\n        </Text>\r\n        <Text style={{ ...styles.subtitle, color: theme.colors.primary }}>\r\n          {`${currentQuestion + 1} / ${questions.length}`}\r\n        </Text>\r\n        <Text style={{ ...styles.title, color: theme.colors.primary, width: '90%', textAlign: 'center', marginBottom: 60 }}>\r\n          {questions[currentQuestion]?.enunciado}\r\n        </Text>\r\n\r\n        <View style={{ width: '100%', justifyContent: 'space-between', alignItems: 'center' }}>\r\n          {questions[currentQuestion]?.alternativas?.map((question, index) => (\r\n            <Button\r\n              key={index}\r\n              style={{ marginBottom: 15, width: '70%', borderColor: correctColor(index) }}\r\n              contentStyle={{\r\n                width: \"100%\",\r\n                justifyContent: 'center',\r\n                alignItems: 'center'\r\n              }}\r\n              mode=\"outlined\"\r\n              onPress={() => {\r\n                if (selected < 0) {\r\n                  setSelected(index);\r\n                  questions[currentQuestion]?.alternativa_c == index && setPoints(points + 1);\r\n                }\r\n              }}\r\n              textColor={correctColor(index)}\r\n            >\r\n              {`${String.fromCharCode(65 + index).toLowerCase()})`} {question}\r\n            </Button>\r\n          ))}\r\n        </View>\r\n\r\n        <Button\r\n          icon=\"draw-pen\"\r\n          onPress={nextQuestion}\r\n          mode=\"contained\"\r\n          textColor={theme?.colors?.background}\r\n          style={{\r\n            borderRadius: 5,\r\n            marginTop: 25,\r\n            width: \"70%\",\r\n          }}\r\n        >\r\n          Próxima\r\n        </Button>\r\n      </View>\r\n    </QuizContainer>\r\n  );\r\n};\r\n\r\nconst QuizContainer = ({ children, snackbar }) => {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <Snackbar\r\n        hide={snackbar.hide}\r\n        message={snackbar.message}\r\n        type={snackbar.type}\r\n        visible={snackbar.visible}\r\n      />\r\n      <ScrollView\r\n        style={{ backgroundColor: theme?.colors?.background }}\r\n        contentContainerStyle={{\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <View style={{ width: \"95%\" }}>\r\n          <Breadcrumb style={{ marginTop: 10, marginBottom: 15 }}>\r\n            <Breadcrumb.Icon icon=\"home\" link=\"home\" />\r\n            <Breadcrumb.Page label={`Quiz`} link=\"quizview\" />\r\n          </Breadcrumb>\r\n\r\n          {children}\r\n\r\n          <View style={{ marginBottom: 25 }} />\r\n\r\n        </View>\r\n      </ScrollView>\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: '100%',\r\n    backgroundColor: 'red'\r\n  },\r\n  divider: {\r\n    width: '100%',\r\n    borderRadius: 5,\r\n    height: 2,\r\n    marginBottom: 5\r\n  },\r\n  points: {\r\n    width: '100%',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    textAlign: 'center',\r\n  },\r\n  title: {\r\n    fontFamily: \"Roboto-Medium\",\r\n    fontSize: 20,\r\n  },\r\n  subtitle: {\r\n    fontFamily: \"Roboto-Medium\",\r\n    textAlign: 'left',\r\n    fontSize: 16,\r\n    marginTop: 10,\r\n    marginBottom: 25\r\n  },\r\n  resultSubText: {\r\n    fontFamily: \"Roboto-Bold\",\r\n    textAlign: 'left',\r\n    fontSize: 14,\r\n  },\r\n  resultText: {\r\n    fontFamily: \"Roboto-Regular\",\r\n    textAlign: 'left',\r\n    fontSize: 16,\r\n  },\r\n  resultBoldText: {\r\n    fontFamily: \"Roboto-Bold\",\r\n    textAlign: 'left',\r\n    fontSize: 16,\r\n  },\r\n  option: {\r\n    width: \"90%\",\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    borderRadius: 15,\r\n    marginBottom: 25\r\n  },\r\n});\r\n\r\nexport default QuizView;\r\n","import React from 'react';\r\nimport Home from \"../screens/Home\";\r\nimport QuestionList from '../screens/Question/List';\r\nimport QuestionView from '../screens/Question/View';\r\nimport QuestionCreate from '../screens/Question/Create';\r\nimport Profile from '../screens/Profile';\r\n\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport QuizView from '../screens/Quiz/View';\r\n\r\nconst AppStack = createNativeStackNavigator();\r\n\r\nconst AppRoutes = () => (\r\n  <AppStack.Navigator screenOptions={{\r\n    headerShown: false,\r\n    title: 'Curvas'\r\n  }}>\r\n    <AppStack.Screen name=\"home\" component={Home} />\r\n    <AppStack.Screen name=\"profile\" component={Profile} />\r\n    <AppStack.Screen name=\"questionlist\" component={QuestionList} />\r\n    <AppStack.Screen name=\"questionview\" component={QuestionView} />\r\n    <AppStack.Screen name=\"questioncreate\" component={QuestionCreate} />\r\n    <AppStack.Screen name=\"quizview\" component={QuizView} />\r\n  </AppStack.Navigator>\r\n);\r\n\r\nexport default AppRoutes;","import React, { useContext, useState } from \"react\";\r\nimport { StatusBar } from \"expo-status-bar\";\r\nimport { Image, StyleSheet, View, ScrollView } from \"react-native\";\r\nimport { Button, Text, useTheme } from \"react-native-paper\";\r\nimport AuthContext from \"../../contexts/auth\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport Snackbar from \"../../components/Snackbar\";\r\nimport pkg from \"../../../package.json\";\r\nimport TextInput from \"../../components/TextInput\";\r\n\r\nconst SignIn = () => {\r\n  const { login } = useContext(AuthContext);\r\n  const theme = useTheme();\r\n  const navigation = useNavigation();\r\n\r\n  const [securePassword, setSecurePassword] = useState(true);\r\n  const [snackbar, setSnackbar] = useState({\r\n    type: \"info\",\r\n    message: \"\",\r\n    visible: false,\r\n    alert: (msg, type) => {\r\n      setSnackbar({ ...snackbar, message: msg, type: type, visible: true });\r\n    },\r\n    hide: () => {\r\n      setSnackbar({ ...snackbar, visible: false });\r\n    },\r\n  });\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  async function handleSignIn() {\r\n    await login(username, password, snackbar.alert);\r\n  }\r\n\r\n  const swipeToSignUp = () => {\r\n    navigation.navigate(\"signup\");\r\n  };\r\n\r\n  const toggleSecurePassword = () => {\r\n    setSecurePassword(!securePassword);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ScrollView\r\n        style={{ backgroundColor: theme?.colors?.primary }}\r\n        contentContainerStyle={{\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Snackbar\r\n          hide={snackbar.hide}\r\n          message={snackbar.message}\r\n          type={snackbar.type}\r\n          visible={snackbar.visible}\r\n        />\r\n        <Image\r\n          style={styles.logo}\r\n          source={require(\"../../../assets/logo_variant.png\")}\r\n        />\r\n        <View style={styles.sm_container}>\r\n          <Text\r\n            style={[\r\n              styles.title,\r\n              {\r\n                color: theme?.colors?.background,\r\n                fontFamily: \"Roboto-Medium\",\r\n              },\r\n            ]}\r\n          >\r\n            Boas-vindas\r\n          </Text>\r\n\r\n          <TextInput\r\n            value={username}\r\n            onChangeText={setUsername}\r\n            leftIcon=\"account\"\r\n            leftPress={() =>\r\n              snackbar.alert(\r\n                \"Neste campo você deve inserir o seu nome de usuário\",\r\n                \"info\"\r\n              )\r\n            }\r\n            placeholder=\"E-mail\"\r\n            style={styles.input}\r\n          />\r\n\r\n          <TextInput\r\n            value={password}\r\n            onChangeText={setPassword}\r\n            leftIcon=\"key-variant\"\r\n            leftPress={() =>\r\n              snackbar.alert(\r\n                \"Neste campo você deve inserir a sua palavra-chave\",\r\n                \"info\"\r\n              )\r\n            }\r\n            rightIcon={securePassword ? \"eye-outline\" : \"eye\"}\r\n            rightPress={toggleSecurePassword}\r\n            secure={securePassword}\r\n            placeholder=\"Senha\"\r\n            style={styles.input}\r\n          />\r\n\r\n          <Button\r\n            style={[\r\n              styles.square_button,\r\n              {\r\n                backgroundColor: theme?.colors?.background,\r\n                marginTop: 25,\r\n                borderRadius: 5,\r\n              },\r\n            ]}\r\n            placeholder=\"password\"\r\n            labelStyle={{ fontFamily: \"Roboto-Bold\" }}\r\n            textColor={theme?.colors?.primary}\r\n            mode=\"contained\"\r\n            onPress={handleSignIn}\r\n          >\r\n            Conectar\r\n          </Button>\r\n\r\n          <Button\r\n            style={[\r\n              styles.square_button,\r\n              {\r\n                backgroundColor: theme?.colors?.primary,\r\n              },\r\n            ]}\r\n            labelStyle={{ fontFamily: \"Roboto-Bold\" }}\r\n            textColor={theme?.colors?.background}\r\n            mode=\"text\"\r\n            onPress={swipeToSignUp}\r\n          >\r\n            Cadastrar\r\n          </Button>\r\n          <StatusBar style=\"auto\" />\r\n        </View>\r\n      </ScrollView>\r\n\r\n      <Text\r\n        style={{\r\n          ...styles.bottomText,\r\n          color: theme?.colors?.background,\r\n        }}\r\n      >\r\n        Curvas {pkg?.version}\r\n      </Text>\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: \"#fff\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  sm_container: {\r\n    width: 310,\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    fontWeight: \"500\",\r\n    marginBottom: 8,\r\n  },\r\n  input: {\r\n    marginBottom: 2,\r\n    marginTop: 2,\r\n  },\r\n  square_button: {\r\n    borderRadius: 0,\r\n    marginBottom: 5,\r\n    marginTop: 5,\r\n  },\r\n  logo: {\r\n    marginTop: 55,\r\n    marginBottom: 40,\r\n    width: 64,\r\n    height: 128,\r\n  },\r\n  bottomText: {\r\n    position: \"absolute\",\r\n    bottom: 0,\r\n    margin: 5,\r\n    fontFamily: \"Roboto-Bold\",\r\n  },\r\n});\r\n\r\nexport default SignIn;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { StatusBar } from \"expo-status-bar\";\r\nimport { Image, ScrollView, StyleSheet, View } from \"react-native\";\r\nimport { Button, Text, useTheme } from \"react-native-paper\";\r\nimport AuthContext from \"../../../contexts/auth\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport TextInput from \"../../../components/TextInput\";\r\n\r\nconst Form = ({ alert, formType }) => {\r\n  const { login } = useContext(AuthContext);\r\n  const theme = useTheme();\r\n  const navigation = useNavigation();\r\n\r\n  const [securePassword, setSecurePassword] = useState(true);\r\n  const [secureRePassword, setSecureRePassword] = useState(true);\r\n\r\n  async function handleSignIn() {\r\n    await login(\"admin\", \"p4ssw0rd\");\r\n  }\r\n\r\n  const swipeToSignUp = () => {\r\n    navigation.navigate(\"signin\");\r\n  };\r\n\r\n  const toggleSecurePassword = () => {\r\n    setSecurePassword(!securePassword);\r\n  };\r\n\r\n  const toggleSecureRePassword = () => {\r\n    setSecureRePassword(!secureRePassword);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ScrollView\r\n        style={{ backgroundColor: theme?.colors?.primary }}\r\n        contentContainerStyle={{\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Image\r\n          style={styles.logo}\r\n          source={require(\"../../../../assets/logo_variant.png\")}\r\n        />\r\n        <View style={styles.sm_container}>\r\n          <Text\r\n            style={[\r\n              styles.title,\r\n              {\r\n                color: theme?.colors?.background,\r\n                fontFamily: \"Roboto-Medium\",\r\n              },\r\n            ]}\r\n          >\r\n            Cadastro de {formType?.charAt(0)?.toUpperCase() + formType?.slice(1)??\"\"}\r\n          </Text>\r\n\r\n          <TextInput\r\n            leftIcon=\"account\"\r\n            leftPress={() =>\r\n              alert(\r\n                \"Neste campo você deve inserir o seu nome de usuário\",\r\n                \"info\"\r\n              )\r\n            }\r\n            placeholder=\"E-mail\"\r\n            style={styles.input}\r\n          />\r\n\r\n          <TextInput\r\n            leftIcon=\"key-variant\"\r\n            leftPress={() =>\r\n              alert(\"Neste campo você deve inserir a sua palavra-chave\", \"info\")\r\n            }\r\n            rightIcon={securePassword ? \"eye-outline\" : \"eye\"}\r\n            rightPress={toggleSecurePassword}\r\n            placeholder=\"Senha\"\r\n            style={styles.input}\r\n            secure={securePassword}\r\n          />\r\n\r\n          <TextInput\r\n            leftIcon=\"key-variant\"\r\n            leftPress={() =>\r\n              alert(\"Neste campo você deve repetir a sua palavra-chave\", \"info\")\r\n            }\r\n            rightIcon={secureRePassword ? \"eye-outline\" : \"eye\"}\r\n            rightPress={toggleSecureRePassword}\r\n            placeholder=\"Repetir Senha\"\r\n            style={styles.input}\r\n            secure={secureRePassword}\r\n          />\r\n\r\n          <Button\r\n            style={[\r\n              styles.square_button,\r\n              {\r\n                backgroundColor: theme?.colors?.background,\r\n                marginTop: 25,\r\n                borderRadius: 5,\r\n              },\r\n            ]}\r\n            placeholder=\"password\"\r\n            labelStyle={{ fontFamily: \"Roboto-Bold\" }}\r\n            textColor={theme?.colors?.primary}\r\n            mode=\"contained\"\r\n            onPress={handleSignIn}\r\n          >\r\n            Cadastrar\r\n          </Button>\r\n\r\n          <StatusBar style=\"auto\" />\r\n        </View>\r\n      </ScrollView>\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  sm_container: {\r\n    maxHeight: 350,\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    fontWeight: \"500\",\r\n    marginBottom: 8,\r\n  },\r\n  input: {\r\n    marginBottom: 2,\r\n    marginTop: 2,\r\n  },\r\n  square_button: {\r\n    borderRadius: 0,\r\n    marginBottom: 5,\r\n    marginTop: 5,\r\n  },\r\n  logo: {\r\n    marginTop: 55,\r\n    marginBottom: 40,\r\n    width: 64,\r\n    height: 128,\r\n  },\r\n});\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport { StatusBar } from \"expo-status-bar\";\r\nimport { StyleSheet, View, Image, ScrollView } from \"react-native\";\r\nimport { Text, useTheme, Button } from \"react-native-paper\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\n\r\nconst Guide = () => {\r\n  const theme = useTheme();\r\n\r\n  const navigation = useNavigation();\r\n\r\n  const handleReturn = () => {\r\n    navigation.navigate(\"signin\");\r\n  };\r\n\r\n  const textStyle = (styling = {}) => {\r\n    return {\r\n      ...styles.title,\r\n      color: theme?.colors?.background,\r\n      fontFamily: \"Roboto-Regular\",\r\n      marginBottom: 45,\r\n      ...styling,\r\n    };\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ScrollView\r\n        style={{ backgroundColor: theme?.colors?.primary }}\r\n        contentContainerStyle={{\r\n          flex: 1,\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\"\r\n        }}\r\n      >\r\n        <View style={styles.textbox}>\r\n          <Text style={textStyle()}>\r\n            Nos passos a seguir complete o seu cadastro. Tenha em mãos seu RG,\r\n            CPF e ID ou matrícula escolar.\r\n          </Text>\r\n          <Text style={textStyle({ marginBottom: 0 })}>\r\n            Vamos dar ínicio a essa experiência incrível?\r\n          </Text>\r\n\r\n          <Button\r\n            style={[\r\n              styles.square_button,\r\n              {\r\n                backgroundColor: theme?.colors?.background,\r\n                marginTop: 25,\r\n                borderRadius: 5\r\n              }\r\n            ]}\r\n            placeholder=\"password\"\r\n            labelStyle={{ fontFamily: \"Roboto-Bold\" }}\r\n            textColor={theme?.colors?.primary}\r\n            mode=\"contained\"\r\n            onPress={handleReturn}\r\n          >\r\n            Retornar para o Login\r\n          </Button>\r\n        </View>\r\n        <StatusBar style=\"auto\" />\r\n      </ScrollView>\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  title: {\r\n    fontSize: 16,\r\n    lineHeight: 27.28,\r\n    letterSpacing: 0.6,\r\n    fontWeight: \"500\",\r\n    marginBottom: 8,\r\n    textAlign: \"left\",\r\n  },\r\n  textbox: {\r\n    width: 300,\r\n  },\r\n  logo: {\r\n    position: \"absolute\",\r\n    top: \"10%\",\r\n    width: 64,\r\n    height: 128,\r\n  },\r\n});\r\n\r\nexport default Guide;\r\n","import React from \"react\";\r\nimport { StyleSheet } from \"react-native\";\r\nimport { RadioButton, Text, useTheme, TouchableRipple } from \"react-native-paper\";\r\n\r\nconst RadioButtonComponent = ({text, value, onPress, ...rest}) => {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n      <TouchableRipple style={styles.radio} rippleColor=\"rgba(0, 0, 0, .32)\" onPress={onPress}>\r\n        <>\r\n          <Text style={[{color: theme?.colors?.background}, styles.radioText]}>{text}</Text>\r\n          <RadioButton value={value} color={theme?.colors?.background} uncheckedColor={theme?.colors?.background} {...rest} />\r\n        </>\r\n      </TouchableRipple>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  radioText: {\r\n    fontSize: 20\r\n  },\r\n  radio: {\r\n    flexDirection: 'row-reverse',\r\n    justifyContent: 'flex-end',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 10\r\n  }\r\n});\r\n\r\nexport default RadioButtonComponent;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { StatusBar } from \"expo-status-bar\";\r\nimport { StyleSheet, View, Image, ScrollView } from \"react-native\";\r\nimport { RadioButton, Text, useTheme } from \"react-native-paper\";\r\nimport RadioButtonComponent from \"../../../components/RadioButtonComponent\";\r\n\r\nconst Type = ({ select = null, onSelect }) => {\r\n  const theme = useTheme();\r\n\r\n  const [value, setValue] = useState(select);\r\n\r\n  useEffect(() => {\r\n    onSelect(value);\r\n  }, [value]);\r\n\r\n  const textStyle = (styling = {}) => {\r\n    return { ...styles.title, ...styling };\r\n  };\r\n\r\n  const handleValue = (selected) => {\r\n    if (value === selected) {\r\n      setValue(null);\r\n      return;\r\n    }\r\n    setValue(selected);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ScrollView\r\n        style={{ backgroundColor: theme?.colors?.primary }}\r\n        contentContainerStyle={{\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Image\r\n          style={styles.logo}\r\n          source={require(\"../../../../assets/logo_variant.png\")}\r\n        />\r\n        <View style={styles.textbox}>\r\n          <Text\r\n            style={[\r\n              styles.title,\r\n              {\r\n                color: theme?.colors?.background,\r\n                paddingLeft: 16,\r\n                marginBottom: 10,\r\n              },\r\n            ]}\r\n          >\r\n            Eu sou:\r\n          </Text>\r\n          <RadioButton.Group value={value}>\r\n            <RadioButton.Item\r\n              labelStyle={textStyle({ color: theme?.colors?.background })}\r\n              style={\r\n                value === \"aluno\"\r\n                  ? { backgroundColor: theme?.colors?.secondary }\r\n                  : {}\r\n              }\r\n              color={theme?.colors?.background}\r\n              uncheckedColor={theme?.colors?.background}\r\n              label=\"Aluno\"\r\n              value=\"aluno\"\r\n              onPress={() => handleValue(\"aluno\")}\r\n            />\r\n            <RadioButton.Item\r\n              labelStyle={textStyle({ color: theme?.colors?.background })}\r\n              style={\r\n                value === \"professor\"\r\n                  ? { backgroundColor: theme?.colors?.secondary }\r\n                  : {}\r\n              }\r\n              color={theme?.colors?.background}\r\n              uncheckedColor={theme?.colors?.background}\r\n              label=\"Professor\"\r\n              value=\"professor\"\r\n              onPress={() => handleValue(\"professor\")}\r\n            />\r\n            <RadioButton.Item\r\n              labelStyle={textStyle({ color: theme?.colors?.background })}\r\n              style={\r\n                value === \"coordenador\"\r\n                  ? { backgroundColor: theme?.colors?.secondary }\r\n                  : {}\r\n              }\r\n              color={theme?.colors?.background}\r\n              uncheckedColor={theme?.colors?.background}\r\n              label=\"Coordenador\"\r\n              value=\"coordenador\"\r\n              onPress={() => handleValue(\"coordenador\")}\r\n            />\r\n            <RadioButton.Item\r\n              labelStyle={textStyle({ color: theme?.colors?.background })}\r\n              style={\r\n                value === \"gestor\"\r\n                  ? { backgroundColor: theme?.colors?.secondary }\r\n                  : {}\r\n              }\r\n              color={theme?.colors?.background}\r\n              uncheckedColor={theme?.colors?.background}\r\n              label=\"Gestor\"\r\n              value=\"gestor\"\r\n              onPress={() => handleValue(\"gestor\")}\r\n            />\r\n          </RadioButton.Group>\r\n        </View>\r\n        <StatusBar style=\"auto\" />\r\n      </ScrollView>\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  title: {\r\n    fontFamily: \"Roboto-Regular\",\r\n    fontSize: 16,\r\n    lineHeight: 27.28,\r\n    letterSpacing: 0.6,\r\n    fontWeight: \"500\",\r\n    marginBottom: 8,\r\n    textAlign: \"left\",\r\n  },\r\n  textbox: {\r\n    width: 300,\r\n  },\r\n  logo: {\r\n    marginTop: 55,\r\n    marginBottom: 40,\r\n    width: 64,\r\n    height: 128,\r\n  },\r\n  radio: {\r\n    flexDirection: \"row-reverse\",\r\n    justifyContent: \"flex-end\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n\r\nexport default Type;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport BottomNavbar from \"../../components/BottomNav\";\r\nimport { BottomNavigation } from \"react-native-paper\";\r\nimport Form from \"./Form\";\r\nimport Guide from \"./Guide\";\r\nimport Type from \"./Type\";\r\nimport Snackbar from \"../../components/Snackbar\";\r\n\r\nconst SignUp = () => {\r\n  const [formType, setFormType] = useState(null);\r\n  const [index, setIndex] = useState(0);\r\n  const [snackbar, setSnackbar] = useState({\r\n    type: \"info\",\r\n    message: \"\",\r\n    visible: false,\r\n    alert: (msg, type) => {\r\n      setSnackbar({...snackbar, message: msg, type: type, visible: true});\r\n    },\r\n    hide: () => {\r\n      setSnackbar({...snackbar, visible: false});\r\n    }\r\n  })\r\n  const routes = [\r\n    {\r\n      key: \"guide\",\r\n      title: \"Guia\",\r\n      focusedIcon: \"notebook\",\r\n      unfocusedIcon: \"notebook-outline\",\r\n      onRender: <Guide />,\r\n    },\r\n    {\r\n      key: \"type\",\r\n      title: \"Tipo de Cadastro\",\r\n      focusedIcon: \"human-greeting-variant\",\r\n      onRender: <Type select={formType} onSelect={setFormType} />,\r\n    },\r\n    {\r\n      key: \"form\",\r\n      title: \"Formulário\",\r\n      focusedIcon: \"form-select\",\r\n      onRender: <Form alert={snackbar?.alert} formType={formType} />,\r\n    },\r\n  ];\r\n\r\n  const onIndexChange = (number) => {\r\n    if (routes[number]?.key === \"form\" && !formType) {\r\n      snackbar.alert(\"Você deve selecionar um tipo de cadastro antes de avançar para o formulário\",\"error\");\r\n      return;\r\n    }\r\n\r\n    setIndex(number);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Snackbar hide={snackbar.hide} message={snackbar.message} type={snackbar.type} visible={snackbar.visible} />\r\n      {routes[index]?.onRender}\r\n      <View style={styles.floatingNavigator}>\r\n        <BottomNavbar\r\n          index={index}\r\n          onIndexChange={onIndexChange}\r\n          routes={routes}\r\n          renderScene={BottomNavigation.SceneMap({\r\n            guide: () => {},\r\n            type: () => {},\r\n            form: () => {},\r\n          })}\r\n        />\r\n      </View>\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  floatingNavigator: {\r\n    height: 80,\r\n    width: \"100%\",\r\n  },\r\n});\r\n\r\nexport default SignUp;\r\n","import { useNavigation } from \"@react-navigation/native\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport { Button, useTheme } from \"react-native-paper\";\r\n\r\nconst Splash = () => {\r\n  const theme = useTheme();\r\n  const navigation = useNavigation();\r\n\r\n  const skip = () => {\r\n    navigation.navigate('signin');\r\n  };\r\n\r\n  return (\r\n    <View\r\n      style={[styles.container, { backgroundColor: theme?.colors?.background }]}\r\n    >\r\n      <Button\r\n        mode=\"contained\"\r\n        onPress={skip}\r\n        contentStyle={{ margin: 10 }}\r\n        labelStyle={{\r\n          fontFamily: \"Roboto-Bold\",\r\n          paddingLeft: 50,\r\n          paddingRight: 50\r\n        }}\r\n        style={[\r\n          styles.buttonFixedToBottom,\r\n          {\r\n            borderRadius: 35\r\n          }\r\n        ]}\r\n      >\r\n        Começar Agora\r\n      </Button>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  buttonFixedToBottom: {\r\n    position: \"absolute\",\r\n    bottom: \"5%\",\r\n  },\r\n});\r\n\r\nexport default Splash;\r\n","import React from \"react\";\r\nimport SignIn from \"../screens/SignIn\";\r\nimport SignUp from \"../screens/SignUp\";\r\n// import { Instructions, SelectUserType } from \"../screens/SignUp\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport Splash from \"../screens/Splash\";\r\n\r\nconst AuthStack = createNativeStackNavigator();\r\n\r\nconst config = {\r\n  animation: 'spring',\r\n  config: {\r\n    stiffness: 1000,\r\n    damping: 500,\r\n    mass: 3,\r\n    overshootClamping: true,\r\n    restDisplacementThreshold: 0.01,\r\n    restSpeedThreshold: 0.01,\r\n  },\r\n};\r\n\r\nconst AuthRoutes = () => (\r\n  <AuthStack.Navigator\r\n    screenOptions={{\r\n      headerShown: false,\r\n      title: \"Conta - Curvas\",\r\n      animation: 'slide_from_right',\r\n    }}\r\n  >\r\n    <AuthStack.Screen name=\"signin\" component={SignIn} />\r\n    <AuthStack.Screen name=\"signup\" component={SignUp} />\r\n  </AuthStack.Navigator>\r\n);\r\n\r\nexport default AuthRoutes;","import React, { useContext } from \"react\";\r\nimport AuthContext from \"../contexts/auth\";\r\n\r\nimport AppRoutes from \"./app.routes\";\r\nimport AuthRoutes from \"./auth.routes\";\r\n\r\nimport { ActivityIndicator, useTheme } from \"react-native-paper\";\r\nimport { View } from \"react-native\";\r\n\r\nconst Routes = () => {\r\n  const { signed, loading } = useContext(AuthContext);\r\n  const theme = useTheme();\r\n\r\n  if (loading) {\r\n    return (\r\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\r\n        <ActivityIndicator\r\n          animating={true}\r\n          color={theme?.colors?.primary}\r\n          size={\"large\"}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {signed ? <AppRoutes /> : <AuthRoutes />}\r\n    </>\r\n  );\r\n};\r\nexport default Routes;\r\n","import { useFonts } from \"expo-font\";\r\nimport { createContext } from \"react\";\r\nimport { View } from \"react-native\";\r\nimport {\r\n  ActivityIndicator,\r\n  Provider as PaperProvider,\r\n} from \"react-native-paper\";\r\nimport config from \"../config/config\";\r\n\r\nconst { theme, fonts } = config;\r\n\r\nconst ThemeContext = createContext({});\r\n\r\nexport const ThemeProvider = ({ children }) => {\r\n  const [fontsLoaded] = useFonts(fonts);\r\n\r\n  if (!fontsLoaded) {\r\n    return (\r\n      <View\r\n        style={{\r\n          flex: 1,\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          height: \"100%\",\r\n          backgroundColor: theme?.colors?.primary,\r\n        }}\r\n      >\r\n        <ActivityIndicator color={theme?.colors?.background} size=\"large\" />\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{}}>\r\n      <PaperProvider theme={theme}>{children}</PaperProvider>\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeContext;\r\n","import { NavigationContainer } from \"@react-navigation/native\";\r\nimport Routes from \"./src/routes\";\r\nimport { AuthProvider } from \"./src/contexts/auth\";\r\nimport { ThemeProvider } from \"./src/contexts/theme\";\r\n\r\nconst state = {\r\n  screens: {\r\n    splash: \"\",\r\n    home: \"home\",\r\n    profile: \"profile\",\r\n    questionlist: \"question/list\",\r\n    questionview: \"question/view\",\r\n    questioncreate: \"question/create\",\r\n    signin: \"auth/signin\",\r\n    signup: \"auth/signup\",\r\n    quizview: \"quiz\"\r\n  },\r\n};\r\n\r\nconst linking = {\r\n  prefixes: [],\r\n  config: state,\r\n};\r\n\r\nexport default function App() {\r\n  return (\r\n    <ThemeProvider>\r\n      <NavigationContainer linking={linking}>\r\n        <AuthProvider>\r\n          <Routes />\r\n        </AuthProvider>\r\n      </NavigationContainer>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","module.exports = __webpack_public_path__ + \"./fonts/Roboto-Thin.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Roboto-Light.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Roboto-Regular.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Roboto-Bold.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Roboto-Medium.ttf\";","module.exports = __webpack_public_path__ + \"static/media/home-art.f9addeb3.png\";"],"sourceRoot":""}